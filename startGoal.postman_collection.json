{
	"info": {
		"_postman_id": "67803d68-1694-4638-b156-bd134f0f622d",
		"name": "StartGoals API Collection",
		"description": "Complete API documentation for StartGoals Learning Management System with all available endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28291685",
		"_collection_link": "https://cloudy-flare-612032.postman.co/workspace/My-Workspace~ab7d1040-7765-465a-8438-8b2664bfc80d/collection/28291685-67803d68-1694-4638-b156-bd134f0f622d?action=share&source=collection_link&creator=28291685"
	},
	"item": [
		{
			"name": "Courses API",
			"item": [
				{
					"name": "Get All Live Courses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/course/getAllCourses?limit=1&categoryId=&type=live&status=active&sortBy=createdAt&sortOrder=DESC&search=&page=1&isPaid&levelId",
							"host": [
								"{{host}}"
							],
							"path": [
								"course",
								"getAllCourses"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "categoryId",
									"value": ""
								},
								{
									"key": "type",
									"value": "live"
								},
								{
									"key": "status",
									"value": "active"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortOrder",
									"value": "DESC"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "isPaid",
									"value": null,
									"description": "true/false"
								},
								{
									"key": "levelId",
									"value": null
								}
							]
						},
						"description": "Retrieve all live courses with pagination, sorting, and filtering options. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get Single Live Course By ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{host}}/course/063a2741-c8fd-4fea-b10c-80013e1a373b",
							"host": [
								"{{host}}"
							],
							"path": [
								"course",
								"063a2741-c8fd-4fea-b10c-80013e1a373b"
							]
						},
						"description": "Retrieve all live courses with pagination, sorting, and filtering options. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get Course Batches",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/live-courses/{{course_id}}/batches?status=ongoing",
							"host": [
								"{{host}}"
							],
							"path": [
								"live-courses",
								"{{course_id}}",
								"batches"
							],
							"query": [
								{
									"key": "status",
									"value": "ongoing"
								}
							]
						},
						"description": "Retrieve all batches for a specific live course with optional status filtering. Admin access required."
					},
					"response": []
				}
			],
			"description": "API endpoints for managing live courses, batches, and sessions"
		},
		{
			"name": "Projects API",
			"item": [
				{
					"name": "Create Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"E-Commerce Platform with MERN Stack\",\n  \"description\": \"Complete e-commerce solution built with MongoDB, Express, React, and Node.js. Features include user authentication, product management, cart functionality, payment processing, and admin dashboard.\",\n  \"shortDescription\": \"Full-featured e-commerce platform using MERN stack\",\n  \"price\": 1299.99,\n  \"categoryId\": \"{{course_category_id}}\",\n  \"levelId\": \"{{course_level_id}}\",\n  \"languageId\": \"{{language_id}}\",\n  \"tags\": [\"MERN\", \"E-commerce\", \"React\", \"Node.js\", \"MongoDB\"],\n  \"techStack\": [\"React\", \"Node.js\", \"Express\", \"MongoDB\", \"Redux\"],\n  \"programmingLanguages\": [\"JavaScript\", \"TypeScript\"],\n  \"goals\": [\"Create a production-ready e-commerce platform\", \"Implement secure payment processing\"],\n  \"requirements\": \"Node.js 14+\\nMongoDB\\nReact 17+\\nNPM or Yarn package manager\",\n  \"features\": \"User registration and authentication\\nProduct catalog with categories and search\\nShopping cart and checkout process\\nPayment gateway integration\\nOrder tracking and history\\nAdmin dashboard for product management\\nUser reviews and ratings\\nResponsive design for mobile and desktop\",\n  \"whatYouGet\": \"Complete source code\\nDatabase schema and sample data\\nAPI documentation\\nInstallation and deployment guide\\nReadme file with instructions\\nRegular updates for 6 months\",\n  \"demoUrl\": \"https://ecommerce-demo.example.com\",\n  \"previewVideo\": \"https://www.youtube.com/watch?v=abc123xyz\",\n  \"coverImage\": \"https://example.com/images/ecommerce-cover.jpg\",\n  \"screenshots\": [\n    \"https://example.com/screenshots/ecommerce-1.jpg\",\n    \"https://example.com/screenshots/ecommerce-2.jpg\",\n    \"https://example.com/screenshots/ecommerce-3.jpg\"\n  ],\n  \"documentationUrl\": \"https://docs.example.com/ecommerce-docs\",\n  \"supportEmail\": \"support@example.com\",\n  \"supportIncluded\": true,\n  \"supportDuration\": 180,\n  \"version\": \"1.0.0\",\n  \"linkedTeacherId\": \"{{teacher_user_id}}\",\n  \"licenseType\": \"commercial\",\n  \"discountEnabled\": true,\n  \"featured\": true,\n  \"status\": \"published\"\n}"
						},
						"url": {
							"raw": "{{host}}/projects/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"create"
							]
						},
						"description": "Create a new downloadable project with details, resources, and linked files. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/projects/getAll?page=1&limit=10&sortBy=createdAt&sortOrder=ASC&status=published",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"getAll"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "createdAt"
								},
								{
									"key": "sortOrder",
									"value": "ASC"
								},
								{
									"key": "status",
									"value": "published"
								}
							]
						},
						"description": "Retrieve all projects with pagination, sorting, and filtering options. Public endpoint."
					},
					"response": []
				},
				{
					"name": "Get Project By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/projects/7c435e0c-9504-4a10-b474-0c5f9c989cf5",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"7c435e0c-9504-4a10-b474-0c5f9c989cf5"
							]
						},
						"description": "Get detailed information about a specific project. Public endpoint."
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"E-Commerce Platform with MERN Stack (Updated)\",\n  \"description\": \"Updated complete e-commerce solution built with MongoDB, Express, React, and Node.js. New features include multi-language support, theme customization, and advanced analytics.\",\n  \"shortDescription\": \"Enhanced full-featured e-commerce platform using MERN stack\",\n  \"price\": 1499.99,\n  \"features\": \"User registration and authentication\\nProduct catalog with categories and search\\nShopping cart and checkout process\\nMulti-language support\\nTheme customization\\nAdvanced analytics dashboard\\nPayment gateway integration\\nOrder tracking and history\\nAdmin dashboard for product management\\nUser reviews and ratings\\nResponsive design for mobile and desktop\",\n  \"version\": \"2.0.0\",\n  \"status\": \"published\",\n  \"featured\": true\n}"
						},
						"url": {
							"raw": "{{host}}/projects/{{project_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Update an existing project with new details and resources. Admin access required."
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/projects/{{project_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Delete a project and all associated resources. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get Project Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/projects/{{project_id}}/statistics",
							"host": [
								"{{host}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"statistics"
							]
						},
						"description": "Get detailed statistics about a project including sales, downloads, and ratings. Admin access required."
					},
					"response": []
				}
			],
			"description": "API endpoints for managing downloadable projects, files, and related resources"
		},
		{
			"name": "Exams API",
			"item": [
				{
					"name": "Create Exam",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"examName\": \"TNPSC Group 2 Preliminary Exam\",\n  \"description\": \"Tamil Nadu Public Service Commission preliminary examination for Group 2 services\",\n  \"levelId\": \"{{course_level_id}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/exams",
							"host": [
								"{{host}}"
							],
							"path": [
								"exams"
							]
						},
						"description": "Create a new exam with details and difficulty level. Admin access required."
					},
					"response": []
				},
				{
					"name": "Bulk Upload Exams",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"exams\": [\n    {\n      \"examName\": \"TNPSC Group 1 Exam\",\n      \"description\": \"Tamil Nadu Public Service Commission examination for Group 1 services\",\n      \"level\": \"Advanced\"\n    },\n    {\n      \"examName\": \"TNPSC Group 2 Exam\",\n      \"description\": \"Tamil Nadu Public Service Commission examination for Group 2 services\",\n      \"level\": \"Intermediate\"\n    },\n    {\n      \"examName\": \"TNPSC Group 4 Exam\",\n      \"description\": \"Tamil Nadu Public Service Commission examination for Group 4 services\",\n      \"level\": \"Beginner\"\n    },\n    {\n      \"examName\": \"TNSURB SI Exam\",\n      \"description\": \"Tamil Nadu Uniformed Services Recruitment Board Sub-Inspector examination\",\n      \"level\": \"Advanced\"\n    },\n    {\n      \"examName\": \"TNSURB Constable Exam\",\n      \"description\": \"Tamil Nadu Uniformed Services Recruitment Board Constable examination\",\n      \"level\": \"Beginner\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/exams/saveAllExams",
							"host": [
								"{{host}}"
							],
							"path": [
								"exams",
								"saveAllExams"
							]
						},
						"description": "Upload multiple exams in a single operation. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get All Exams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/exam/getAll?page=1&limit=10",
							"host": [
								"{{host}}"
							],
							"path": [
								"exam",
								"getAll"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Retrieve all exams with pagination. Public endpoint."
					},
					"response": []
				},
				{
					"name": "Get Exam By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/exam/dd463def-f01c-486e-b683-a15d0ed14cba",
							"host": [
								"{{host}}"
							],
							"path": [
								"exam",
								"dd463def-f01c-486e-b683-a15d0ed14cba"
							]
						},
						"description": "Get detailed information about a specific exam. Public endpoint."
					},
					"response": []
				},
				{
					"name": "Update Exam",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"examName\": \"TNPSC Group 2 Main Exam (Updated)\",\n  \"description\": \"Updated description for Tamil Nadu Public Service Commission main examination for Group 2 services\",\n  \"levelId\": \"{{course_level_id}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/exams/{{exam_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"exams",
								"{{exam_id}}"
							]
						},
						"description": "Update an existing exam with new details. Admin access required."
					},
					"response": []
				},
				{
					"name": "Delete Exam",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_ADMIN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/exams/{{exam_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"exams",
								"{{exam_id}}"
							]
						},
						"description": "Delete an exam and all associated resources. Admin access required."
					},
					"response": []
				},
				{
					"name": "Get Exams By Level",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/exam/getExamsByLevel/6accc647-e68d-4ef6-ac94-ffecb1dc6c9f",
							"host": [
								"{{host}}"
							],
							"path": [
								"exam",
								"getExamsByLevel",
								"6accc647-e68d-4ef6-ac94-ffecb1dc6c9f"
							]
						},
						"description": "Get all exams for a specific difficulty level. Public endpoint."
					},
					"response": []
				}
			],
			"description": "API endpoints for managing exams, questions, and related resources"
		},
		{
			"name": "Banner Routes API Collection",
			"item": [
				{
					"name": "Get All Banners",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/banners/getAll",
							"host": [
								"{{host}}"
							],
							"path": [
								"banners",
								"getAll"
							]
						},
						"description": "Get all banners with pagination (Admin only)"
					},
					"response": []
				}
			],
			"description": "API endpoints for banner management system"
		},
		{
			"name": "Course Level Management API",
			"item": [
				{
					"name": "Bulk Upload Course Levels",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"courseLevels\": [\n    {\n      \"name\": \"Beginner\",\n      \"description\": \"Introductory level for new learners\",\n      \"order\": 1\n    },\n    {\n      \"name\": \"Intermediate\",\n      \"description\": \"For learners with basic knowledge\",\n      \"order\": 2\n    },\n    {\n      \"name\": \"Advanced\",\n      \"description\": \"For experienced learners\",\n      \"order\": 3\n    },\n    {\n      \"name\": \"Expert\",\n      \"description\": \"Master level content\",\n      \"order\": 4\n    }\n  ],\n  \"overwriteExisting\": true\n}"
						},
						"url": {
							"raw": "{{host}}/course-levels/bulk-upload",
							"host": [
								"{{host}}"
							],
							"path": [
								"course-levels",
								"bulk-upload"
							]
						},
						"description": "Upload multiple course levels in a single operation. Supports prerequisite validation and conflict resolution options."
					},
					"response": []
				},
				{
					"name": "Get Course Level by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/course-levels/6accc647-e68d-4ef6-ac94-ffecb1dc6c9f",
							"host": [
								"{{host}}"
							],
							"path": [
								"course-levels",
								"6accc647-e68d-4ef6-ac94-ffecb1dc6c9f"
							]
						},
						"description": "Get detailed information about a specific course level. Public endpoint that doesn't require authentication."
					},
					"response": []
				},
				{
					"name": "Get All Course Levels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/course-levels/getAll?sortBy=order&sortOrder=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"course-levels",
								"getAll"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "order",
									"description": "Sort field (order, name, difficultyScore, createdAt)"
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort order (asc, desc)"
								}
							]
						},
						"description": "Retrieve all course levels with optional statistics. Returns levels in hierarchical order with prerequisite relationships."
					},
					"response": []
				}
			],
			"description": "API collection for managing course levels including bulk upload operations, level retrieval, and level-specific data management.\n\n**Features:**\n- Bulk upload course levels\n- Retrieve all course levels\n- Get specific course level details\n- Level-based course organization\n\n**Base URL:** `/api/course-levels`\n\n**Authentication:** Teacher role required for management operations, public access for viewing individual levels"
		},
		{
			"name": "File Upload API",
			"item": [
				{
					"name": "Upload Files",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"description": "Upload multiple files (documents, images, videos)",
									"type": "file",
									"src": "/C:/Users/NaRPaVi Enterprises/Downloads/case_KABC010341322023 (3).xlsx"
								}
							]
						},
						"url": {
							"raw": "{{host}}/upload/upload-file",
							"host": [
								"{{host}}"
							],
							"path": [
								"upload",
								"upload-file"
							]
						},
						"description": "Upload multiple files with metadata and access control options. Supports various file types including documents, images, videos, and course materials.\n\n**Supported File Types:**\n- Documents: PDF, DOC, DOCX, TXT, RTF\n- Images: JPG, JPEG, PNG, GIF, SVG, WEBP\n- Videos: MP4, AVI, MOV, WMV, FLV\n- Archives: ZIP, RAR, 7Z\n- Presentations: PPT, PPTX\n- Spreadsheets: XLS, XLSX\n- Audio: MP3, WAV, AAC\n\n**Security Features:**\n- File type validation\n- Size limits enforcement\n- Virus scanning\n- Access control by roles\n- Secure storage with encryption\n\n**Upload Categories:**\n- course_material: Course-related files\n- project_file: Project assets and deliverables\n- profile_image: User profile pictures\n- document: General documents\n- assignment: Student assignments\n- resource: Learning resources\n- certificate: Certificates and achievements"
					},
					"response": []
				}
			],
			"description": "API collection for handling file uploads with support for multiple file types, secure storage, and authenticated access.\n\n**Features:**\n- Multi-file upload support\n- Authenticated file uploads\n- Dynamic file handling\n- Secure file storage\n- File type validation\n\n**Base URL:** `/api/file-upload`\n\n**Authentication:** Bearer token required for all file upload operations"
		},
		{
			"name": "Goal Routes API Collection",
			"item": [
				{
					"name": "Bulk Upload Goals",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"goals\": [\n    {\n      \"title\": \"Full Stack Web Development\",\n      \"description\": \"Master both frontend and backend web development\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Data Science & Analytics\",\n      \"description\": \"Learn data analysis, machine learning, and statistical modeling\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Mobile App Development\",\n      \"description\": \"Build native and cross-platform mobile applications\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Cloud Computing\",\n      \"description\": \"Master AWS, Azure, and Google Cloud platforms\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"DevOps Engineering\",\n      \"description\": \"Learn CI/CD, containerization, and infrastructure automation\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Cybersecurity\",\n      \"description\": \"Understand security principles and ethical hacking\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Artificial Intelligence\",\n      \"description\": \"Develop AI models and neural networks\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Game Development\",\n      \"description\": \"Create 2D and 3D games using modern engines\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Blockchain Development\",\n      \"description\": \"Build decentralized applications and smart contracts\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Database Administration\",\n      \"description\": \"Master SQL and NoSQL database management\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"UI/UX Design\",\n      \"description\": \"Design user-friendly interfaces and experiences\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"title\": \"Python Programming\",\n      \"description\": \"Master Python for various applications\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"title\": \"JavaScript Mastery\",\n      \"description\": \"Become proficient in modern JavaScript and frameworks\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"System Programming\",\n      \"description\": \"Learn low-level programming with C/C++ and Rust\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"API Development\",\n      \"description\": \"Design and build RESTful and GraphQL APIs\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Machine Learning Operations\",\n      \"description\": \"Deploy and monitor ML models in production\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Frontend Frameworks\",\n      \"description\": \"Master React, Vue, and Angular frameworks\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Microservices Architecture\",\n      \"description\": \"Design scalable distributed systems\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Version Control\",\n      \"description\": \"Master Git and collaborative development workflows\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"title\": \"Software Testing\",\n      \"description\": \"Learn unit, integration, and end-to-end testing\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Open Source Contribution\",\n      \"description\": \"Contribute to open source projects and communities\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"title\": \"Technical Writing\",\n      \"description\": \"Write clear documentation and technical articles\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"title\": \"Project Management\",\n      \"description\": \"Learn Agile, Scrum, and project planning methodologies\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"title\": \"Computer Vision\",\n      \"description\": \"Process and analyze visual data using AI\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"title\": \"Natural Language Processing\",\n      \"description\": \"Build systems that understand human language\",\n      \"level\": \"advanced\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/goal/saveAllGoals",
							"host": [
								"{{host}}"
							],
							"path": [
								"goal",
								"saveAllGoals"
							]
						},
						"description": "Bulk upload multiple learning goals (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Goals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/goal/getAllGoals",
							"host": [
								"{{host}}"
							],
							"path": [
								"goal",
								"getAllGoals"
							]
						},
						"description": "Get all available learning goals"
					},
					"response": []
				}
			],
			"description": "API endpoints for goal management system"
		},
		{
			"name": "Exam Routes API Collection",
			"item": [
				{
					"name": "Bulk Upload Exams",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"exams\": [\n    {\n      \"examName\": \"TNPSC\",\n      \"description\": \"Tamil Nadu Public Service Commission exam for various state government posts\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"TNSURB\",\n      \"description\": \"Tamil Nadu Uniformed Services Recruitment Board exam for police and fire services\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"SSC CGL\",\n      \"description\": \"Staff Selection Commission Combined Graduate Level exam for central government jobs\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"UPSC Civil Services\",\n      \"description\": \"Union Public Service Commission exam for IAS, IPS, and other civil services\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"IBPS PO\",\n      \"description\": \"Institute of Banking Personnel Selection Probationary Officer exam\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"SBI Clerk\",\n      \"description\": \"State Bank of India Clerk recruitment exam\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"examName\": \"NEET\",\n      \"description\": \"National Eligibility cum Entrance Test for medical courses\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"JEE Main\",\n      \"description\": \"Joint Entrance Examination Main for engineering admissions\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"GATE\",\n      \"description\": \"Graduate Aptitude Test in Engineering for postgraduate admissions and PSU jobs\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"CAT\",\n      \"description\": \"Common Admission Test for MBA/management programs\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"RRB NTPC\",\n      \"description\": \"Railway Recruitment Board Non-Technical Popular Categories exam\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"LIC AAO\",\n      \"description\": \"Life Insurance Corporation Assistant Administrative Officer exam\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"NDA\",\n      \"description\": \"National Defence Academy entrance exam\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"CLAT\",\n      \"description\": \"Common Law Admission Test for law programs\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"TET\",\n      \"description\": \"Teacher Eligibility Test for school teacher recruitment\",\n      \"level\": \"beginner\"\n    },\n    {\n      \"examName\": \"UGC NET\",\n      \"description\": \"University Grants Commission National Eligibility Test for lectureship and JRF\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"JAM\",\n      \"description\": \"Joint Admission Test for M.Sc. programs\",\n      \"level\": \"advanced\"\n    },\n    {\n      \"examName\": \"CMAT\",\n      \"description\": \"Common Management Admission Test for MBA programs\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"AIIMS Nursing\",\n      \"description\": \"All India Institute of Medical Sciences Nursing entrance exam\",\n      \"level\": \"intermediate\"\n    },\n    {\n      \"examName\": \"ISRO Scientist\",\n      \"description\": \"Indian Space Research Organisation Scientist/Engineer recruitment exam\",\n      \"level\": \"advanced\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/exam/saveAllExams",
							"host": [
								"{{host}}"
							],
							"path": [
								"exam",
								"saveAllExams"
							]
						},
						"description": "Bulk upload multiple learning goals (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Exams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/exam/getAllExams",
							"host": [
								"{{host}}"
							],
							"path": [
								"exam",
								"getAllExams"
							]
						},
						"description": "Get all available learning goals"
					},
					"response": []
				}
			],
			"description": "API endpoints for goal management system"
		},
		{
			"name": "Categories Routes API Collection",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/category/getAllCategories",
							"host": [
								"{{host}}"
							],
							"path": [
								"category",
								"getAllCategories"
							]
						},
						"description": "Get all available learning goals"
					},
					"response": []
				}
			],
			"description": "API endpoints for goal management system"
		},
		{
			"name": "Language Management",
			"item": [
				{
					"name": "Create Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Language created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('languageId');",
									"});",
									"",
									"// Store language ID for other tests",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('lastLanguageId', response.data.languageId);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"language\": \"Spanish\",\n  \"languageCode\": \"es\",\n  \"nativeName\": \"EspaÃ±ol\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/languages",
							"host": [
								"{{host}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Create a new language with comprehensive localization settings."
					},
					"response": []
				},
				{
					"name": "Get All Languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Languages retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.have.property('languages');",
									"    pm.expect(response.data.languages).to.be.an('array');",
									"});",
									"",
									"pm.test('Pagination information included', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.have.property('pagination');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/language/getAllLanguages?page=1&limit=20&search=&isActive=true&sortBy=order&sortOrder=ASC&includeStats=true",
							"host": [
								"{{host}}"
							],
							"path": [
								"language",
								"getAllLanguages"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "isActive",
									"value": "true"
								},
								{
									"key": "sortBy",
									"value": "order"
								},
								{
									"key": "sortOrder",
									"value": "ASC"
								},
								{
									"key": "includeStats",
									"value": "true"
								}
							]
						},
						"description": "Retrieve all languages with filtering and sorting options."
					},
					"response": []
				},
				{
					"name": "Bulk Upload Languages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Bulk upload successful', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.createdCount).to.be.greaterThan(0);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"languages\": [\n    {\n      \"language\": \"English\",\n      \"languageCode\": \"en\",\n      \"nativeName\": \"English\"\n    },\n    {\n      \"language\": \"French\",\n      \"languageCode\": \"fr\",\n      \"nativeName\": \"Français\"\n    },\n    {\n      \"language\": \"German\",\n      \"languageCode\": \"de\",\n      \"nativeName\": \"Deutsch\"\n    },\n    {\n      \"language\": \"Italian\",\n      \"languageCode\": \"it\",\n      \"nativeName\": \"Italiano\"\n    },\n    {\n      \"language\": \"Hindi\",\n      \"languageCode\": \"hi\",\n      \"nativeName\": \"हिन्दी\"\n    },\n    {\n      \"language\": \"Tamil\",\n      \"languageCode\": \"ta\",\n      \"nativeName\": \"தமிழ்\"\n    },\n    {\n      \"language\": \"Spanish\",\n      \"languageCode\": \"es\",\n      \"nativeName\": \"Español\"\n    },\n    {\n      \"language\": \"Portuguese\",\n      \"languageCode\": \"pt\",\n      \"nativeName\": \"Português\"\n    },\n    {\n      \"language\": \"Chinese (Simplified)\",\n      \"languageCode\": \"zh-CN\",\n      \"nativeName\": \"简体中文\"\n    },\n    {\n      \"language\": \"Japanese\",\n      \"languageCode\": \"ja\",\n      \"nativeName\": \"日本語\"\n    },\n    {\n      \"language\": \"Korean\",\n      \"languageCode\": \"ko\",\n      \"nativeName\": \"한국어\"\n    },\n    {\n      \"language\": \"Arabic\",\n      \"languageCode\": \"ar\",\n      \"nativeName\": \"العربية\"\n    }\n  ],\n  \"options\": {\n    \"skipDuplicates\": true,\n    \"updateExisting\": true,\n    \"validateAll\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/language/saveAllLanguage",
							"host": [
								"{{host}}"
							],
							"path": [
								"language",
								"saveAllLanguage"
							]
						},
						"description": "Bulk upload multiple languages with validation options."
					},
					"response": []
				},
				{
					"name": "Update Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Language updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"language\": \"Spanish (Spain)\",\n  \"nativeName\": \"EspaÃ±ol (EspaÃ±a)\",\n  \"isActive\": true,\n  \"order\": 2,\n  \"flag\": \"https://cdn.example.com/flags/es.svg\",\n  \"metadata\": {\n    \"region\": \"ES\",\n    \"variant\": \"european\",\n    \"timezone\": \"Europe/Madrid\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/languages/:languageId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"languages",
								":languageId"
							],
							"variable": [
								{
									"key": "languageId",
									"value": "{{lastLanguageId}}"
								}
							]
						},
						"description": "Update an existing language with new information."
					},
					"response": []
				}
			]
		},
		{
			"name": "User Onboarding API",
			"item": [
				{
					"name": "Step 1: Select Languages",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"languageIds\": [\n        \"d186b7cc-b3f2-473e-abdc-2675470bd80a\"\n    ],\n    \"proficiencyLevels\": [\n        \"intermediate\"\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/onboarding/languages",
							"host": [
								"{{host}}"
							],
							"path": [
								"onboarding",
								"languages"
							]
						},
						"description": "First step of onboarding: User selects their preferred languages. Creates associations between user and selected languages. Validates that all language IDs exist before proceeding."
					},
					"response": []
				},
				{
					"name": "Step 2: Select Goal",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goalIds\": [\n        \"3a7c7032-495d-435b-81a0-1cf640bf0376\"\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/onboarding/goals",
							"host": [
								"{{host}}"
							],
							"path": [
								"onboarding",
								"goals"
							]
						},
						"description": "Second step of onboarding: User selects their learning goal. Updates user's goal and returns all skills related to the selected goal for the next step."
					},
					"response": []
				},
				{
					"name": "Step 3: Select Skills",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"skillIds\": [\n    \"7be8f69f-985c-4884-9c91-3278b623bce9\"\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/onboarding/skills",
							"host": [
								"{{host}}"
							],
							"path": [
								"onboarding",
								"skills"
							]
						},
						"description": "Final step of onboarding: User selects specific skills and completes onboarding. Validates that selected skills belong to the chosen goal, creates skill associations, and marks user as onboarded."
					},
					"response": []
				},
				{
					"name": "Step 4: Select Exams",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"examIds\": [\n    \"9b6d2c4c-32ab-4e90-8ac6-eb6825795b05\"\n  ]\n}"
						},
						"url": {
							"raw": "{{host}}/onboarding/exams",
							"host": [
								"{{host}}"
							],
							"path": [
								"onboarding",
								"exams"
							]
						},
						"description": "Final step of onboarding: User selects specific skills and completes onboarding. Validates that selected skills belong to the chosen goal, creates skill associations, and marks user as onboarded."
					},
					"response": []
				}
			],
			"description": "**COMPREHENSIVE USER ONBOARDING** - Complete user onboarding flow for new users including language selection, goal selection, and skills selection.\n\n**Onboarding Flow:**\n1. Language Selection - Users select preferred languages\n2. Goal Selection - Users choose their learning goal (returns related skills)\n3. Skills Selection - Users select specific skills and complete onboarding\n\n**Key Features:**\n- Multi-language preference selection\n- Goal-based skill recommendation\n- Skill validation against selected goal\n- Automatic onboarding completion marking\n- Progress tracking through onboarding steps\n\n**Base URL:** `/api/onboarding`\n\n**Authentication:** Required - User must be logged in\n\n**Process:** Sequential - Each step builds on the previous"
		},
		{
			"name": "OTP Management API Collection ",
			"item": [
				{
					"name": "OTP Verification",
					"item": [
						{
							"name": "Verify Registration OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"lakshmanan.coder@gmail.com\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-otp"
									]
								},
								"description": "Verify OTP after user registration. Supports both email and mobile identifiers. Returns user data and authentication token upon successful verification."
							},
							"response": []
						}
					]
				},
				{
					"name": "OTP Resend",
					"item": [
						{
							"name": "Resend Registration OTP (Email)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"lakshmanan.coder@gmail.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/resend-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"resend-otp"
									]
								},
								"description": "Resend OTP during registration process via email. Includes rate limiting (60 second cooldown)."
							},
							"response": []
						}
					]
				},
				{
					"name": "Password Reset Flow",
					"item": [
						{
							"name": "Send Password Reset OTP (Email)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/send-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"send-reset-otp"
									]
								},
								"description": "Send OTP for password reset to user's email. Validates user exists before sending."
							},
							"response": []
						},
						{
							"name": "Verify Password Reset OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-reset-otp"
									]
								},
								"description": "Verify OTP for password reset. Marks user as eligible for password reset upon successful verification."
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"newPassword\": \"newSecurePassword123!\",\n  \"confirmPassword\": \"newSecurePassword123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/reset-password",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"reset-password"
									]
								},
								"description": "Reset password using verified OTP. Requires OTP verification to be completed first."
							},
							"response": []
						}
					]
				}
			],
			"description": "Comprehensive OTP management API endpoints with advanced features including SMS/Email delivery, rate limiting, and password reset flows"
		},
		{
			"name": "Skill Routes API Collection",
			"item": [
				{
					"name": "Bulk Upload Skills",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_OWNER}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n      \"skillName\": \"Python\",\n      \"level\": \"intermediate\",\n      \"description\": \"Python programming language for data science and machine learning\"\n    },\n    {\n      \"skillName\": \"SQL\",\n      \"level\": \"intermediate\",\n      \"description\": \"Structured Query Language for database management\"\n    },\n    {\n      \"skillName\": \"TensorFlow\",\n      \"level\": \"advanced\",\n      \"description\": \"Machine learning framework for deep learning applications\"\n    },\n    {\n      \"skillName\": \"Pandas\",\n      \"level\": \"intermediate\",\n      \"description\": \"Python library for data manipulation and analysis\"\n    },\n    {\n      \"skillName\": \"Swift\",\n      \"level\": \"intermediate\",\n      \"description\": \"Programming language for iOS app development\"\n    },\n    {\n      \"skillName\": \"Kotlin\",\n      \"level\": \"intermediate\",\n      \"description\": \"Programming language for Android app development\"\n    },\n    {\n      \"skillName\": \"React Native\",\n      \"level\": \"advanced\",\n      \"description\": \"Framework for building cross-platform mobile applications\"\n    },\n    {\n      \"skillName\": \"Flutter\",\n      \"level\": \"intermediate\",\n      \"description\": \"UI toolkit for building cross-platform mobile applications\"\n    },\n    {\n      \"skillName\": \"AWS\",\n      \"level\": \"intermediate\",\n      \"description\": \"Amazon Web Services cloud platform\"\n    },\n    {\n      \"skillName\": \"Azure\",\n      \"level\": \"intermediate\",\n      \"description\": \"Microsoft Azure cloud platform\"\n    },\n    {\n      \"skillName\": \"GCP\",\n      \"level\": \"intermediate\",\n      \"description\": \"Google Cloud Platform services\"\n    },\n    {\n      \"skillName\": \"Docker\",\n      \"level\": \"intermediate\",\n      \"description\": \"Containerization platform for application deployment\"\n    },\n    {\n      \"skillName\": \"Kubernetes\",\n      \"level\": \"advanced\",\n      \"description\": \"Container orchestration platform for managing applications\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/skill/saveAllSkills",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"saveAllSkills"
							]
						},
						"description": "Bulk upload multiple skills (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Skills",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/skill/getAllSkills",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"getAllSkills"
							]
						},
						"description": "Get all available skills"
					},
					"response": []
				},
				{
					"name": "Get Skills by Goal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/skill/getSkillsByGoal/:goalId",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"getSkillsByGoal",
								":goalId"
							],
							"variable": [
								{
									"key": "goalId",
									"value": "1"
								}
							]
						},
						"description": "Get skills related to a specific goal"
					},
					"response": []
				}
			],
			"description": "API endpoints for skill management system"
		},
		{
			"name": "User Routes API Collection ",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "User Registration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"lakshmanan\",\n  \"email\": \"lakshmanan.coder@gmail.com\",\n  \"mobile\": \"6382775774\",\n  \"role\": \"student\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/user/userRegistration",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"user",
										"userRegistration"
									]
								},
								"description": "Register a new user. Email or mobile is required. Password is required for non-student roles. Role options: student, teacher, admin"
							},
							"response": []
						},
						{
							"name": "User Login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"lakshmanan.coder@gmail.com\",\n  \"password\": \"SecurePassword@123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/userLogin",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"userLogin"
									]
								},
								"description": "Login user. Identifier can be email or mobile. For students, OTP is sent. For other roles, password authentication is used."
							},
							"response": []
						},
						{
							"name": "User Login (Student with OTP)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"student@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/userLogin",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"userLogin"
									]
								},
								"description": "Login for student role - sends OTP to identifier (email/mobile)"
							},
							"response": []
						}
					]
				},
				{
					"name": "User Profile",
					"item": [
						{
							"name": "Get User Details by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/user/getUserData",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"getUserData"
									]
								},
								"description": "Get user details by ID including languages, goals, and skills"
							},
							"response": []
						},
						{
							"name": "Get Homepage",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{host}}/user/homepage",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"homepage"
									]
								},
								"description": "Get homepage data including banners, courses, categories, and user's enrolled courses"
							},
							"response": []
						}
					]
				}
			],
			"description": "Comprehensive API endpoints for user authentication and student management with all available fields"
		},
		{
			"name": "Cart Management",
			"item": [
				{
					"name": "Get User Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/cart",
							"host": [
								"{{host}}"
							],
							"path": [
								"cart"
							]
						},
						"description": "Get the current user's shopping cart contents."
					},
					"response": []
				},
				{
					"name": "Add to Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"b2996f7b-7e79-48b7-8ae9-ae7bb2b97d3f\"\n}"
						},
						"url": {
							"raw": "{{host}}/cart/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"cart",
								"add"
							]
						},
						"description": "Add an item to the user's shopping cart."
					},
					"response": []
				},
				{
					"name": "Remove from Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"{{course_id}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/cart/remove",
							"host": [
								"{{host}}"
							],
							"path": [
								"cart",
								"remove"
							]
						},
						"description": "Remove an item from the user's shopping cart."
					},
					"response": []
				},
				{
					"name": "Update Cart Item",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"b2996f7b-7e79-48b7-8ae9-ae7bb2b97d3f\",\n  \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{host}}/cart/update",
							"host": [
								"{{host}}"
							],
							"path": [
								"cart",
								"update"
							]
						},
						"description": "Update quantity or other attributes of a cart item."
					},
					"response": []
				},
				{
					"name": "Clear Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/cart/clear",
							"host": [
								"{{host}}"
							],
							"path": [
								"cart",
								"clear"
							]
						},
						"description": "Remove all items from the user's shopping cart."
					},
					"response": []
				},
				{
					"name": "Validate Discount Code",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"SPECIALOFFER_MDIHM82T_5\"\n}"
						},
						"url": {
							"raw": "{{host}}/discounts/validate",
							"host": [
								"{{host}}"
							],
							"path": [
								"discounts",
								"validate"
							]
						},
						"description": "Validate a discount code for application to cart items."
					},
					"response": []
				}
			],
			"description": "Endpoints for managing the shopping cart functionality."
		},
		{
			"name": "Wishlist Management",
			"item": [
				{
					"name": "Get User Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/wishlist",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist"
							]
						},
						"description": "Get the current user's wishlist contents."
					},
					"response": []
				},
				{
					"name": "Add to Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"0926d8ce-b962-487c-bbf1-2f18d0448c57\"\n}"
						},
						"url": {
							"raw": "{{host}}/wishlist/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist",
								"add"
							]
						},
						"description": "Add an item to the user's wishlist."
					},
					"response": []
				},
				{
					"name": "Remove from Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"{{course_id}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/wishlist/remove",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist",
								"remove"
							]
						},
						"description": "Remove an item from the user's wishlist."
					},
					"response": []
				},
				{
					"name": "Check Wishlist Status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{host}}/wishlist/status/course/0926d8ce-b962-487c-bbf1-2f18d0448c57",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist",
								"status",
								"course",
								"0926d8ce-b962-487c-bbf1-2f18d0448c57"
							]
						},
						"description": "Check if an item is in the user's wishlist."
					},
					"response": []
				},
				{
					"name": "Move to Cart",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"itemType\": \"course\",\n  \"itemId\": \"0926d8ce-b962-487c-bbf1-2f18d0448c57\"\n}"
						},
						"url": {
							"raw": "{{host}}/wishlist/move-to-cart",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist",
								"move-to-cart"
							]
						},
						"description": "Move an item from the wishlist to the cart."
					},
					"response": []
				},
				{
					"name": "Clear Wishlist",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/wishlist/clear",
							"host": [
								"{{host}}"
							],
							"path": [
								"wishlist",
								"clear"
							]
						},
						"description": "Remove all items from the user's wishlist."
					},
					"response": []
				}
			],
			"description": "Endpoints for managing the wishlist functionality."
		},
		{
			"name": "Checkout & Orders",
			"item": [
				{
					"name": "Create Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"discountCode\": \"SPECIALOFFER_MDIHM82T_5\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/payments/create-order",
							"host": [
								"{{host}}"
							],
							"path": [
								"payments",
								"create-order"
							]
						},
						"description": "Create a new order for checkout from cart items."
					},
					"response": []
				},
				{
					"name": "Verify Payment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderId\": \"{{order_id}}\",\n  \"paymentId\": \"{{payment_id}}\",\n  \"signature\": \"{{signature}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/payment/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"payment",
								"verify"
							]
						},
						"description": "Verify a payment after checkout completion."
					},
					"response": []
				},
				{
					"name": "Get Payment Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/payments/status/{{RAZORPAY_PAYMENT_ID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"payments",
								"status",
								"{{RAZORPAY_PAYMENT_ID}}"
							]
						},
						"description": "Get the status of a payment."
					},
					"response": []
				},
				{
					"name": "Get User Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/payments/orders",
							"host": [
								"{{host}}"
							],
							"path": [
								"payments",
								"orders"
							]
						},
						"description": "Get all orders for the current user."
					},
					"response": []
				},
				{
					"name": "Get User Purchases",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{JWT_TOKEN_STUDENT}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/payments/purchases",
							"host": [
								"{{host}}"
							],
							"path": [
								"payments",
								"purchases"
							]
						},
						"description": "Get all course purchases for the current user."
					},
					"response": []
				}
			],
			"description": "Endpoints for checkout process and order management."
		},
		{
			"name": "Ratings & Reviews API",
			"item": [
				{
					"name": "Course Ratings",
					"item": [
						{
							"name": "Rate a Course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 4.5,\n  \"review\": \"Excellent course! Very well structured and easy to follow.\",\n  \"isVerified\": true\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/courses/{{COURSE_ID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"courses",
										"{{COURSE_ID}}"
									]
								},
								"description": "Rate a course with a score from 1.0 to 5.0 and optional review text. Requires authentication."
							},
							"response": []
						},
						{
							"name": "Get Course Ratings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/courses/{{COURSE_ID}}?page=1&limit=10&sortBy=createdAt&sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"courses",
										"{{COURSE_ID}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										}
									]
								},
								"description": "Get all ratings and reviews for a specific course with pagination. Public endpoint."
							},
							"response": []
						},
						{
							"name": "Edit Course Review",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 5.0,\n  \"review\": \"Updated review: This course exceeded my expectations!\"\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/courses/reviews/{{RATING_ID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"courses",
										"reviews",
										"{{RATING_ID}}"
									]
								},
								"description": "Edit an existing course review. Only the review author can edit their review."
							},
							"response": []
						}
					],
					"description": "API endpoints for course rating and review functionality"
				},
				{
					"name": "Project Ratings",
					"item": [
						{
							"name": "Get Project Rating Stats",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/projects/{{PROJECT_ID}}/stats",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"projects",
										"{{PROJECT_ID}}",
										"stats"
									]
								},
								"description": "Get aggregated rating statistics for a project including average rating, total reviews, and rating distribution."
							},
							"response": []
						},
						{
							"name": "Get Project Reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/projects/{{PROJECT_ID}}/reviews?page=1&limit=10&sortBy=createdAt&sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"projects",
										"{{PROJECT_ID}}",
										"reviews"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										}
									]
								},
								"description": "Get all reviews for a specific project with pagination and sorting options."
							},
							"response": []
						},
						{
							"name": "Create Project Review",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 4.8,\n  \"review\": \"Amazing project with excellent documentation and code quality!\",\n  \"criteria\": {\n    \"codeQuality\": 5,\n    \"documentation\": 4,\n    \"usability\": 5,\n    \"valueForMoney\": 4\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/projects/{{PROJECT_ID}}/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"projects",
										"{{PROJECT_ID}}",
										"reviews"
									]
								},
								"description": "Create a review for a purchased project. Must have purchased the project to leave a review."
							},
							"response": []
						},
						{
							"name": "Edit Project Review",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 5.0,\n  \"review\": \"Updated: Absolutely fantastic project! Highly recommended.\",\n  \"criteria\": {\n    \"codeQuality\": 5,\n    \"documentation\": 5,\n    \"usability\": 5,\n    \"valueForMoney\": 5\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/projects/reviews/{{RATING_ID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"projects",
										"reviews",
										"{{RATING_ID}}"
									]
								},
								"description": "Edit an existing project review. Only the review author can edit their review."
							},
							"response": []
						}
					],
					"description": "API endpoints for project rating and review functionality"
				},
				{
					"name": "Instructor Ratings",
					"item": [
						{
							"name": "Rate an Instructor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 4.7,\n  \"review\": \"Excellent instructor with clear explanations and great teaching style!\",\n  \"criteria\": {\n    \"knowledgeLevel\": 5,\n    \"teachingClarity\": 4,\n    \"responsiveness\": 5,\n    \"courseStructure\": 4\n  }\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/instructors/{{TEACHER_UUID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"instructors",
										"{{TEACHER_UUID}}"
									]
								},
								"description": "Rate an instructor based on course experience. Requires authentication and course enrollment."
							},
							"response": []
						},
						{
							"name": "Get Instructor Ratings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/instructors/{{TEACHER_UUID}}?page=1&limit=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"instructors",
										"{{TEACHER_UUID}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Get all ratings and reviews for a specific instructor. Public endpoint."
							},
							"response": []
						}
					],
					"description": "API endpoints for instructor rating functionality"
				},
				{
					"name": "Review Interactions",
					"item": [
						{
							"name": "Mark Review as Helpful",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_STUDENT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isHelpful\": true\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/helpful/{{RATING_ID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"helpful",
										"{{RATING_ID}}"
									]
								},
								"description": "Mark a review as helpful or not helpful. Authenticated users only."
							},
							"response": []
						}
					],
					"description": "API endpoints for review interaction functionality"
				},
				{
					"name": "Admin Review Management",
					"item": [
						{
							"name": "Get All Reviews (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_OWNER}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/admin/reviews?page=1&limit=20&type=course&status=pending&sortBy=createdAt&sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"admin",
										"reviews"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "type",
											"value": "course",
											"description": "course, project, or instructor"
										},
										{
											"key": "status",
											"value": "pending",
											"description": "pending, approved, rejected, or hidden"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										}
									]
								},
								"description": "Get all reviews with comprehensive filtering for admin moderation. Admin access required."
							},
							"response": []
						},
						{
							"name": "Moderate Review (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_OWNER}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"approve\",\n  \"moderatorNote\": \"Review meets quality standards and is appropriate.\"\n}"
								},
								"url": {
									"raw": "{{host}}/ratings/admin/reviews/{{RATING_ID}}/moderate",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"admin",
										"reviews",
										"{{RATING_ID}}",
										"moderate"
									]
								},
								"description": "Moderate a specific review (approve/reject/hide). Admin access required. Actions: approve, reject, hide."
							},
							"response": []
						},
						{
							"name": "Get Review Analytics (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN_OWNER}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ratings/admin/reviews/analytics?period=month&type=all",
									"host": [
										"{{host}}"
									],
									"path": [
										"ratings",
										"admin",
										"reviews",
										"analytics"
									],
									"query": [
										{
											"key": "period",
											"value": "month",
											"description": "week, month, quarter, year"
										},
										{
											"key": "type",
											"value": "all",
											"description": "all, course, project, instructor"
										}
									]
								},
								"description": "Get comprehensive review analytics and statistics. Admin access required."
							},
							"response": []
						}
					],
					"description": "Admin endpoints for review moderation and analytics"
				}
			],
			"description": "Comprehensive API collection for ratings and reviews functionality including course ratings, project reviews, instructor ratings, and admin moderation tools."
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "56.228.37.122:8080/api",
			"type": "default"
		},
		{
			"key": "JWT_TOKEN_STUDENT",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk1YTA0MGZiLWI3ODYtNGQxZS1iY2JlLTIzOTcwZmRmYWY1NyIsInJvbGUiOiJzdHVkZW50IiwiaWF0IjoxNzQ5NjE5NTgxLCJleHAiOjE3NDk3MDU5ODF9.NHaQrTSOVWdvQ0-l5SsY5MqAwccFvKekS-HFEvEVQFc",
			"type": "default"
		},
		{
			"key": "JWT_TOKEN_TEACHER",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijc1NjY5YzZkLTM0MmYtNGRmMy05ZDNmLWRmMDA0OTA3N2QzZSIsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNzQ4OTM2MDU0LCJleHAiOjE3NDkwMjI0NTR9.I8-i3sfXjvZm9_aVGTjiuEzqvYPKzLG64aqgxwQZitU",
			"type": "default"
		},
		{
			"key": "JWT_TOKEN_OWNER",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE5Y2ViZjJmLTZjYTUtNDg1ZS1iZTY5LWNjYTdiNDFmZDhmNSIsInJvbGUiOiJvd25lciIsImlhdCI6MTc0ODkzNjI1NywiZXhwIjoxNzQ5MDIyNjU3fQ.YXEChvbRGlFLx1viF3ST0jRchJ9LH-CYr8yKxg239t8",
			"type": "default"
		},
		{
			"key": "STUDENT_UUID",
			"value": "95a040fb-b786-4d1e-bcbe-23970fdfaf57",
			"type": "default"
		},
		{
			"key": "TEACHER_UUID",
			"value": "75669c6d-342f-4df3-9d3f-df0049077d3e",
			"type": "default"
		},
		{
			"key": "OWNER_UUID",
			"value": "19cebf2f-6ca5-485e-be69-cca7b41fd8f5",
			"type": "default"
		},
		{
			"key": "ENGLISH_CODE",
			"value": "a9c1595d-f3d7-44a7-8386-3fc871dfc652",
			"type": "default"
		},
		{
			"key": "MOBILE_APP_CODE",
			"value": "05073f22-6f7c-4be0-89e7-4913fcbeedfd",
			"type": "default"
		},
		{
			"key": "BEGINNER_ID",
			"value": "22fbe629-213f-40aa-b164-1d711dcd2bc2",
			"type": "default"
		},
		{
			"key": "INTERMEDIATE_ID",
			"value": "57e3ca40-44a2-467d-81ef-28d7121bc844",
			"type": "default"
		},
		{
			"key": "ADVANCED_ID",
			"value": "0e991cf2-479d-4b8a-95f8-b61ab699364a",
			"type": "default"
		},
		{
			"key": "COURSE_ID",
			"value": "1e07c69d-87b2-418e-986b-63bd7c043c5f",
			"type": "default"
		},
		{
			"key": "BATCH_ID",
			"value": "9b57398d-6512-4efa-b37d-b5cd854bbef1",
			"type": "default"
		},
		{
			"key": "RATING_ID",
			"value": "",
			"type": "default"
		},
		{
			"key": "PROJECT_ID",
			"value": "",
			"type": "default"
		}
	]
}