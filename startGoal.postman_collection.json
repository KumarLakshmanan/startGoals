{
	"variable": [
		{
			"key": "host",
			"value": "56.228.37.122:8080/api",
			"enabled": true,
			"type": "default",
			"sessionValue": "56.228.37.122:8080/api",
			"completeSessionValue": "56.228.37.122:8080/api",
			"sessionIndex": 0
		},
		{
			"key": "JWT_TOKEN_STUDENT",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk1YTA0MGZiLWI3ODYtNGQxZS1iY2JlLTIzOTcwZmRmYWY1NyIsInJvbGUiOiJzdHVkZW50IiwiaWF0IjoxNzQ5NjE5NTgxLCJleHAiOjE3NDk3MDU5ODF9.NHaQrTSOVWdvQ0-l5SsY5MqAwccFvKekS-HFEvEVQFc",
			"enabled": true,
			"type": "default",
			"sessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk1YTA0MGZiLWI3ODYtNGQxZS1iY2JlLTIzOTcwZmRmYWY1NyIsInJvbGUiOiJzdHVkZW50IiwiaWF0IjoxNzQ5NjE5NTgxLCJleHAiOjE3NDk3MDU5ODF9.NHaQrTSOVWdvQ0-l5SsY5MqAwccFvKekS-HFEvEVQFc",
			"completeSessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk1YTA0MGZiLWI3ODYtNGQxZS1iY2JlLTIzOTcwZmRmYWY1NyIsInJvbGUiOiJzdHVkZW50IiwiaWF0IjoxNzQ5NjE5NTgxLCJleHAiOjE3NDk3MDU5ODF9.NHaQrTSOVWdvQ0-l5SsY5MqAwccFvKekS-HFEvEVQFc",
			"sessionIndex": 1
		},
		{
			"key": "JWT_TOKEN_TEACHER",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijc1NjY5YzZkLTM0MmYtNGRmMy05ZDNmLWRmMDA0OTA3N2QzZSIsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNzQ4OTM2MDU0LCJleHAiOjE3NDkwMjI0NTR9.I8-i3sfXjvZm9_aVGTjiuEzqvYPKzLG64aqgxwQZitU",
			"enabled": true,
			"type": "default",
			"sessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijc1NjY5YzZkLTM0MmYtNGRmMy05ZDNmLWRmMDA0OTA3N2QzZSIsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNzQ4OTM2MDU0LCJleHAiOjE3NDkwMjI0NTR9.I8-i3sfXjvZm9_aVGTjiuEzqvYPKzLG64aqgxwQZitU",
			"completeSessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijc1NjY5YzZkLTM0MmYtNGRmMy05ZDNmLWRmMDA0OTA3N2QzZSIsInJvbGUiOiJ0ZWFjaGVyIiwiaWF0IjoxNzQ4OTM2MDU0LCJleHAiOjE3NDkwMjI0NTR9.I8-i3sfXjvZm9_aVGTjiuEzqvYPKzLG64aqgxwQZitU",
			"sessionIndex": 2
		},
		{
			"key": "JWT_TOKEN_OWNER",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE5Y2ViZjJmLTZjYTUtNDg1ZS1iZTY5LWNjYTdiNDFmZDhmNSIsInJvbGUiOiJvd25lciIsImlhdCI6MTc0ODkzNjI1NywiZXhwIjoxNzQ5MDIyNjU3fQ.YXEChvbRGlFLx1viF3ST0jRchJ9LH-CYr8yKxg239t8",
			"enabled": true,
			"type": "default",
			"sessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE5Y2ViZjJmLTZjYTUtNDg1ZS1iZTY5LWNjYTdiNDFmZDhmNSIsInJvbGUiOiJvd25lciIsImlhdCI6MTc0ODkzNjI1NywiZXhwIjoxNzQ5MDIyNjU3fQ.YXEChvbRGlFLx1viF3ST0jRchJ9LH-CYr8yKxg239t8",
			"completeSessionValue": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE5Y2ViZjJmLTZjYTUtNDg1ZS1iZTY5LWNjYTdiNDFmZDhmNSIsInJvbGUiOiJvd25lciIsImlhdCI6MTc0ODkzNjI1NywiZXhwIjoxNzQ5MDIyNjU3fQ.YXEChvbRGlFLx1viF3ST0jRchJ9LH-CYr8yKxg239t8",
			"sessionIndex": 3
		},
		{
			"key": "STUDENT_UUID",
			"value": "95a040fb-b786-4d1e-bcbe-23970fdfaf57",
			"enabled": true,
			"type": "default",
			"sessionValue": "95a040fb-b786-4d1e-bcbe-23970fdfaf57",
			"completeSessionValue": "95a040fb-b786-4d1e-bcbe-23970fdfaf57",
			"sessionIndex": 4
		},
		{
			"key": "TEACHER_UUID",
			"value": "75669c6d-342f-4df3-9d3f-df0049077d3e",
			"enabled": true,
			"type": "default",
			"sessionValue": "75669c6d-342f-4df3-9d3f-df0049077d3e",
			"completeSessionValue": "75669c6d-342f-4df3-9d3f-df0049077d3e",
			"sessionIndex": 5
		},
		{
			"key": "OWNER_UUID",
			"value": "19cebf2f-6ca5-485e-be69-cca7b41fd8f5",
			"enabled": true,
			"type": "default",
			"sessionValue": "19cebf2f-6ca5-485e-be69-cca7b41fd8f5",
			"completeSessionValue": "19cebf2f-6ca5-485e-be69-cca7b41fd8f5",
			"sessionIndex": 6
		},
		{
			"key": "ENGLISH_CODE",
			"value": "a9c1595d-f3d7-44a7-8386-3fc871dfc652",
			"enabled": true,
			"type": "default",
			"sessionValue": "a9c1595d-f3d7-44a7-8386-3fc871dfc652",
			"completeSessionValue": "a9c1595d-f3d7-44a7-8386-3fc871dfc652",
			"sessionIndex": 7
		},
		{
			"key": "MOBILE_APP_CODE",
			"value": "05073f22-6f7c-4be0-89e7-4913fcbeedfd",
			"enabled": true,
			"type": "default",
			"sessionValue": "05073f22-6f7c-4be0-89e7-4913fcbeedfd",
			"completeSessionValue": "05073f22-6f7c-4be0-89e7-4913fcbeedfd",
			"sessionIndex": 8
		},
		{
			"key": "BEGINNER_ID",
			"value": "22fbe629-213f-40aa-b164-1d711dcd2bc2",
			"enabled": true,
			"type": "default",
			"sessionValue": "22fbe629-213f-40aa-b164-1d711dcd2bc2",
			"completeSessionValue": "22fbe629-213f-40aa-b164-1d711dcd2bc2",
			"sessionIndex": 9
		},
		{
			"key": "INTERMEDIATE_ID",
			"value": "57e3ca40-44a2-467d-81ef-28d7121bc844",
			"enabled": true,
			"type": "default",
			"sessionValue": "57e3ca40-44a2-467d-81ef-28d7121bc844",
			"completeSessionValue": "57e3ca40-44a2-467d-81ef-28d7121bc844",
			"sessionIndex": 10
		},
		{
			"key": "ADVANCED_ID",
			"value": "0e991cf2-479d-4b8a-95f8-b61ab699364a",
			"enabled": true,
			"type": "default",
			"sessionValue": "0e991cf2-479d-4b8a-95f8-b61ab699364a",
			"completeSessionValue": "0e991cf2-479d-4b8a-95f8-b61ab699364a",
			"sessionIndex": 11
		},
		{
			"key": "COURSE_ID",
			"value": "1e07c69d-87b2-418e-986b-63bd7c043c5f",
			"enabled": true,
			"type": "default",
			"sessionValue": "1e07c69d-87b2-418e-986b-63bd7c043c5f",
			"completeSessionValue": "1e07c69d-87b2-418e-986b-63bd7c043c5f",
			"sessionIndex": 12
		},
		{
			"key": "BATCH_ID",
			"value": "9b57398d-6512-4efa-b37d-b5cd854bbef1",
			"enabled": true,
			"type": "default",
			"sessionValue": "9b57398d-6512-4efa-b37d-b5cd854bbef1",
			"completeSessionValue": "9b57398d-6512-4efa-b37d-b5cd854bbef1",
			"sessionIndex": 13
		}
	],
	"info": {
		"_postman_id": "7adee3ba-7cd6-4c23-b0a7-ee897b8a0554",
		"name": "StartGoals API Collection - Complete",
		"description": "Complete API documentation for StartGoals Learning Management System with all available endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45194401"
	},
	"item": [
		{
			"description": "Comprehensive API collection for admin user management, role-based access control, activity tracking, and permissions management in the StartGoals platform.\n\n**Features:**\n- Admin user CRUD operations\n- Role-based permissions (Super Admin, Course Manager, Project Manager, Payment Manager, Certificate Manager)\n- Activity logging and monitoring\n- Password management\n- Data export capabilities\n- Security features with audit trails\n\n**Base URL:** `/api/admin/roles`\n\n**Authentication:** Bearer Token required for all endpoints",
			"name": "Admin Role Management API",
			"item": [
				{
					"name": "Admin User Management",
					"item": [
						{
							"name": "Get All Admin Users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins?role=course_manager\u0026status=active\u0026page=1\u0026limit=20\u0026sortBy=createdAt\u0026sortOrder=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins"
									],
									"query": [
										{
											"key": "role",
											"value": "course_manager",
											"description": "Filter by admin role (super_admin, course_manager, project_manager, payment_manager, certificate_manager)"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by status (active, inactive, suspended)"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, lastName, email, lastLogin)"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "Sort order (asc, desc)"
										}
									]
								},
								"description": "Retrieve all admin users with role filtering and analytics. Includes pagination, sorting, and comprehensive user data with activity scores."
							},
							"response": []
						},
						{
							"name": "Get Admin User Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1",
											"description": "Admin user ID"
										}
									]
								},
								"description": "Get specific admin user details with permissions and activity data. Supports self-access for limited profile viewing."
							},
							"response": []
						},
						{
							"name": "Create Admin User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Doe\",\n  \"email\": \"jane.doe@startgoals.com\",\n  \"password\": \"SecurePass123!\",\n  \"adminRole\": \"course_manager\",\n  \"permissions\": [\n    \"manage_courses\",\n    \"view_analytics\",\n    \"moderate_content\"\n  ],\n  \"sendWelcomeEmail\": true,\n  \"department\": \"Education\",\n  \"phoneNumber\": \"+1234567890\",\n  \"notes\": \"Course manager for technology courses\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins"
									]
								},
								"description": "Create a new admin user with specified role and permissions. Only Super Admin can create new admin accounts."
							},
							"response": []
						},
						{
							"name": "Update Admin User",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"jane.smith@startgoals.com\",\n  \"adminRole\": \"project_manager\",\n  \"permissions\": [\n    \"manage_projects\",\n    \"view_analytics\",\n    \"moderate_content\",\n    \"manage_downloads\"\n  ],\n  \"status\": \"active\",\n  \"department\": \"Project Management\",\n  \"phoneNumber\": \"+1234567891\",\n  \"notes\": \"Promoted to project manager role\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2",
											"description": "Admin user ID to update"
										}
									]
								},
								"description": "Update admin user details including role, permissions, and profile information. Self-access allowed for limited fields."
							},
							"response": []
						},
						{
							"name": "Change Admin Password",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\": \"OldPass123!\",\n  \"newPassword\": \"NewSecurePass456!\",\n  \"confirmPassword\": \"NewSecurePass456!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins/:userId/password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins",
										":userId",
										"password"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2",
											"description": "Admin user ID"
										}
									]
								},
								"description": "Change admin user password with current password verification. Supports self-password change and Super Admin override."
							},
							"response": []
						},
						{
							"name": "Delete Admin User",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/admins/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"admins",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3",
											"description": "Admin user ID to delete"
										}
									]
								},
								"description": "Delete admin user with safety checks. Prevents self-deletion and Super Admin deletion. Only accessible by Super Admin."
							},
							"response": []
						}
					],
					"description": "Admin user management endpoints for creating, reading, updating, and deleting admin accounts with role-based permissions."
				},
				{
					"name": "Activity Tracking",
					"item": [
						{
							"name": "Get Activity Logs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/activity-logs?userId=2\u0026action=course\u0026dateFrom=2025-06-01\u0026dateTo=2025-06-13\u0026ipAddress=192.168.1.100\u0026page=1\u0026limit=50\u0026sortBy=timestamp\u0026sortOrder=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"activity-logs"
									],
									"query": [
										{
											"key": "userId",
											"value": "2",
											"description": "Filter by specific admin user ID"
										},
										{
											"key": "action",
											"value": "course",
											"description": "Filter by action type (login, course, user, project, payment, settings)"
										},
										{
											"key": "dateFrom",
											"value": "2025-06-01",
											"description": "Start date for filtering (YYYY-MM-DD)"
										},
										{
											"key": "dateTo",
											"value": "2025-06-13",
											"description": "End date for filtering (YYYY-MM-DD)"
										},
										{
											"key": "ipAddress",
											"value": "192.168.1.100",
											"description": "Filter by IP address"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of results per page"
										},
										{
											"key": "sortBy",
											"value": "timestamp",
											"description": "Sort field (timestamp, action, userId)"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "Sort order (asc, desc)"
										}
									]
								},
								"description": "Get admin activity logs with advanced filtering options. Includes detailed tracking of admin actions, IP addresses, and timestamps for security monitoring."
							},
							"response": []
						}
					],
					"description": "Activity logging and tracking endpoints for monitoring admin user behavior and system security."
				},
				{
					"name": "Permissions \u0026 Roles",
					"item": [
						{
							"name": "Get Permissions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"permissions"
									]
								},
								"description": "Get role permissions and hierarchy information. Returns available roles, their permission levels, and access rights within the system."
							},
							"response": []
						}
					],
					"description": "Role and permission management endpoints for understanding the administrative hierarchy and access controls."
				},
				{
					"name": "Data Export",
					"item": [
						{
							"name": "Export Admin Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/roles/export?format=csv\u0026includeActivityLogs=true\u0026dateFrom=2025-01-01\u0026dateTo=2025-06-13",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"roles",
										"export"
									],
									"query": [
										{
											"key": "format",
											"value": "csv",
											"description": "Export format (csv, xlsx, json)"
										},
										{
											"key": "includeActivityLogs",
											"value": "true",
											"description": "Include activity logs in export"
										},
										{
											"key": "dateFrom",
											"value": "2025-01-01",
											"description": "Start date for data export"
										},
										{
											"key": "dateTo",
											"value": "2025-06-13",
											"description": "End date for data export"
										}
									]
								},
								"description": "Export admin users and activity data in various formats (CSV, Excel, JSON). Only accessible by Super Admin for compliance and reporting purposes."
							},
							"response": []
						}
					],
					"description": "Data export capabilities for admin user information and activity logs for compliance and reporting."
				}
			]
		},
		{
			"description": "API endpoints for admin management system",
			"name": "Admin Routes API Collection",
			"item": [
				{
					"name": "Admin Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/admin/dashboard",
							"host": [
								"{{host}}"
							],
							"path": [
								"admin",
								"dashboard"
							]
						},
						"description": "Get comprehensive admin dashboard data"
					},
					"response": []
				},
				{
					"name": "Teacher Management",
					"item": [
						{
							"name": "Teacher Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/teachers",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"teachers"
									]
								},
								"description": "Access teacher management routes (see teacherRoutes.postman_collection.json for detailed endpoints)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Student Management",
					"item": [
						{
							"name": "Student Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/students",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"students"
									]
								},
								"description": "Access student management routes (integrated with userRoutes)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Role Management",
					"item": [
						{
							"name": "Admin Role Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/roles",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"roles"
									]
								},
								"description": "Access admin role management routes (see adminRoleRoutes.postman_collection.json for detailed endpoints)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Project Management",
					"item": [
						{
							"name": "Project Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/projects",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"projects"
									]
								},
								"description": "Access project management routes (see projectRoutes.postman_collection.json for detailed endpoints)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Review Management",
					"item": [
						{
							"name": "Review Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/reviews",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"reviews"
									]
								},
								"description": "Access review management routes"
							},
							"response": []
						}
					]
				},
				{
					"name": "Discount Management",
					"item": [
						{
							"name": "Discount Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/discounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"discounts"
									]
								},
								"description": "Access discount management routes (see discountRoutes.postman_collection.json for detailed endpoints)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Settings Management",
					"item": [
						{
							"name": "Settings Routes Integration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/admin/settings",
									"host": [
										"{{host}}"
									],
									"path": [
										"admin",
										"settings"
									]
								},
								"description": "Access settings management routes (see settingsRoutes.postman_collection.json for detailed endpoints)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API endpoints for banner management system",
			"name": "Banner Routes API Collection",
			"item": [
				{
					"name": "Get Active Banners",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/banner/active",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner",
								"active"
							]
						},
						"description": "Get active banners for public use"
					},
					"response": []
				},
				{
					"name": "Get All Banners",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/banner",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner"
							]
						},
						"description": "Get all banners with pagination (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get Banner by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/banner/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Get banner by ID (Admin only)"
					},
					"response": []
				},
				{
					"name": "Create Banner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"New Banner\",\n  \"description\": \"Banner description\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"isActive\": true,\n  \"order\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/banner",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner"
							]
						},
						"description": "Create new banner (Admin only)"
					},
					"response": []
				},
				{
					"name": "Update Banner",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Banner\",\n  \"description\": \"Updated description\",\n  \"imageUrl\": \"https://example.com/updated-image.jpg\",\n  \"isActive\": true,\n  \"order\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/banner/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Update banner by ID (Admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Banner",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/banner/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Delete banner by ID (Admin only)"
					},
					"response": []
				},
				{
					"name": "Bulk Create Banners",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"banners\": [\n    {\n      \"title\": \"Banner 1\",\n      \"description\": \"Description 1\",\n      \"imageUrl\": \"https://example.com/image1.jpg\",\n      \"isActive\": true,\n      \"order\": 1\n    },\n    {\n      \"title\": \"Banner 2\",\n      \"description\": \"Description 2\",\n      \"imageUrl\": \"https://example.com/image2.jpg\",\n      \"isActive\": true,\n      \"order\": 2\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/banner/bulk",
							"host": [
								"{{host}}"
							],
							"path": [
								"banner",
								"bulk"
							]
						},
						"description": "Bulk create banners (Admin only)"
					},
					"response": []
				}
			]
		},
		{
			"description": "CORRECTED API endpoints for comprehensive batch management system with complete field coverage and proper request/response structures",
			"name": "Batch Routes API Collection ",
			"item": [
				{
					"name": "Admin Batch Management",
					"item": [
						{
							"name": "Create Batch with Auto Enrollment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"{{courseId}}\",\n  \"title\": \"Advanced JavaScript Batch Q1 2025\",\n  \"description\": \"Comprehensive JavaScript batch with auto-enrollment criteria\",\n  \"startTime\": \"2025-01-15T09:00:00Z\",\n  \"endTime\": \"2025-03-15T17:00:00Z\",\n  \"maxStudents\": 30,\n  \"minStudents\": 5,\n  \"autoEnrollmentCriteria\": {\n    \"enrollmentStatus\": \"completed\",\n    \"registrationDate\": {\n      \"from\": \"2024-12-01\",\n      \"to\": \"2025-01-10\"\n    },\n    \"skillLevel\": \"intermediate\"\n  },\n  \"teacherIds\": [\"{{teacherId1}}\", \"{{teacherId2}}\"],\n  \"studentIds\": [\"{{studentId1}}\", \"{{studentId2}}\", \"{{studentId3}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/create-with-enrollment",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										"create-with-enrollment"
									]
								},
								"description": "Create batch with automatic student enrollment based on criteria (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Batch Management Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch/admin/manage/:batchId",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										"manage",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Get comprehensive batch management dashboard data (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Batch Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch/admin/analytics/:batchId?dateRange=30d",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										"analytics",
										":batchId"
									],
									"query": [
										{
											"key": "dateRange",
											"value": "30d",
											"description": "Options: 7d, 30d, 90d, 1y"
										}
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Get comprehensive batch analytics and performance metrics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Manage Batch Students",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"add\",\n  \"userIds\": [\"{{userId1}}\", \"{{userId2}}\", \"{{userId3}}\"],\n  \"role\": \"student\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/:batchId/manage-students",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										":batchId",
										"manage-students"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Add/Remove students and teachers from batches (Admin only)"
							},
							"response": []
						},
						{
							"name": "Remove Students from Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"remove\",\n  \"userIds\": [\"{{userId1}}\", \"{{userId2}}\"],\n  \"role\": \"student\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/:batchId/manage-students",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										":batchId",
										"manage-students"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Remove students or teachers from batches (Admin only)"
							},
							"response": []
						},
						{
							"name": "Create Batch Schedule - Individual Sessions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sessions\": [\n    {\n      \"title\": \"Introduction to JavaScript\",\n      \"description\": \"Basic concepts and syntax\",\n      \"scheduledStartTime\": \"2025-01-20T10:00:00Z\",\n      \"scheduledEndTime\": \"2025-01-20T12:00:00Z\"\n    },\n    {\n      \"title\": \"Advanced Functions\",\n      \"description\": \"Closures, callbacks, and async functions\",\n      \"scheduledStartTime\": \"2025-01-22T10:00:00Z\",\n      \"scheduledEndTime\": \"2025-01-22T12:00:00Z\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/:batchId/schedule",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										":batchId",
										"schedule"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Create individual sessions for batch schedule (Admin only)"
							},
							"response": []
						},
						{
							"name": "Create Batch Schedule - Recurring Sessions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recurringPattern\": {\n    \"startDate\": \"2025-01-15T10:00:00Z\",\n    \"endDate\": \"2025-03-15T10:00:00Z\",\n    \"frequency\": \"weekly\",\n    \"interval\": 1,\n    \"sessionDuration\": 120,\n    \"sessionTitle\": \"JavaScript Weekly Session\",\n    \"sessionDescription\": \"Regular weekly JavaScript training session\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/:batchId/schedule",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										":batchId",
										"schedule"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Create recurring sessions for batch schedule (Admin only)"
							},
							"response": []
						},
						{
							"name": "Bulk Batch Operations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"activate\",\n  \"batchIds\": [\"{{batchId1}}\", \"{{batchId2}}\", \"{{batchId3}}\"],\n  \"data\": {\n    \"status\": \"active\",\n    \"maxStudents\": 35\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/admin/bulk-operations",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"admin",
										"bulk-operations"
									]
								},
								"description": "Perform bulk operations on multiple batches (activate, deactivate, delete, update) (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "General Batch Operations",
					"item": [
						{
							"name": "Create Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"{{courseId}}\",\n  \"title\": \"JavaScript Fundamentals Batch\",\n  \"description\": \"Comprehensive batch covering JavaScript fundamentals and best practices\",\n  \"startTime\": \"2025-01-15T09:00:00Z\",\n  \"endTime\": \"2025-03-15T17:00:00Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/createBatch",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"createBatch"
									]
								},
								"description": "Create a new batch (Teacher access required)"
							},
							"response": []
						},
						{
							"name": "Get All Batches",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch?page=1\u0026limit=10\u0026courseId={{courseId}}\u0026status=active\u0026search=JavaScript\u0026sortBy=createdAt\u0026sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										},
										{
											"key": "courseId",
											"value": "{{courseId}}",
											"description": "Filter by course ID"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by batch status"
										},
										{
											"key": "search",
											"value": "JavaScript",
											"description": "Search in batch title"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, title, startTime, endTime)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										}
									]
								},
								"description": "Get all batches with comprehensive filtering, search, and pagination (Student access)"
							},
							"response": []
						},
						{
							"name": "Get Batch by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch/:batchId",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Get detailed batch information including course details, creator info, and enrolled students (Student access)"
							},
							"response": []
						},
						{
							"name": "Update Batch",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated JavaScript Advanced Batch\",\n  \"startTime\": \"2025-01-20T09:00:00Z\",\n  \"endTime\": \"2025-03-20T17:00:00Z\",\n  \"status\": \"active\",\n  \"maxStudents\": 40\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/batch/:batchId",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Update batch details including title, timing, status, and capacity (Teacher access required)"
							},
							"response": []
						},
						{
							"name": "Delete Batch",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch/:batchId",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}"
										}
									]
								},
								"description": "Delete batch (only if no students are enrolled) (Teacher access required)"
							},
							"response": []
						},
						{
							"name": "Get Batches by Course",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/batch/course/:courseId?status=active\u0026page=1\u0026limit=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"batch",
										"course",
										":courseId"
									],
									"query": [
										{
											"key": "status",
											"value": "active",
											"description": "Filter by batch status"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "{{courseId}}"
										}
									]
								},
								"description": "Get all batches for a specific course with filtering and pagination (Student access)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "**CORRECTED VERSION** - Comprehensive API collection for managing student enrollments in batches with proper parameter handling and complete field coverage.\n\n**Key Features:**\n- Add/remove individual students from batches\n- Bulk student enrollment operations\n- Student status management (active, inactive, dropped, completed)\n- Batch statistics and analytics\n- Student batch history viewing\n- Proper UUID validation and error handling\n\n**Base URL:** `/api/batch-students`\n\n**Authentication:** Teacher role required for management operations, Student role for viewing own batches\n\n**Important:** This collection uses proper parameter formats matching the actual controller implementation.",
			"name": "Batch Students Management API ",
			"item": [
				{
					"name": "Student Enrollment Management",
					"item": [
						{
							"name": "Add Student to Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batchId\": \"{{batchId}}\",\n  \"userId\": \"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"add"
									]
								},
								"description": "Add a student to a specific batch. Creates enrollment record with active status. Validates UUID format and checks for existing enrollments."
							},
							"response": []
						},
						{
							"name": "Remove Student from Batch",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/remove/:batchId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"remove",
										":batchId",
										":userId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "UUID of the batch"
										},
										{
											"key": "userId",
											"value": "{{userId}}",
											"description": "UUID of the user to remove"
										}
									]
								},
								"description": "Remove a student from a specific batch. Permanently deletes the enrollment record."
							},
							"response": []
						},
						{
							"name": "Update Student Status in Batch",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"completed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/status/:batchId/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"status",
										":batchId",
										":userId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "UUID of the batch"
										},
										{
											"key": "userId",
											"value": "{{userId}}",
											"description": "UUID of the user"
										}
									]
								},
								"description": "Update student status within a batch. Valid statuses: active, inactive, dropped, completed."
							},
							"response": []
						},
						{
							"name": "Bulk Add Students to Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"batchId\": \"{{batchId}}\",\n  \"userIds\": [\n    \"{{userId1}}\",\n    \"{{userId2}}\",\n    \"{{userId3}}\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/bulk-add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"bulk-add"
									]
								},
								"description": "Add multiple students to a batch in a single operation. Skips students already enrolled and returns detailed results."
							},
							"response": []
						}
					],
					"description": "Endpoints for managing student enrollments in batches"
				},
				{
					"name": "Data Retrieval",
					"item": [
						{
							"name": "Get Students in Batch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/batch/:batchId?page=1\u0026limit=10\u0026status=active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"batch",
										":batchId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by student status (active, inactive, dropped, completed)"
										}
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "UUID of the batch"
										}
									]
								},
								"description": "Get all students enrolled in a specific batch with pagination and status filtering."
							},
							"response": []
						},
						{
							"name": "Get Batches for Student",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/student/:userId?page=1\u0026limit=10\u0026status=active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"student",
										":userId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of items per page"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by enrollment status"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userId}}",
											"description": "UUID of the student"
										}
									]
								},
								"description": "Get all batches a specific student is enrolled in with course information."
							},
							"response": []
						}
					],
					"description": "Endpoints for retrieving batch enrollment data"
				},
				{
					"name": "Analytics \u0026 Statistics",
					"item": [
						{
							"name": "Get Batch Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch-students/statistics/:batchId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students",
										"statistics",
										":batchId"
									],
									"variable": [
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "UUID of the batch"
										}
									]
								},
								"description": "Get comprehensive statistics for a batch including enrollment counts by status (active, inactive, dropped, completed)."
							},
							"response": []
						}
					],
					"description": "Analytics and reporting endpoints for batch enrollment statistics"
				}
			]
		},
		{
			"description": "Comprehensive API collection for managing course and project categories with advanced features including hierarchical categories, bulk operations, analytics, and category performance tracking.\n\n**Enhanced Features:**\n- Hierarchical category management (parent-child relationships)\n- Category analytics and performance metrics\n- Bulk category operations\n- Category content statistics\n- SEO optimization for categories\n- Category recommendation engine\n- Multi-language category support\n\n**Base URL:** `/api/categories`\n\n**Authentication:** Admin access required for management operations, public access for browsing",
			"name": "Category Management API ",
			"item": [
				{
					"name": "Category Management",
					"item": [
						{
							"name": "Create Category with Hierarchy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Web Development\",\n  \"code\": \"WEB_DEV\",\n  \"description\": \"Comprehensive web development courses covering frontend, backend, and full-stack technologies.\",\n  \"parentCategoryId\": null,\n  \"isActive\": true,\n  \"displayOrder\": 1,\n  \"metadata\": {\n    \"icon\": \"fas fa-code\",\n    \"color\": \"#007bff\",\n    \"bannerImage\": \"https://example.com/images/web-dev-banner.jpg\",\n    \"difficulty\": \"beginner-to-advanced\",\n    \"estimatedLearningTime\": \"3-6 months\",\n    \"careerPaths\": [\n      \"Frontend Developer\",\n      \"Backend Developer\",\n      \"Full Stack Developer\",\n      \"DevOps Engineer\"\n    ]\n  },\n  \"seo\": {\n    \"slug\": \"web-development\",\n    \"metaTitle\": \"Web Development Courses - Learn Frontend, Backend \u0026 Full Stack\",\n    \"metaDescription\": \"Master web development with our comprehensive courses. Learn HTML, CSS, JavaScript, React, Node.js, and more. Start your developer journey today!\",\n    \"keywords\": [\"web development\", \"frontend\", \"backend\", \"javascript\", \"react\", \"node.js\", \"full stack\"]\n  },\n  \"subcategories\": [\n    {\n      \"name\": \"Frontend Development\",\n      \"code\": \"FRONTEND\",\n      \"description\": \"Client-side web development technologies and frameworks.\",\n      \"displayOrder\": 1,\n      \"metadata\": {\n        \"icon\": \"fab fa-html5\",\n        \"color\": \"#e34c26\",\n        \"technologies\": [\"HTML\", \"CSS\", \"JavaScript\", \"React\", \"Vue.js\", \"Angular\"]\n      },\n      \"seo\": {\n        \"slug\": \"frontend-development\",\n        \"metaTitle\": \"Frontend Development Courses - HTML, CSS, JavaScript, React\",\n        \"metaDescription\": \"Learn frontend development from basics to advanced. Master HTML, CSS, JavaScript, and modern frameworks like React and Vue.js.\"\n      }\n    },\n    {\n      \"name\": \"Backend Development\",\n      \"code\": \"BACKEND\",\n      \"description\": \"Server-side development, databases, and API creation.\",\n      \"displayOrder\": 2,\n      \"metadata\": {\n        \"icon\": \"fas fa-server\",\n        \"color\": \"#68217a\",\n        \"technologies\": [\"Node.js\", \"Python\", \"Java\", \"PHP\", \"MongoDB\", \"PostgreSQL\"]\n      },\n      \"seo\": {\n        \"slug\": \"backend-development\",\n        \"metaTitle\": \"Backend Development Courses - APIs, Databases, Server-side\",\n        \"metaDescription\": \"Master backend development with Node.js, Python, databases, and API design. Build robust server-side applications.\"\n      }\n    }\n  ],\n  \"localization\": {\n    \"en\": {\n      \"name\": \"Web Development\",\n      \"description\": \"Comprehensive web development courses covering frontend, backend, and full-stack technologies.\"\n    },\n    \"es\": {\n      \"name\": \"Desarrollo Web\",\n      \"description\": \"Cursos completos de desarrollo web que cubren tecnologÃ­as frontend, backend y full-stack.\"\n    },\n    \"fr\": {\n      \"name\": \"DÃ©veloppement Web\",\n      \"description\": \"Cours complets de dÃ©veloppement web couvrant les technologies frontend, backend et full-stack.\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									]
								},
								"description": "Create a new category with hierarchical structure, metadata, SEO optimization, and localization support."
							},
							"response": []
						},
						{
							"name": "Get Category Tree with Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/:categoryId/tree?includeStats=true\u0026includeSubcategories=true\u0026depth=3\u0026language=en\u0026includeInactive=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":categoryId",
										"tree"
									],
									"query": [
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include category performance statistics"
										},
										{
											"key": "includeSubcategories",
											"value": "true",
											"description": "Include subcategory tree"
										},
										{
											"key": "depth",
											"value": "3",
											"description": "Maximum tree depth to fetch"
										},
										{
											"key": "language",
											"value": "en",
											"description": "Language for localized content"
										},
										{
											"key": "includeInactive",
											"value": "false",
											"description": "Include inactive categories"
										}
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "123",
											"description": "Category ID or \u0027root\u0027 for full tree"
										}
									]
								},
								"description": "Get category hierarchy tree with comprehensive statistics including course counts, enrollment numbers, and performance metrics."
							},
							"response": []
						},
						{
							"name": "Update Category with SEO",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Advanced Web Development\",\n  \"description\": \"Advanced web development courses for experienced developers looking to master cutting-edge technologies and best practices.\",\n  \"isActive\": true,\n  \"displayOrder\": 1,\n  \"metadata\": {\n    \"icon\": \"fas fa-laptop-code\",\n    \"color\": \"#0056b3\",\n    \"bannerImage\": \"https://example.com/images/advanced-web-dev-banner.jpg\",\n    \"difficulty\": \"intermediate-to-advanced\",\n    \"estimatedLearningTime\": \"6-12 months\",\n    \"prerequisites\": [\n      \"Basic HTML, CSS, JavaScript knowledge\",\n      \"Understanding of programming fundamentals\",\n      \"Familiarity with web development concepts\"\n    ],\n    \"careerPaths\": [\n      \"Senior Frontend Developer\",\n      \"Full Stack Architect\",\n      \"Technical Lead\",\n      \"DevOps Engineer\"\n    ],\n    \"featuredTechnologies\": [\n      \"React\", \"Node.js\", \"TypeScript\", \"GraphQL\", \"Docker\", \"AWS\"\n    ]\n  },\n  \"seo\": {\n    \"slug\": \"advanced-web-development\",\n    \"metaTitle\": \"Advanced Web Development Courses - Master Modern Technologies\",\n    \"metaDescription\": \"Take your web development skills to the next level with advanced courses in React, Node.js, TypeScript, and cloud technologies. For experienced developers.\",\n    \"keywords\": [\n      \"advanced web development\",\n      \"react advanced\",\n      \"node.js expert\",\n      \"typescript\",\n      \"graphql\",\n      \"microservices\",\n      \"cloud development\"\n    ],\n    \"canonicalUrl\": \"/categories/advanced-web-development\",\n    \"openGraph\": {\n      \"title\": \"Advanced Web Development Courses\",\n      \"description\": \"Master cutting-edge web technologies with our advanced development courses.\",\n      \"image\": \"https://example.com/images/og-advanced-web-dev.jpg\",\n      \"type\": \"website\"\n    }\n  },\n  \"targeting\": {\n    \"experienceLevel\": [\"intermediate\", \"advanced\", \"expert\"],\n    \"jobRoles\": [\"developer\", \"architect\", \"tech-lead\", \"cto\"],\n    \"industries\": [\"tech\", \"fintech\", \"healthcare\", \"e-commerce\"],\n    \"learningGoals\": [\n      \"career advancement\",\n      \"skill specialization\",\n      \"technology mastery\",\n      \"leadership preparation\"\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories/:categoryId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":categoryId"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "123",
											"description": "Category ID to update"
										}
									]
								},
								"description": "Update category with enhanced metadata, SEO optimization, and targeting information."
							},
							"response": []
						}
					]
				},
				{
					"name": "Category Analytics",
					"item": [
						{
							"name": "Category Performance Dashboard",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/:categoryId/analytics?timeRange=30d\u0026includeSubcategories=true\u0026metrics=enrollment,completion,revenue,engagement\u0026groupBy=week\u0026compareWith=previous",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":categoryId",
										"analytics"
									],
									"query": [
										{
											"key": "timeRange",
											"value": "30d",
											"description": "Time range: 7d, 30d, 90d, 1y, custom"
										},
										{
											"key": "includeSubcategories",
											"value": "true",
											"description": "Include subcategory performance"
										},
										{
											"key": "metrics",
											"value": "enrollment,completion,revenue,engagement",
											"description": "Metrics to include in analysis"
										},
										{
											"key": "groupBy",
											"value": "week",
											"description": "Group data by: day, week, month"
										},
										{
											"key": "compareWith",
											"value": "previous",
											"description": "Comparison period: previous, year-ago, custom"
										}
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "123",
											"description": "Category ID for analytics"
										}
									]
								},
								"description": "Get comprehensive category performance analytics including enrollment trends, completion rates, revenue metrics, and engagement data."
							},
							"response": []
						},
						{
							"name": "Category Popularity Trends",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/trends?period=12m\u0026includeSeasonality=true\u0026forecastPeriod=3m\u0026segments=beginner,intermediate,advanced\u0026regions=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"trends"
									],
									"query": [
										{
											"key": "period",
											"value": "12m",
											"description": "Analysis period for trend calculation"
										},
										{
											"key": "includeSeasonality",
											"value": "true",
											"description": "Include seasonal trend analysis"
										},
										{
											"key": "forecastPeriod",
											"value": "3m",
											"description": "Forecast period for trend prediction"
										},
										{
											"key": "segments",
											"value": "beginner,intermediate,advanced",
											"description": "User segments to analyze"
										},
										{
											"key": "regions",
											"value": "all",
											"description": "Geographic regions for analysis"
										}
									]
								},
								"description": "Analyze category popularity trends over time with seasonality detection and future forecasting capabilities."
							},
							"response": []
						}
					]
				},
				{
					"name": "Bulk Operations",
					"item": [
						{
							"name": "Bulk Create Categories",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    {\n      \"name\": \"Data Science\",\n      \"code\": \"DATA_SCI\",\n      \"description\": \"Data science, machine learning, and analytics courses.\",\n      \"parentCategoryId\": null,\n      \"displayOrder\": 3,\n      \"metadata\": {\n        \"icon\": \"fas fa-chart-line\",\n        \"color\": \"#ff6b35\",\n        \"difficulty\": \"intermediate-to-advanced\",\n        \"technologies\": [\"Python\", \"R\", \"SQL\", \"TensorFlow\", \"Pandas\"]\n      },\n      \"seo\": {\n        \"slug\": \"data-science\",\n        \"metaTitle\": \"Data Science Courses - Python, ML, Analytics\",\n        \"keywords\": [\"data science\", \"machine learning\", \"python\", \"analytics\"]\n      }\n    },\n    {\n      \"name\": \"Mobile Development\",\n      \"code\": \"MOBILE_DEV\",\n      \"description\": \"iOS, Android, and cross-platform mobile app development.\",\n      \"parentCategoryId\": null,\n      \"displayOrder\": 4,\n      \"metadata\": {\n        \"icon\": \"fas fa-mobile-alt\",\n        \"color\": \"#4caf50\",\n        \"difficulty\": \"beginner-to-advanced\",\n        \"technologies\": [\"Swift\", \"Kotlin\", \"React Native\", \"Flutter\"]\n      },\n      \"seo\": {\n        \"slug\": \"mobile-development\",\n        \"metaTitle\": \"Mobile App Development - iOS, Android, Cross-platform\",\n        \"keywords\": [\"mobile development\", \"ios\", \"android\", \"react native\", \"flutter\"]\n      }\n    },\n    {\n      \"name\": \"Cloud Computing\",\n      \"code\": \"CLOUD_COMP\",\n      \"description\": \"AWS, Azure, Google Cloud, and cloud architecture courses.\",\n      \"parentCategoryId\": null,\n      \"displayOrder\": 5,\n      \"metadata\": {\n        \"icon\": \"fas fa-cloud\",\n        \"color\": \"#2196f3\",\n        \"difficulty\": \"intermediate-to-advanced\",\n        \"technologies\": [\"AWS\", \"Azure\", \"GCP\", \"Docker\", \"Kubernetes\"]\n      },\n      \"seo\": {\n        \"slug\": \"cloud-computing\",\n        \"metaTitle\": \"Cloud Computing Courses - AWS, Azure, DevOps\",\n        \"keywords\": [\"cloud computing\", \"aws\", \"azure\", \"devops\", \"kubernetes\"]\n      }\n    }\n  ],\n  \"options\": {\n    \"validateHierarchy\": true,\n    \"checkDuplicates\": true,\n    \"autoGenerateSlugs\": true,\n    \"createSEOSitemap\": true,\n    \"sendNotifications\": false,\n    \"publishImmediately\": false\n  },\n  \"defaultSettings\": {\n    \"isActive\": true,\n    \"language\": \"en\",\n    \"visibility\": \"public\",\n    \"moderationRequired\": false\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"bulk"
									]
								},
								"description": "Create multiple categories in a single operation with validation, hierarchy checking, and SEO optimization."
							},
							"response": []
						},
						{
							"name": "Reorder Categories",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categoryOrder\": [\n    {\n      \"categoryId\": 101,\n      \"displayOrder\": 1,\n      \"subcategories\": [\n        { \"categoryId\": 201, \"displayOrder\": 1 },\n        { \"categoryId\": 202, \"displayOrder\": 2 },\n        { \"categoryId\": 203, \"displayOrder\": 3 }\n      ]\n    },\n    {\n      \"categoryId\": 102,\n      \"displayOrder\": 2,\n      \"subcategories\": [\n        { \"categoryId\": 204, \"displayOrder\": 1 },\n        { \"categoryId\": 205, \"displayOrder\": 2 }\n      ]\n    },\n    {\n      \"categoryId\": 103,\n      \"displayOrder\": 3,\n      \"subcategories\": []\n    }\n  ],\n  \"options\": {\n    \"preserveHierarchy\": true,\n    \"updateSEOUrls\": true,\n    \"maintainRelationships\": true,\n    \"notifyAffectedCourses\": false\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories/reorder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"reorder"
									]
								},
								"description": "Reorder categories and subcategories while maintaining hierarchy and updating SEO URLs."
							},
							"response": []
						}
					]
				},
				{
					"name": "Search \u0026 Discovery",
					"item": [
						{
							"name": "Smart Category Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/categories/search?q=web development\u0026includeContent=true\u0026suggestionMode=advanced\u0026language=en\u0026userProfile=beginner\u0026limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "web development",
											"description": "Search query"
										},
										{
											"key": "includeContent",
											"value": "true",
											"description": "Include course/project counts"
										},
										{
											"key": "suggestionMode",
											"value": "advanced",
											"description": "Search suggestion algorithm: basic, advanced, ai-powered"
										},
										{
											"key": "language",
											"value": "en",
											"description": "Search language preference"
										},
										{
											"key": "userProfile",
											"value": "beginner",
											"description": "User experience level for personalization"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Maximum results to return"
										}
									]
								},
								"description": "Intelligent category search with content analysis, personalization, and advanced suggestion algorithms."
							},
							"response": []
						},
						{
							"name": "Category Recommendations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/recommendations?userId=456\u0026basedOn=enrollment,completion,browsing\u0026algorithm=collaborative\u0026includeReasons=true\u0026limit=8\u0026diversify=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"recommendations"
									],
									"query": [
										{
											"key": "userId",
											"value": "456",
											"description": "User ID for personalized recommendations"
										},
										{
											"key": "basedOn",
											"value": "enrollment,completion,browsing",
											"description": "Data sources for recommendations"
										},
										{
											"key": "algorithm",
											"value": "collaborative",
											"description": "Recommendation algorithm: collaborative, content-based, hybrid"
										},
										{
											"key": "includeReasons",
											"value": "true",
											"description": "Include explanation for recommendations"
										},
										{
											"key": "limit",
											"value": "8",
											"description": "Number of recommendations"
										},
										{
											"key": "diversify",
											"value": "true",
											"description": "Ensure recommendation diversity"
										}
									]
								},
								"description": "Get personalized category recommendations based on user behavior, preferences, and learning patterns."
							},
							"response": []
						}
					]
				},
				{
					"name": "SEO \u0026 Content",
					"item": [
						{
							"name": "Generate Category Sitemap",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/sitemap?format=xml\u0026includeSubcategories=true\u0026includeLastModified=true\u0026includeChangeFreq=true\u0026priority=auto\u0026language=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"sitemap"
									],
									"query": [
										{
											"key": "format",
											"value": "xml",
											"description": "Sitemap format: xml, json, txt"
										},
										{
											"key": "includeSubcategories",
											"value": "true",
											"description": "Include subcategory URLs"
										},
										{
											"key": "includeLastModified",
											"value": "true",
											"description": "Include last modification date"
										},
										{
											"key": "includeChangeFreq",
											"value": "true",
											"description": "Include change frequency hints"
										},
										{
											"key": "priority",
											"value": "auto",
											"description": "URL priority calculation: auto, manual, equal"
										},
										{
											"key": "language",
											"value": "all",
											"description": "Languages to include: all, en, es, fr, etc."
										}
									]
								},
								"description": "Generate SEO-optimized sitemap for all categories with proper metadata and localization support."
							},
							"response": []
						},
						{
							"name": "Category Content Analysis",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/:categoryId/content-analysis?includeKeywords=true\u0026analyzeSentiment=true\u0026checkCompetition=true\u0026suggestImprovements=true\u0026language=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":categoryId",
										"content-analysis"
									],
									"query": [
										{
											"key": "includeKeywords",
											"value": "true",
											"description": "Analyze keyword density and relevance"
										},
										{
											"key": "analyzeSentiment",
											"value": "true",
											"description": "Perform sentiment analysis on descriptions"
										},
										{
											"key": "checkCompetition",
											"value": "true",
											"description": "Analyze competitive landscape"
										},
										{
											"key": "suggestImprovements",
											"value": "true",
											"description": "Provide content improvement suggestions"
										},
										{
											"key": "language",
											"value": "en",
											"description": "Analysis language"
										}
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "123",
											"description": "Category ID for analysis"
										}
									]
								},
								"description": "Perform comprehensive content analysis for category optimization including SEO, sentiment, and competitive analysis."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API collection for managing course levels including bulk upload operations, level retrieval, and level-specific data management.\n\n**Features:**\n- Bulk upload course levels\n- Retrieve all course levels\n- Get specific course level details\n- Level-based course organization\n\n**Base URL:** `/api/course-levels`\n\n**Authentication:** Teacher role required for management operations, public access for viewing individual levels",
			"name": "Course Level Management API",
			"item": [
				{
					"name": "Course Level Management",
					"item": [
						{
							"name": "Bulk Upload Course Levels",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseLevels\": [\n    {\n      \"name\": \"Beginner\",\n      \"description\": \"Introductory level for new learners\",\n      \"order\": 1,\n      \"prerequisites\": [],\n      \"difficultyScore\": 1,\n      \"estimatedHours\": 20,\n      \"color\": \"#4CAF50\",\n      \"icon\": \"fa-seedling\"\n    },\n    {\n      \"name\": \"Intermediate\",\n      \"description\": \"For learners with basic knowledge\",\n      \"order\": 2,\n      \"prerequisites\": [\"Beginner\"],\n      \"difficultyScore\": 3,\n      \"estimatedHours\": 40,\n      \"color\": \"#FF9800\",\n      \"icon\": \"fa-tree\"\n    },\n    {\n      \"name\": \"Advanced\",\n      \"description\": \"For experienced learners\",\n      \"order\": 3,\n      \"prerequisites\": [\"Intermediate\"],\n      \"difficultyScore\": 5,\n      \"estimatedHours\": 60,\n      \"color\": \"#F44336\",\n      \"icon\": \"fa-mountain\"\n    },\n    {\n      \"name\": \"Expert\",\n      \"description\": \"Master level content\",\n      \"order\": 4,\n      \"prerequisites\": [\"Advanced\"],\n      \"difficultyScore\": 7,\n      \"estimatedHours\": 80,\n      \"color\": \"#9C27B0\",\n      \"icon\": \"fa-crown\"\n    }\n  ],\n  \"overwriteExisting\": false,\n  \"validatePrerequisites\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/bulk-upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										"bulk-upload"
									]
								},
								"description": "Upload multiple course levels in a single operation. Supports prerequisite validation and conflict resolution options."
							},
							"response": []
						},
						{
							"name": "Get All Course Levels",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/?sortBy=order\u0026sortOrder=asc\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										""
									],
									"query": [
										{
											"key": "sortBy",
											"value": "order",
											"description": "Sort field (order, name, difficultyScore, createdAt)"
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort order (asc, desc)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include course count and enrollment statistics"
										}
									]
								},
								"description": "Retrieve all course levels with optional statistics. Returns levels in hierarchical order with prerequisite relationships."
							},
							"response": []
						}
					],
					"description": "Administrative endpoints for managing course levels and bulk operations."
				},
				{
					"name": "Public Access",
					"item": [
						{
							"name": "Get Course Level by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/:levelId?includeCourses=true\u0026includePrerequisites=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										":levelId"
									],
									"query": [
										{
											"key": "includeCourses",
											"value": "true",
											"description": "Include courses available at this level"
										},
										{
											"key": "includePrerequisites",
											"value": "true",
											"description": "Include prerequisite level information"
										}
									],
									"variable": [
										{
											"key": "levelId",
											"value": "1",
											"description": "Course level ID"
										}
									]
								},
								"description": "Get detailed information about a specific course level. Public endpoint that doesn\u0027t require authentication."
							},
							"response": []
						}
					],
					"description": "Public endpoints for accessing course level information without authentication."
				}
			]
		},
		{
			"description": "Comprehensive API endpoints for course management system with all available fields",
			"name": "Course Routes API Collection ",
			"item": [
				{
					"name": "Admin Course Management",
					"item": [
						{
							"name": "Get All Courses (Admin Dashboard)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/dashboard?page=1\u0026limit=20\u0026status=active\u0026sortBy=createdAt\u0026sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"dashboard"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										}
									]
								},
								"description": "Get admin dashboard courses overview with filters"
							},
							"response": []
						},
						{
							"name": "Get Admin Dashboard Overview",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/overview?includeAnalytics=true\u0026period=month",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"overview"
									],
									"query": [
										{
											"key": "includeAnalytics",
											"value": "true"
										},
										{
											"key": "period",
											"value": "month"
										}
									]
								},
								"description": "Get comprehensive admin dashboard overview with analytics"
							},
							"response": []
						},
						{
							"name": "Get Course Management Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/manage/:courseId?includeStudents=true\u0026includeProgress=true\u0026includeRevenue=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"manage",
										":courseId"
									],
									"query": [
										{
											"key": "includeStudents",
											"value": "true"
										},
										{
											"key": "includeProgress",
											"value": "true"
										},
										{
											"key": "includeRevenue",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Get detailed course management data including students, progress, and revenue"
							},
							"response": []
						},
						{
							"name": "Create Live Course (Admin)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Advanced JavaScript Live Course\",\n  \"description\": \"Comprehensive live course covering advanced JavaScript concepts\",\n  \"shortDescription\": \"Master advanced JavaScript in live sessions\",\n  \"levelId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"categoryId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"languageIds\": [\"550e8400-e29b-41d4-a716-446655440003\"],\n  \"tags\": [\"javascript\", \"advanced\", \"live\", \"programming\"],\n  \"goals\": [\"Master closures and scope\", \"Understand async/await\", \"Build real projects\"],\n  \"requirements\": [\"Basic JavaScript knowledge\", \"Computer with internet\", \"Text editor\"],\n  \"isPaid\": true,\n  \"price\": 299.99,\n  \"monthlyPrice\": 49.99,\n  \"type\": \"live\",\n  \"liveStartDate\": \"2025-07-01T10:00:00Z\",\n  \"liveEndDate\": \"2025-09-30T18:00:00Z\",\n  \"thumbnailUrl\": \"https://example.com/thumbnail.jpg\",\n  \"maxStudents\": 50,\n  \"sessionDuration\": 120,\n  \"weeklySchedule\": [\"monday\", \"wednesday\", \"friday\"],\n  \"batchSize\": 25,\n  \"certificate\": true,\n  \"liveCourseType\": \"subscription\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/admin/create/live",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"create",
										"live"
									]
								},
								"description": "Create a new live course with subscription model (Admin only)"
							},
							"response": []
						},
						{
							"name": "Create Recorded Course (Admin)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"React Complete Course\",\n  \"description\": \"Complete recorded course covering React from basics to advanced\",\n  \"shortDescription\": \"Master React development\",\n  \"levelId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"categoryId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"languageIds\": [\"550e8400-e29b-41d4-a716-446655440003\"],\n  \"tags\": [\"react\", \"frontend\", \"javascript\", \"development\"],\n  \"goals\": [\"Build React applications\", \"Master React hooks\", \"State management\"],\n  \"requirements\": [\"JavaScript basics\", \"HTML/CSS knowledge\", \"Development environment\"],\n  \"isPaid\": true,\n  \"price\": 199.99,\n  \"type\": \"recorded\",\n  \"thumbnailUrl\": \"https://example.com/react-thumbnail.jpg\",\n  \"duration\": 2400,\n  \"totalLessons\": 50,\n  \"certificate\": true,\n  \"downloadable\": false,\n  \"lifetime\": true,\n  \"difficulty\": \"intermediate\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/admin/create/recorded",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"create",
										"recorded"
									]
								},
								"description": "Create a new recorded course (Admin only)"
							},
							"response": []
						},
						{
							"name": "Update Course (Admin)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Course Title\",\n  \"description\": \"Updated comprehensive description\",\n  \"shortDescription\": \"Updated short description\",\n  \"levelId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"categoryId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"languageIds\": [\"550e8400-e29b-41d4-a716-446655440003\"],\n  \"tags\": [\"updated\", \"course\", \"tags\"],\n  \"goals\": [\"Updated goal 1\", \"Updated goal 2\"],\n  \"requirements\": [\"Updated requirement 1\", \"Updated requirement 2\"],\n  \"isPaid\": true,\n  \"price\": 349.99,\n  \"monthlyPrice\": 59.99,\n  \"thumbnailUrl\": \"https://example.com/updated-thumbnail.jpg\",\n  \"status\": \"active\",\n  \"maxStudents\": 75,\n  \"certificate\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/admin/:courseId",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Update course information (Admin only)"
							},
							"response": []
						},
						{
							"name": "Delete Course (Admin)",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/:courseId?deleteType=soft\u0026reason=Course outdated",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										":courseId"
									],
									"query": [
										{
											"key": "deleteType",
											"value": "soft"
										},
										{
											"key": "reason",
											"value": "Course outdated"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Delete course with reason (Admin only)"
							},
							"response": []
						},
						{
							"name": "Update Course Settings (Admin)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"maxStudents\": 100,\n  \"autoApproval\": true,\n  \"certificate\": true,\n  \"downloadable\": false,\n  \"allowReviews\": true,\n  \"visibility\": \"public\",\n  \"enrollmentDeadline\": \"2025-12-31T23:59:59Z\",\n  \"refundPolicy\": \"30-day money back guarantee\",\n  \"prerequisites\": [\"Basic programming knowledge\"],\n  \"sessionSettings\": {\n    \"recordSessions\": true,\n    \"allowChat\": true,\n    \"maxParticipants\": 50\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/admin/:courseId/settings",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										":courseId",
										"settings"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Update course settings and configurations (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Analytics and Reporting",
					"item": [
						{
							"name": "Get Course Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/analytics/:courseId?period=month\u0026includeStudents=true\u0026includeRevenue=true\u0026includeProgress=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"analytics",
										":courseId"
									],
									"query": [
										{
											"key": "period",
											"value": "month"
										},
										{
											"key": "includeStudents",
											"value": "true"
										},
										{
											"key": "includeRevenue",
											"value": "true"
										},
										{
											"key": "includeProgress",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Get detailed course analytics including enrollment, completion, and revenue data"
							},
							"response": []
						},
						{
							"name": "Get Revenue Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/revenue-analytics?period=month\u0026courseId=\u0026startDate=2025-01-01\u0026endDate=2025-12-31\u0026groupBy=month",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"revenue-analytics"
									],
									"query": [
										{
											"key": "period",
											"value": "month"
										},
										{
											"key": "courseId",
											"value": ""
										},
										{
											"key": "startDate",
											"value": "2025-01-01"
										},
										{
											"key": "endDate",
											"value": "2025-12-31"
										},
										{
											"key": "groupBy",
											"value": "month"
										}
									]
								},
								"description": "Get comprehensive revenue analytics for courses"
							},
							"response": []
						},
						{
							"name": "Export Course Data",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"exportType\": \"students\",\n  \"format\": \"csv\",\n  \"includeProgress\": true,\n  \"includeEnrollmentData\": true,\n  \"includePaymentData\": false,\n  \"dateRange\": {\n    \"startDate\": \"2025-01-01\",\n    \"endDate\": \"2025-12-31\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/admin/export/:courseId",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"export",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Export course data in various formats (CSV, JSON, Excel)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Public Course Operations",
					"item": [
						{
							"name": "Get All Courses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/course/getAllCourses?page=1\u0026limit=10\u0026categoryId=\u0026levelId=\u0026type=\u0026isPaid=\u0026status=active\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026search=",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"getAllCourses"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "categoryId",
											"value": ""
										},
										{
											"key": "levelId",
											"value": ""
										},
										{
											"key": "type",
											"value": ""
										},
										{
											"key": "isPaid",
											"value": ""
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "search",
											"value": ""
										}
									]
								},
								"description": "Get all courses with filters and pagination"
							},
							"response": []
						},
						{
							"name": "Get Course by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/course/:courseId",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Get detailed course information by ID"
							},
							"response": []
						},
						{
							"name": "Search Courses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/course/search/courses?q=javascript\u0026page=1\u0026limit=10\u0026filters[categoryId]=\u0026filters[levelId]=\u0026filters[type]=\u0026filters[isPaid]=",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"search",
										"courses"
									],
									"query": [
										{
											"key": "q",
											"value": "javascript"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "filters[categoryId]",
											"value": ""
										},
										{
											"key": "filters[levelId]",
											"value": ""
										},
										{
											"key": "filters[type]",
											"value": ""
										},
										{
											"key": "filters[isPaid]",
											"value": ""
										}
									]
								},
								"description": "Search courses by title, description, or tags"
							},
							"response": []
						},
						{
							"name": "Get Courses by Instructor",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/instructor/:instructorId?page=1\u0026limit=10\u0026status=active",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"instructor",
										":instructorId"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "active"
										}
									],
									"variable": [
										{
											"key": "instructorId",
											"value": "550e8400-e29b-41d4-a716-446655440001"
										}
									]
								},
								"description": "Get courses by specific instructor"
							},
							"response": []
						},
						{
							"name": "Get Courses by Category",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/course/category/:categoryId?page=1\u0026limit=10\u0026status=active",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"category",
										":categoryId"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "status",
											"value": "active"
										}
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "550e8400-e29b-41d4-a716-446655440002"
										}
									]
								},
								"description": "Get courses by category with pagination"
							},
							"response": []
						}
					]
				},
				{
					"name": "Teacher Course Management",
					"item": [
						{
							"name": "Create Course (Teacher)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Python for Beginners\",\n  \"description\": \"Complete Python course for absolute beginners\",\n  \"levelId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"categoryId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"languageIds\": [\"550e8400-e29b-41d4-a716-446655440003\"],\n  \"tags\": [\"python\", \"beginner\", \"programming\"],\n  \"goals\": [\"Learn Python syntax\", \"Build simple programs\", \"Understand programming concepts\"],\n  \"requirements\": [\"No prior experience needed\", \"Computer with internet\"],\n  \"isPaid\": true,\n  \"price\": 149.99,\n  \"type\": \"recorded\",\n  \"thumbnailUrl\": \"https://example.com/python-thumbnail.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/uploadCourse",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"uploadCourse"
									]
								},
								"description": "Create a new course (Teacher only)"
							},
							"response": []
						},
						{
							"name": "Update Course (Teacher)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"title\": \"Updated Python Course\",\n  \"description\": \"Updated comprehensive Python course\",\n  \"levelId\": \"550e8400-e29b-41d4-a716-446655440001\",\n  \"categoryId\": \"550e8400-e29b-41d4-a716-446655440002\",\n  \"languageIds\": [\"550e8400-e29b-41d4-a716-446655440003\"],\n  \"tags\": [\"python\", \"updated\", \"comprehensive\"],\n  \"goals\": [\"Master Python fundamentals\", \"Build real projects\"],\n  \"requirements\": [\"Basic computer skills\"],\n  \"isPaid\": true,\n  \"price\": 179.99,\n  \"type\": \"recorded\",\n  \"thumbnailUrl\": \"https://example.com/updated-python-thumbnail.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/:courseId",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Update course information (Teacher only)"
							},
							"response": []
						},
						{
							"name": "Delete Course (Teacher)",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/:courseId?hardDelete=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										":courseId"
									],
									"query": [
										{
											"key": "hardDelete",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Delete course (soft or hard delete) (Teacher only)"
							},
							"response": []
						},
						{
							"name": "Toggle Course Status",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/course/:courseId/status",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										":courseId",
										"status"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Toggle course status (active, inactive, draft, deleted)"
							},
							"response": []
						},
						{
							"name": "Get Course Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/course/admin/stats",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"admin",
										"stats"
									]
								},
								"description": "Get comprehensive course statistics"
							},
							"response": []
						}
					]
				},
				{
					"name": "Legacy Routes",
					"item": [
						{
							"name": "Get Course by ID (Legacy)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/course/getCourseById/:courseId",
									"host": [
										"{{host}}"
									],
									"path": [
										"course",
										"getCourseById",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "550e8400-e29b-41d4-a716-446655440000"
										}
									]
								},
								"description": "Legacy route for getting course by ID"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "CORRECTED API endpoints for comprehensive discount code management system with complete field coverage",
			"name": "Discount Routes API Collection ",
			"item": [
				{
					"name": "Admin Discount Management",
					"item": [
						{
							"name": "Create Discount Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"SAVE25WINTER\",\n  \"description\": \"25% off all winter courses - Limited time offer\",\n  \"discountType\": \"percentage\",\n  \"discountValue\": 25,\n  \"applicableType\": \"course\",\n  \"applicableItems\": [\"{{courseId1}}\", \"{{courseId2}}\"],\n  \"applicableCategories\": [\"{{categoryId1}}\", \"{{categoryId2}}\"],\n  \"minPurchaseAmount\": 100.00,\n  \"maxDiscountAmount\": 500.00,\n  \"maxUses\": 1000,\n  \"maxUsesPerUser\": 2,\n  \"validFrom\": \"2025-01-01T00:00:00Z\",\n  \"validUntil\": \"2025-03-31T23:59:59Z\",\n  \"isActive\": true,\n  \"isStackable\": false,\n  \"requiresMinimumItems\": 1,\n  \"allowedUserRoles\": [\"student\", \"premium_student\"],\n  \"geographicRestrictions\": [\"US\", \"CA\", \"UK\"],\n  \"firstTimeUserOnly\": false,\n  \"autoApply\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/discount",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount"
									]
								},
								"description": "Create a comprehensive discount code with all available options (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get All Discount Codes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount?page=1\u0026limit=20\u0026status=active\u0026discountType=percentage\u0026search=SAVE\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeUsage=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by status (active, inactive, expired, scheduled)"
										},
										{
											"key": "discountType",
											"value": "percentage",
											"description": "Filter by discount type (percentage, fixed_amount)"
										},
										{
											"key": "search",
											"value": "SAVE",
											"description": "Search in discount code or description"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, validUntil, discountValue, currentUses)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "includeUsage",
											"value": "true",
											"description": "Include usage statistics"
										}
									]
								},
								"description": "Get all discount codes with comprehensive filtering and usage statistics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get All Discount Codes (Admin Extended)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/admin?page=1\u0026limit=50\u0026includeInactive=true\u0026includeExpired=true\u0026dateFrom=2024-01-01\u0026dateTo=2025-12-31\u0026categoryId={{categoryId}}\u0026createdBy={{userId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"admin"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of results per page"
										},
										{
											"key": "includeInactive",
											"value": "true",
											"description": "Include inactive discount codes"
										},
										{
											"key": "includeExpired",
											"value": "true",
											"description": "Include expired discount codes"
										},
										{
											"key": "dateFrom",
											"value": "2024-01-01",
											"description": "Filter by creation date from"
										},
										{
											"key": "dateTo",
											"value": "2025-12-31",
											"description": "Filter by creation date to"
										},
										{
											"key": "categoryId",
											"value": "{{categoryId}}",
											"description": "Filter by applicable category"
										},
										{
											"key": "createdBy",
											"value": "{{userId}}",
											"description": "Filter by creator user ID"
										}
									]
								},
								"description": "Get comprehensive admin view of all discount codes with extended filtering (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Discount Code by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/:id?includeUsage=true\u0026includeAnalytics=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										":id"
									],
									"query": [
										{
											"key": "includeUsage",
											"value": "true",
											"description": "Include detailed usage information"
										},
										{
											"key": "includeAnalytics",
											"value": "true",
											"description": "Include analytics and performance metrics"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{discountId}}"
										}
									]
								},
								"description": "Get single discount code with detailed usage and analytics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Update Discount Code",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Updated 30% off winter courses - Extended offer\",\n  \"discountValue\": 30,\n  \"maxUses\": 1500,\n  \"maxUsesPerUser\": 3,\n  \"validUntil\": \"2025-04-30T23:59:59Z\",\n  \"isActive\": true,\n  \"applicableCategories\": [\"{{categoryId1}}\", \"{{categoryId2}}\", \"{{categoryId3}}\"],\n  \"minPurchaseAmount\": 75.00,\n  \"maxDiscountAmount\": 750.00\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/discount/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{discountId}}"
										}
									]
								},
								"description": "Update discount code with comprehensive field support (Admin only)"
							},
							"response": []
						},
						{
							"name": "Delete Discount Code",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{discountId}}"
										}
									]
								},
								"description": "Delete discount code (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Discount Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/analytics?period=6m\u0026includeComparisons=true\u0026includeTopCodes=true\u0026includeTrends=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"analytics"
									],
									"query": [
										{
											"key": "period",
											"value": "6m",
											"description": "Analysis period (1m, 3m, 6m, 1y, all)"
										},
										{
											"key": "includeComparisons",
											"value": "true",
											"description": "Include period-over-period comparisons"
										},
										{
											"key": "includeTopCodes",
											"value": "true",
											"description": "Include top performing discount codes"
										},
										{
											"key": "includeTrends",
											"value": "true",
											"description": "Include usage trends over time"
										}
									]
								},
								"description": "Get comprehensive discount analytics and performance metrics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Bulk Update Discount Codes",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"discountIds\": [\"{{discountId1}}\", \"{{discountId2}}\", \"{{discountId3}}\"],\n  \"updateData\": {\n    \"isActive\": false,\n    \"validUntil\": \"2025-02-28T23:59:59Z\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/discount/bulk-update",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"bulk-update"
									]
								},
								"description": "Bulk update multiple discount codes (Admin only)"
							},
							"response": []
						},
						{
							"name": "Export Discount Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/export?format=json\u0026includeUsage=true\u0026dateFrom=2024-01-01\u0026dateTo=2025-12-31",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"export"
									],
									"query": [
										{
											"key": "format",
											"value": "json",
											"description": "Export format (json, csv)"
										},
										{
											"key": "includeUsage",
											"value": "true",
											"description": "Include usage data in export"
										},
										{
											"key": "dateFrom",
											"value": "2024-01-01",
											"description": "Export data from date"
										},
										{
											"key": "dateTo",
											"value": "2025-12-31",
											"description": "Export data to date"
										}
									]
								},
								"description": "Export discount code data with usage analytics (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Public Discount Operations",
					"item": [
						{
							"name": "Validate Discount Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"SAVE25WINTER\",\n  \"cartItems\": [\n    {\n      \"itemId\": \"{{courseId1}}\",\n      \"itemType\": \"course\",\n      \"price\": 199.99,\n      \"categoryId\": \"{{categoryId1}}\"\n    },\n    {\n      \"itemId\": \"{{projectId1}}\",\n      \"itemType\": \"project\",\n      \"price\": 49.99,\n      \"categoryId\": \"{{categoryId2}}\"\n    }\n  ],\n  \"userId\": \"{{userId}}\",\n  \"totalAmount\": 249.98\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/discount/validate",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"validate"
									]
								},
								"description": "Validate discount code against specific cart items and calculate discount"
							},
							"response": []
						},
						{
							"name": "Get Discount Usage Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/:id/usage?period=30d\u0026includeBreakdown=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										":id",
										"usage"
									],
									"query": [
										{
											"key": "period",
											"value": "30d",
											"description": "Period for usage statistics (7d, 30d, 90d, all)"
										},
										{
											"key": "includeBreakdown",
											"value": "true",
											"description": "Include detailed usage breakdown by category/item"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{discountId}}"
										}
									]
								},
								"description": "Get detailed usage statistics for a specific discount code"
							},
							"response": []
						},
						{
							"name": "Get User Discount History",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/discount/user/:userId/history?page=1\u0026limit=20\u0026includeExpired=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"discount",
										"user",
										":userId",
										"history"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "includeExpired",
											"value": "false",
											"description": "Include expired discount usage in history"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								},
								"description": "Get discount usage history for a specific user"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API collection for handling file uploads with support for multiple file types, secure storage, and authenticated access.\n\n**Features:**\n- Multi-file upload support\n- Authenticated file uploads\n- Dynamic file handling\n- Secure file storage\n- File type validation\n\n**Base URL:** `/api/file-upload`\n\n**Authentication:** Bearer token required for all file upload operations",
			"name": "File Upload API",
			"item": [
				{
					"name": "File Upload Operations",
					"item": [
						{
							"name": "Upload Files",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": "/path/to/your/file1.pdf",
											"description": "Upload multiple files (documents, images, videos)"
										},
										{
											"key": "files",
											"type": "file",
											"src": "/path/to/your/file2.jpg",
											"description": "Additional file upload"
										},
										{
											"key": "uploadType",
											"value": "course_material",
											"type": "text",
											"description": "Type of upload (course_material, project_file, profile_image, document)"
										},
										{
											"key": "category",
											"value": "lesson_resources",
											"type": "text",
											"description": "File category for organization"
										},
										{
											"key": "description",
											"value": "Course materials for JavaScript fundamentals",
											"type": "text",
											"description": "Description of uploaded files"
										},
										{
											"key": "isPublic",
											"value": "false",
											"type": "text",
											"description": "Whether files should be publicly accessible"
										},
										{
											"key": "allowedRoles",
											"value": "student,teacher",
											"type": "text",
											"description": "Comma-separated list of roles that can access these files"
										},
										{
											"key": "courseId",
											"value": "123",
											"type": "text",
											"description": "Associated course ID (if applicable)"
										},
										{
											"key": "projectId",
											"value": "456",
											"type": "text",
											"description": "Associated project ID (if applicable)"
										},
										{
											"key": "maxFileSize",
											"value": "10485760",
											"type": "text",
											"description": "Maximum file size in bytes (10MB default)"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/file-upload/upload-file",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"file-upload",
										"upload-file"
									]
								},
								"description": "Upload multiple files with metadata and access control options. Supports various file types including documents, images, videos, and course materials.\n\n**Supported File Types:**\n- Documents: PDF, DOC, DOCX, TXT, RTF\n- Images: JPG, JPEG, PNG, GIF, SVG, WEBP\n- Videos: MP4, AVI, MOV, WMV, FLV\n- Archives: ZIP, RAR, 7Z\n- Presentations: PPT, PPTX\n- Spreadsheets: XLS, XLSX\n- Audio: MP3, WAV, AAC\n\n**Security Features:**\n- File type validation\n- Size limits enforcement\n- Virus scanning\n- Access control by roles\n- Secure storage with encryption\n\n**Upload Categories:**\n- course_material: Course-related files\n- project_file: Project assets and deliverables\n- profile_image: User profile pictures\n- document: General documents\n- assignment: Student assignments\n- resource: Learning resources\n- certificate: Certificates and achievements"
							},
							"response": [
								{
									"name": "Successful Upload",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "files",
													"type": "file",
													"src": "/path/to/file.pdf"
												},
												{
													"key": "uploadType",
													"value": "course_material",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/file-upload/upload-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"file-upload",
												"upload-file"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"message\": \"Files uploaded successfully\",\n  \"data\": {\n    \"uploadedFiles\": [\n      {\n        \"fileId\": \"file_12345\",\n        \"originalName\": \"course-material.pdf\",\n        \"fileName\": \"course-material-1623456789.pdf\",\n        \"fileSize\": 2048576,\n        \"mimeType\": \"application/pdf\",\n        \"url\": \"https://s3.amazonaws.com/startgoals-uploads/course-material-1623456789.pdf\",\n        \"category\": \"course_material\",\n        \"uploadedAt\": \"2025-06-13T10:30:00.000Z\",\n        \"uploadedBy\": 123\n      }\n    ],\n    \"totalFiles\": 1,\n    \"totalSize\": 2048576,\n    \"uploadStats\": {\n      \"successful\": 1,\n      \"failed\": 0,\n      \"skipped\": 0\n    }\n  }\n}"
								}
							]
						}
					],
					"description": "Endpoints for uploading and managing files with authentication and access control."
				}
			]
		},
		{
			"description": "API endpoints for goal management system",
			"name": "Goal Routes API Collection",
			"item": [
				{
					"name": "Bulk Upload Goals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"goals\": [\n    {\n      \"title\": \"Full Stack Web Development\",\n      \"description\": \"Master both frontend and backend web development\",\n      \"category\": \"Programming\",\n      \"difficulty\": \"intermediate\",\n      \"estimatedDuration\": \"6 months\",\n      \"isActive\": true\n    },\n    {\n      \"title\": \"Data Science \u0026 Analytics\",\n      \"description\": \"Learn data analysis, machine learning, and statistical modeling\",\n      \"category\": \"Data Science\",\n      \"difficulty\": \"advanced\",\n      \"estimatedDuration\": \"8 months\",\n      \"isActive\": true\n    },\n    {\n      \"title\": \"Mobile App Development\",\n      \"description\": \"Build native and cross-platform mobile applications\",\n      \"category\": \"Mobile Development\",\n      \"difficulty\": \"intermediate\",\n      \"estimatedDuration\": \"5 months\",\n      \"isActive\": true\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/goal/saveAllGoals",
							"host": [
								"{{host}}"
							],
							"path": [
								"goal",
								"saveAllGoals"
							]
						},
						"description": "Bulk upload multiple learning goals (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Goals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/goal/getAllGoals",
							"host": [
								"{{host}}"
							],
							"path": [
								"goal",
								"getAllGoals"
							]
						},
						"description": "Get all available learning goals"
					},
					"response": []
				}
			]
		},
		{
			"description": "Comprehensive API collection for managing languages and course levels with validation and internationalization support.\n\n**Enhanced Features:**\n- Multi-language support with localization\n- Course level management with progression tracking\n- Bulk operations and data import/export\n- Validation and standardization\n- Analytics and usage tracking\n\n**Base URL:** `/api/languages` and `/api/course-levels`\n\n**Authentication:** Bearer token required, admin access for management operations",
			"name": "Enhanced Language \u0026 Course Level API",
			"item": [
				{
					"name": "Language Management",
					"item": [
						{
							"name": "Create Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Language created successfully\u0027, function () {",
											"    pm.response.to.have.status(201);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data).to.have.property(\u0027languageId\u0027);",
											"});",
											"",
											"// Store language ID for other tests",
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    pm.environment.set(\u0027lastLanguageId\u0027, response.data.languageId);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"language\": \"Spanish\",\n  \"languageCode\": \"es\",\n  \"nativeName\": \"EspaÃ±ol\",\n  \"isActive\": true,\n  \"order\": 3,\n  \"flag\": \"https://cdn.example.com/flags/es.svg\",\n  \"rtl\": false,\n  \"pluralRules\": \"nplurals=2; plural=(n != 1);\",\n  \"dateFormat\": \"dd/MM/yyyy\",\n  \"numberFormat\": {\n    \"decimal\": \",\",\n    \"thousands\": \".\"\n  },\n  \"currency\": {\n    \"code\": \"EUR\",\n    \"symbol\": \"â‚¬\",\n    \"position\": \"after\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages"
									]
								},
								"description": "Create a new language with comprehensive localization settings."
							},
							"response": [
								{
									"name": "Language Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"language\": \"Spanish\",\n  \"languageCode\": \"es\",\n  \"nativeName\": \"EspaÃ±ol\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/languages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"languages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"message\": \"Language created successfully\",\n  \"data\": {\n    \"languageId\": 5,\n    \"language\": \"Spanish\",\n    \"languageCode\": \"es\",\n    \"nativeName\": \"EspaÃ±ol\",\n    \"isActive\": true,\n    \"order\": 3,\n    \"flag\": \"https://cdn.example.com/flags/es.svg\",\n    \"createdAt\": \"2025-06-13T10:30:00Z\",\n    \"updatedAt\": \"2025-06-13T10:30:00Z\"\n  }\n}"
								}
							]
						},
						{
							"name": "Get All Languages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Languages retrieved successfully\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data).to.have.property(\u0027languages\u0027);",
											"    pm.expect(response.data.languages).to.be.an(\u0027array\u0027);",
											"});",
											"",
											"pm.test(\u0027Pagination information included\u0027, function () {",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027pagination\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/languages?page=1\u0026limit=20\u0026search=spanish\u0026isActive=true\u0026sortBy=order\u0026sortOrder=ASC\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Items per page"
										},
										{
											"key": "search",
											"value": "spanish",
											"description": "Search in language name or code"
										},
										{
											"key": "isActive",
											"value": "true",
											"description": "Filter by active status"
										},
										{
											"key": "sortBy",
											"value": "order",
											"description": "Sort field"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include usage statistics"
										}
									]
								},
								"description": "Retrieve all languages with filtering and sorting options."
							},
							"response": []
						},
						{
							"name": "Bulk Upload Languages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Bulk upload successful\u0027, function () {",
											"    pm.response.to.have.status(201);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data.createdCount).to.be.greaterThan(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"languages\": [\n    {\n      \"language\": \"French\",\n      \"languageCode\": \"fr\",\n      \"nativeName\": \"FranÃ§ais\",\n      \"isActive\": true,\n      \"order\": 4,\n      \"flag\": \"https://cdn.example.com/flags/fr.svg\"\n    },\n    {\n      \"language\": \"German\",\n      \"languageCode\": \"de\",\n      \"nativeName\": \"Deutsch\",\n      \"isActive\": true,\n      \"order\": 5,\n      \"flag\": \"https://cdn.example.com/flags/de.svg\"\n    },\n    {\n      \"language\": \"Italian\",\n      \"languageCode\": \"it\",\n      \"nativeName\": \"Italiano\",\n      \"isActive\": true,\n      \"order\": 6,\n      \"flag\": \"https://cdn.example.com/flags/it.svg\"\n    }\n  ],\n  \"options\": {\n    \"skipDuplicates\": true,\n    \"updateExisting\": false,\n    \"validateAll\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/languages/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages",
										"bulk"
									]
								},
								"description": "Bulk upload multiple languages with validation options."
							},
							"response": []
						},
						{
							"name": "Update Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Language updated successfully\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"language\": \"Spanish (Spain)\",\n  \"nativeName\": \"EspaÃ±ol (EspaÃ±a)\",\n  \"isActive\": true,\n  \"order\": 2,\n  \"flag\": \"https://cdn.example.com/flags/es.svg\",\n  \"metadata\": {\n    \"region\": \"ES\",\n    \"variant\": \"european\",\n    \"timezone\": \"Europe/Madrid\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/languages/:languageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages",
										":languageId"
									],
									"variable": [
										{
											"key": "languageId",
											"value": "{{lastLanguageId}}"
										}
									]
								},
								"description": "Update an existing language with new information."
							},
							"response": []
						}
					]
				},
				{
					"name": "Course Level Management",
					"item": [
						{
							"name": "Create Course Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Course level created successfully\u0027, function () {",
											"    pm.response.to.have.status(201);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data).to.have.property(\u0027levelId\u0027);",
											"});",
											"",
											"// Store level ID for other tests",
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    pm.environment.set(\u0027lastLevelId\u0027, response.data.levelId);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"level\": \"Advanced\",\n  \"description\": \"For experienced learners with strong foundational knowledge\",\n  \"order\": 4,\n  \"isActive\": true,\n  \"color\": \"#FF5722\",\n  \"iconClass\": \"fas fa-graduation-cap\",\n  \"prerequisites\": [\n    \"Intermediate level completion\",\n    \"6+ months experience\"\n  ],\n  \"expectedDuration\": {\n    \"min\": 40,\n    \"max\": 80,\n    \"unit\": \"hours\"\n  },\n  \"skillLevel\": {\n    \"technical\": 85,\n    \"theoretical\": 80,\n    \"practical\": 90\n  },\n  \"certification\": {\n    \"available\": true,\n    \"type\": \"professional\",\n    \"validityPeriod\": 24\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/course-levels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels"
									]
								},
								"description": "Create a new course level with comprehensive metadata."
							},
							"response": []
						},
						{
							"name": "Get All Course Levels",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Course levels retrieved successfully\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data).to.have.property(\u0027levels\u0027);",
											"    pm.expect(response.data.levels).to.be.an(\u0027array\u0027);",
											"});",
											"",
											"pm.test(\u0027Levels are properly ordered\u0027, function () {",
											"    const response = pm.response.json();",
											"    const levels = response.data.levels;",
											"    for (let i = 1; i \u003c levels.length; i++) {",
											"        pm.expect(levels[i].order).to.be.at.least(levels[i-1].order);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels?page=1\u0026limit=20\u0026search=advanced\u0026isActive=true\u0026sortBy=order\u0026sortOrder=ASC\u0026includeStats=true\u0026includeCourseCount=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Items per page"
										},
										{
											"key": "search",
											"value": "advanced",
											"description": "Search in level name or description"
										},
										{
											"key": "isActive",
											"value": "true",
											"description": "Filter by active status"
										},
										{
											"key": "sortBy",
											"value": "order",
											"description": "Sort field"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "Sort order"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include usage statistics"
										},
										{
											"key": "includeCourseCount",
											"value": "true",
											"description": "Include course count per level"
										}
									]
								},
								"description": "Retrieve all course levels with filtering and statistics."
							},
							"response": []
						},
						{
							"name": "Bulk Upload Course Levels",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Bulk upload successful\u0027, function () {",
											"    pm.response.to.have.status(201);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data.createdCount).to.be.greaterThan(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"levels\": [\n    {\n      \"level\": \"Beginner\",\n      \"description\": \"For complete beginners with no prior experience\",\n      \"order\": 1,\n      \"isActive\": true,\n      \"color\": \"#4CAF50\",\n      \"iconClass\": \"fas fa-seedling\"\n    },\n    {\n      \"level\": \"Intermediate\",\n      \"description\": \"For learners with basic understanding\",\n      \"order\": 2,\n      \"isActive\": true,\n      \"color\": \"#FF9800\",\n      \"iconClass\": \"fas fa-chart-line\"\n    },\n    {\n      \"level\": \"Expert\",\n      \"description\": \"For professionals seeking mastery\",\n      \"order\": 5,\n      \"isActive\": true,\n      \"color\": \"#9C27B0\",\n      \"iconClass\": \"fas fa-crown\"\n    }\n  ],\n  \"options\": {\n    \"skipDuplicates\": true,\n    \"updateExisting\": false,\n    \"validateHierarchy\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										"bulk"
									]
								},
								"description": "Bulk upload multiple course levels with hierarchy validation."
							},
							"response": []
						},
						{
							"name": "Get Level Analytics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Analytics retrieved successfully\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027analytics\u0027);",
											"    pm.expect(response.data.analytics).to.have.property(\u0027enrollment\u0027);",
											"    pm.expect(response.data.analytics).to.have.property(\u0027completion\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/:levelId/analytics?timeframe=30d\u0026includeProgression=true\u0026includeCompletion=true\u0026includeSatisfaction=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										":levelId",
										"analytics"
									],
									"query": [
										{
											"key": "timeframe",
											"value": "30d",
											"description": "Analytics timeframe"
										},
										{
											"key": "includeProgression",
											"value": "true",
											"description": "Include learner progression data"
										},
										{
											"key": "includeCompletion",
											"value": "true",
											"description": "Include completion statistics"
										},
										{
											"key": "includeSatisfaction",
											"value": "true",
											"description": "Include satisfaction scores"
										}
									],
									"variable": [
										{
											"key": "levelId",
											"value": "{{lastLevelId}}"
										}
									]
								},
								"description": "Get comprehensive analytics for a specific course level."
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Management \u0026 Validation",
					"item": [
						{
							"name": "Validate Language Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Validation completed\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027validationResults\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"validationType\": \"comprehensive\",\n  \"checkDuplicates\": true,\n  \"validateCodes\": true,\n  \"checkFlags\": true,\n  \"validateLocalization\": true,\n  \"fixErrors\": false,\n  \"reportLevel\": \"detailed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/languages/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages",
										"validate"
									]
								},
								"description": "Perform comprehensive validation of language data."
							},
							"response": []
						},
						{
							"name": "Export Languages Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Export successful\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.headers.get(\u0027Content-Type\u0027)).to.include(\u0027json\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/languages/export?format=json\u0026includeInactive=false\u0026includeMetadata=true\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages",
										"export"
									],
									"query": [
										{
											"key": "format",
											"value": "json",
											"description": "Export format: json, csv, xlsx"
										},
										{
											"key": "includeInactive",
											"value": "false",
											"description": "Include inactive languages"
										},
										{
											"key": "includeMetadata",
											"value": "true",
											"description": "Include metadata"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include usage statistics"
										}
									]
								},
								"description": "Export languages data in various formats."
							},
							"response": []
						},
						{
							"name": "Level Progression Analysis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Progression analysis successful\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027progressionMatrix\u0027);",
											"    pm.expect(response.data).to.have.property(\u0027recommendations\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels/progression-analysis?includeDropoffs=true\u0026includeTimeMetrics=true\u0026includeSuccessFactors=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels",
										"progression-analysis"
									],
									"query": [
										{
											"key": "includeDropoffs",
											"value": "true",
											"description": "Include dropout analysis"
										},
										{
											"key": "includeTimeMetrics",
											"value": "true",
											"description": "Include time-based metrics"
										},
										{
											"key": "includeSuccessFactors",
											"value": "true",
											"description": "Include success factor analysis"
										}
									]
								},
								"description": "Analyze learner progression across course levels."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "CORRECTED API endpoints for comprehensive live session management with all 14 controller functions",
			"name": "Live Session Routes API Collection ",
			"item": [
				{
					"name": "Session Management",
					"item": [
						{
							"name": "Create Live Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Advanced JavaScript Concepts Live Session\",\n  \"description\": \"Deep dive into closures, async/await, and advanced patterns\",\n  \"courseId\": \"{{courseId}}\",\n  \"batchId\": \"{{batchId}}\",\n  \"scheduledStartTime\": \"2025-01-20T14:00:00Z\",\n  \"scheduledEndTime\": \"2025-01-20T16:00:00Z\",\n  \"estimatedDuration\": 120,\n  \"maxParticipants\": 50,\n  \"sessionType\": \"interactive_workshop\",\n  \"sessionCategory\": \"live_coding\",\n  \"prerequisites\": [\"Basic JavaScript knowledge\", \"Understanding of functions\"],\n  \"learningObjectives\": [\n    \"Master closure concepts\",\n    \"Implement async/await patterns\",\n    \"Build real-world applications\"\n  ],\n  \"materials\": [\n    {\n      \"type\": \"presentation\",\n      \"url\": \"https://example.com/slides.pdf\",\n      \"title\": \"JavaScript Advanced Concepts\"\n    },\n    {\n      \"type\": \"code_repository\",\n      \"url\": \"https://github.com/example/js-advanced\",\n      \"title\": \"Practice Code Repository\"\n    }\n  ],\n  \"recordingSettings\": {\n    \"autoRecord\": true,\n    \"recordingType\": \"cloud\",\n    \"allowDownload\": false\n  },\n  \"participantPermissions\": {\n    \"canUseMic\": true,\n    \"canUseCamera\": true,\n    \"canShareScreen\": false,\n    \"canUseChat\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/createLiveSession",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										"createLiveSession"
									]
								},
								"description": "Create a comprehensive live session with all available options (Teacher access)"
							},
							"response": []
						},
						{
							"name": "Start Live Session",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startRecording\": true,\n  \"welcomeMessage\": \"Welcome to our Advanced JavaScript session! Please mute your microphones.\",\n  \"sessionSettings\": {\n    \"allowLateJoining\": true,\n    \"waitingRoomEnabled\": false,\n    \"requirePasswordToJoin\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/start",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"start"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Start a live session with configuration options (Instructor only)"
							},
							"response": []
						},
						{
							"name": "End Live Session",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"summary\": \"Great session! We covered closures, async/await, and built a real-time chat application.\",\n  \"nextSessionPreview\": \"Next week we\u0027ll dive into React Hooks and state management.\",\n  \"actionItems\": [\n    \"Complete the async/await exercises\",\n    \"Review the chat application code\",\n    \"Prepare questions for next session\"\n  ],\n  \"recordingSettings\": {\n    \"stopRecording\": true,\n    \"saveToCloud\": true,\n    \"generateTranscript\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/end",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"end"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "End live session with summary and action items (Instructor only)"
							},
							"response": []
						},
						{
							"name": "Get Live Session Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/live-session/:sessionId?includeParticipants=true\u0026includeRecording=true\u0026includeMaterials=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId"
									],
									"query": [
										{
											"key": "includeParticipants",
											"value": "true",
											"description": "Include participant list and status"
										},
										{
											"key": "includeRecording",
											"value": "true",
											"description": "Include recording information"
										},
										{
											"key": "includeMaterials",
											"value": "true",
											"description": "Include session materials and resources"
										}
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Get comprehensive live session details with optional data inclusion (Student access)"
							},
							"response": []
						},
						{
							"name": "List Sessions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/live-session?courseId={{courseId}}\u0026batchId={{batchId}}\u0026status=scheduled\u0026dateFrom=2025-01-01\u0026dateTo=2025-12-31\u0026page=1\u0026limit=20\u0026sortBy=scheduledStartTime\u0026sortOrder=ASC",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session"
									],
									"query": [
										{
											"key": "courseId",
											"value": "{{courseId}}",
											"description": "Filter by course ID"
										},
										{
											"key": "batchId",
											"value": "{{batchId}}",
											"description": "Filter by batch ID"
										},
										{
											"key": "status",
											"value": "scheduled",
											"description": "Filter by session status (scheduled, live, completed, cancelled)"
										},
										{
											"key": "dateFrom",
											"value": "2025-01-01",
											"description": "Filter sessions from date"
										},
										{
											"key": "dateTo",
											"value": "2025-12-31",
											"description": "Filter sessions to date"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "sortBy",
											"value": "scheduledStartTime",
											"description": "Sort field (scheduledStartTime, title, status)"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "Sort order (ASC, DESC)"
										}
									]
								},
								"description": "List live sessions with comprehensive filtering and pagination (Student access)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Participant Management",
					"item": [
						{
							"name": "Join Live Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"joinAs\": \"participant\",\n  \"deviceInfo\": {\n    \"hasCamera\": true,\n    \"hasMicrophone\": true,\n    \"browserName\": \"Chrome\",\n    \"browserVersion\": \"120.0\",\n    \"operatingSystem\": \"Windows 11\"\n  },\n  \"preferences\": {\n    \"startWithCameraOff\": false,\n    \"startWithMicOff\": true,\n    \"receiveNotifications\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/join",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"join"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Join live session with device info and preferences (Student access)"
							},
							"response": []
						},
						{
							"name": "Leave Live Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reason\": \"completed\",\n  \"feedback\": {\n    \"rating\": 5,\n    \"comment\": \"Excellent session! Very informative and well-structured.\",\n    \"technicalIssues\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/leave",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"leave"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Leave live session with optional feedback (Student access)"
							},
							"response": []
						},
						{
							"name": "Toggle Participant Microphone",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"participantId\": \"{{participantId}}\",\n  \"action\": \"mute\",\n  \"reason\": \"Background noise detected\",\n  \"notifyParticipant\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/participant/mic",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"participant",
										"mic"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Control participant microphone (mute/unmute) (Instructor only)"
							},
							"response": []
						},
						{
							"name": "Toggle Participant Camera",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"participantId\": \"{{participantId}}\",\n  \"action\": \"disable\",\n  \"reason\": \"Inappropriate content\",\n  \"notifyParticipant\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/participant/camera",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"participant",
										"camera"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Control participant camera (enable/disable) (Instructor only)"
							},
							"response": []
						},
						{
							"name": "Remove Participant from Session",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"participantId\": \"{{participantId}}\",\n  \"reason\": \"Disruptive behavior\",\n  \"allowRejoin\": false,\n  \"sendNotification\": true,\n  \"escalateToAdmin\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/participant/remove",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"participant",
										"remove"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Remove participant from live session (Instructor only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Interactive Features",
					"item": [
						{
							"name": "Raise Hand",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"question\": \"Can you explain the difference between async/await and Promises?\",\n  \"urgency\": \"medium\",\n  \"category\": \"clarification\",\n  \"anonymous\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/raise-hand",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"raise-hand"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Raise hand with optional question and details (Student access)"
							},
							"response": []
						},
						{
							"name": "List Raised Hands",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/live-session/:sessionId/raised-hands?status=pending\u0026sortBy=raisedAt\u0026sortOrder=ASC",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"raised-hands"
									],
									"query": [
										{
											"key": "status",
											"value": "pending",
											"description": "Filter by status (pending, acknowledged, answered, dismissed)"
										},
										{
											"key": "sortBy",
											"value": "raisedAt",
											"description": "Sort field (raisedAt, urgency, category)"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "Sort order (ASC, DESC)"
										}
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Get list of raised hands with filtering options (Instructor access)"
							},
							"response": []
						},
						{
							"name": "Respond to Raised Hand",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"raisedHandId\": \"{{raisedHandId}}\",\n  \"action\": \"acknowledge\",\n  \"response\": \"Great question! Let me demonstrate this with a live example.\",\n  \"grantSpeakingPermission\": true,\n  \"timeLimit\": 120,\n  \"broadcastResponse\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/raised-hand/respond",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"raised-hand",
										"respond"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "Respond to raised hand with action and optional speaking permission (Instructor only)"
							},
							"response": []
						},
						{
							"name": "End Raised Hand Interaction",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"raisedHandId\": \"{{raisedHandId}}\",\n  \"resolution\": \"answered\",\n  \"summary\": \"Explained the difference between async/await and Promises with practical examples\",\n  \"followUpRequired\": false,\n  \"satisfactionRating\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/live-session/:sessionId/raised-hand/end",
									"host": [
										"{{host}}"
									],
									"path": [
										"live-session",
										":sessionId",
										"raised-hand",
										"end"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "{{sessionId}}"
										}
									]
								},
								"description": "End raised hand interaction with resolution summary (Instructor only)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "**COMPREHENSIVE USER ONBOARDING** - Complete user onboarding flow for new users including language selection, goal selection, and skills selection.\n\n**Onboarding Flow:**\n1. Language Selection - Users select preferred languages\n2. Goal Selection - Users choose their learning goal (returns related skills)\n3. Skills Selection - Users select specific skills and complete onboarding\n\n**Key Features:**\n- Multi-language preference selection\n- Goal-based skill recommendation\n- Skill validation against selected goal\n- Automatic onboarding completion marking\n- Progress tracking through onboarding steps\n\n**Base URL:** `/api/onboarding`\n\n**Authentication:** Required - User must be logged in\n\n**Process:** Sequential - Each step builds on the previous",
			"name": "User Onboarding API - COMPREHENSIVE",
			"item": [
				{
					"name": "Onboarding Flow",
					"item": [
						{
							"name": "Step 1: Select Languages",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"languageIds\": [\n    \"{{englishLanguageId}}\",\n    \"{{spanishLanguageId}}\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/onboarding/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"onboarding",
										"languages"
									]
								},
								"description": "First step of onboarding: User selects their preferred languages. Creates associations between user and selected languages. Validates that all language IDs exist before proceeding."
							},
							"response": []
						},
						{
							"name": "Step 2: Select Goal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"goalId\": \"{{goalId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/onboarding/goal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"onboarding",
										"goal"
									]
								},
								"description": "Second step of onboarding: User selects their learning goal. Updates user\u0027s goal and returns all skills related to the selected goal for the next step."
							},
							"response": []
						},
						{
							"name": "Step 3: Select Skills \u0026 Complete Onboarding",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillIds\": [\n    \"{{skillId1}}\",\n    \"{{skillId2}}\",\n    \"{{skillId3}}\"\n  ],\n  \"goalId\": \"{{goalId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/onboarding/skills",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"onboarding",
										"skills"
									]
								},
								"description": "Final step of onboarding: User selects specific skills and completes onboarding. Validates that selected skills belong to the chosen goal, creates skill associations, and marks user as onboarded."
							},
							"response": []
						}
					],
					"description": "Complete user onboarding flow - must be completed in sequence"
				},
				{
					"name": "Onboarding Support Data",
					"item": [
						{
							"name": "Get All Languages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"languages"
									]
								},
								"description": "Get all available languages for user selection. Used to populate language selection UI in step 1."
							},
							"response": []
						},
						{
							"name": "Get All Goals",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/goals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"goals"
									]
								},
								"description": "Get all available learning goals for user selection. Used to populate goal selection UI in step 2."
							},
							"response": []
						},
						{
							"name": "Get Skills by Goal",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/skills/goal/:goalId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"skills",
										"goal",
										":goalId"
									],
									"variable": [
										{
											"key": "goalId",
											"value": "{{goalId}}",
											"description": "ID of the selected goal"
										}
									]
								},
								"description": "Get all skills related to a specific goal. This endpoint is automatically called after goal selection, but can be used separately for UI population."
							},
							"response": []
						}
					],
					"description": "Supporting endpoints for onboarding data retrieval"
				},
				{
					"name": "Onboarding Status",
					"item": [
						{
							"name": "Check Onboarding Status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/users/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								},
								"description": "Get user profile to check onboarding status. The \u0027isOnboarded\u0027 field indicates if the user has completed the onboarding process."
							},
							"response": []
						}
					],
					"description": "Check user onboarding completion status"
				}
			]
		},
		{
			"description": "Comprehensive OTP management API endpoints with advanced features including SMS/Email delivery, rate limiting, and password reset flows",
			"name": "OTP Management API Collection ",
			"item": [
				{
					"name": "OTP Verification",
					"item": [
						{
							"name": "Verify Registration OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-otp"
									]
								},
								"description": "Verify OTP after user registration. Supports both email and mobile identifiers. Returns user data and authentication token upon successful verification."
							}
						},
						{
							"name": "Verify Registration OTP (Mobile)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"+1234567890\",\n  \"otp\": \"567890\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-otp"
									]
								},
								"description": "Verify OTP sent to mobile number during registration"
							}
						}
					]
				},
				{
					"name": "OTP Resend",
					"item": [
						{
							"name": "Resend Registration OTP (Email)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/resend-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"resend-otp"
									]
								},
								"description": "Resend OTP during registration process via email. Includes rate limiting (60 second cooldown)."
							}
						},
						{
							"name": "Resend Registration OTP (SMS)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"+1234567890\",\n  \"method\": \"sms\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/resend-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"resend-otp"
									]
								},
								"description": "Resend OTP during registration process via SMS"
							}
						}
					]
				},
				{
					"name": "Password Reset Flow",
					"item": [
						{
							"name": "Send Password Reset OTP (Email)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/send-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"send-reset-otp"
									]
								},
								"description": "Send OTP for password reset to user\u0027s email. Validates user exists before sending."
							}
						},
						{
							"name": "Send Password Reset OTP (SMS)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"+1234567890\",\n  \"method\": \"sms\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/send-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"send-reset-otp"
									]
								},
								"description": "Send OTP for password reset to user\u0027s mobile number"
							}
						},
						{
							"name": "Verify Password Reset OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-reset-otp"
									]
								},
								"description": "Verify OTP for password reset. Marks user as eligible for password reset upon successful verification."
							}
						},
						{
							"name": "Reset Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"newPassword\": \"newSecurePassword123!\",\n  \"confirmPassword\": \"newSecurePassword123!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/reset-password",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"reset-password"
									]
								},
								"description": "Reset password using verified OTP. Requires OTP verification to be completed first."
							}
						}
					]
				},
				{
					"name": "Advanced OTP Operations",
					"item": [
						{
							"name": "Send OTP API (Generic)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/send-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"send-otp"
									]
								},
								"description": "Generic OTP sending endpoint. Auto-detects delivery method based on identifier format (email vs mobile)."
							}
						},
						{
							"name": "Check OTP Rate Limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/otp/rate-limit-status?identifier=user@example.com",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"rate-limit-status"
									],
									"query": [
										{
											"key": "identifier",
											"value": "user@example.com",
											"description": "Email or mobile identifier"
										}
									]
								},
								"description": "Check remaining time before next OTP can be sent to prevent rate limit errors."
							}
						}
					]
				},
				{
					"name": "Error Scenarios",
					"item": [
						{
							"name": "Verify Invalid OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"otp\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-otp"
									]
								},
								"description": "Test error handling for invalid OTP codes"
							}
						},
						{
							"name": "Verify Expired OTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/verify-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"verify-otp"
									]
								},
								"description": "Test error handling for expired OTP codes (5 minute expiry)"
							}
						},
						{
							"name": "Resend OTP Too Soon",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"user@example.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/resend-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"resend-otp"
									]
								},
								"description": "Test rate limiting error (60 second cooldown between OTP sends)"
							}
						},
						{
							"name": "Send Reset OTP for Non-existent User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"nonexistent@example.com\",\n  \"method\": \"email\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/otp/send-reset-otp",
									"host": [
										"{{host}}"
									],
									"path": [
										"otp",
										"send-reset-otp"
									]
								},
								"description": "Test error handling when trying to reset password for non-existent user"
							}
						}
					]
				}
			]
		},
		{
			"description": "Comprehensive API collection for advanced project file management with validation, error handling, and analytics.\n\n**Enhanced Features:**\n- Multi-file upload with validation\n- Advanced file categorization and metadata\n- Download analytics and tracking\n- File versioning and history\n- Bulk operations and batch processing\n- Security scanning and validation\n- CDN integration and optimization\n- Preview generation and thumbnails\n\n**Base URL:** `/api/project-files`\n\n**Authentication:** Bearer token required, role-based access control",
			"name": "Enhanced Project File Management API",
			"item": [
				{
					"name": "File Upload \u0026 Management",
					"item": [
						{
							"name": "Upload Project Files ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Validate required variables",
											"pm.test(\u0027Required variables exist\u0027, function () {",
											"    pm.expect(pm.environment.get(\u0027baseUrl\u0027)).to.not.be.undefined;",
											"    pm.expect(pm.environment.get(\u0027authToken\u0027)).to.not.be.undefined;",
											"});",
											"",
											"// Set dynamic project ID if not provided",
											"if (!pm.variables.get(\u0027projectId\u0027)) {",
											"    pm.variables.set(\u0027projectId\u0027, \u0027123\u0027);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Status code is 201\u0027, function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\u0027Response has success flag\u0027, function () {",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"});",
											"",
											"pm.test(\u0027Files uploaded successfully\u0027, function () {",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027uploadedFiles\u0027);",
											"    pm.expect(response.data.uploadedFiles).to.be.an(\u0027array\u0027);",
											"    pm.expect(response.data.uploadedFiles.length).to.be.greaterThan(0);",
											"});",
											"",
											"pm.test(\u0027File validation passed\u0027, function () {",
											"    const response = pm.response.json();",
											"    if (response.data.validation) {",
											"        pm.expect(response.data.validation.errors).to.be.empty;",
											"    }",
											"});",
											"",
											"// Store file IDs for later tests",
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data.uploadedFiles \u0026\u0026 response.data.uploadedFiles.length \u003e 0) {",
											"        pm.environment.set(\u0027lastUploadedFileId\u0027, response.data.uploadedFiles[0].fileId);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "X-Upload-Source",
										"value": "project-management",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": [],
											"description": "Project source files (multiple files supported)"
										},
										{
											"key": "metadata",
											"value": "{\n  \"descriptions\": [\"Complete project source code\", \"Project documentation\", \"Preview image\"],\n  \"categories\": [\"source\", \"documentation\", \"preview\"],\n  \"isPreview\": [false, true, true],\n  \"versions\": [\"1.0.0\", \"1.0.0\", \"1.0.0\"],\n  \"tags\": [[\"source\", \"code\"], [\"docs\", \"readme\"], [\"image\", \"preview\"]]\n}",
											"type": "text",
											"description": "Enhanced metadata for uploaded files"
										},
										{
											"key": "validationRules",
											"value": "{\n  \"maxFileSize\": 52428800,\n  \"allowedTypes\": [\"zip\", \"pdf\", \"jpg\", \"png\", \"doc\", \"docx\"],\n  \"scanForVirus\": true,\n  \"generateThumbnails\": true\n}",
											"type": "text",
											"description": "File validation and processing rules"
										},
										{
											"key": "uploadOptions",
											"value": "{\n  \"enableCDN\": true,\n  \"compressionLevel\": \"medium\",\n  \"generatePreviews\": true,\n  \"notifyOnComplete\": true\n}",
											"type": "text",
											"description": "Upload processing options"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"upload"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}",
											"description": "Project ID to upload files for"
										}
									]
								},
								"description": "Enhanced file upload with comprehensive validation, metadata, and processing options."
							},
							"response": [
								{
									"name": "Successful Upload",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{authToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/project-files/123/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"project-files",
												"123",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"message\": \"Files uploaded and processed successfully\",\n  \"data\": {\n    \"uploadedFiles\": [\n      {\n        \"fileId\": \"file_123456\",\n        \"originalName\": \"project-source.zip\",\n        \"storagePath\": \"/uploads/projects/123/project-source.zip\",\n        \"cdnUrl\": \"https://cdn.example.com/files/project-source.zip\",\n        \"size\": 2048576,\n        \"mimeType\": \"application/zip\",\n        \"category\": \"source\",\n        \"isPreview\": false,\n        \"version\": \"1.0.0\",\n        \"checksums\": {\n          \"md5\": \"5d41402abc4b2a76b9719d911017c592\",\n          \"sha256\": \"e258d248fda94c63753607f7c4494ee0fcbe92f1a76bfdac795c9d84101eb317\"\n        },\n        \"scanResults\": {\n          \"isClean\": true,\n          \"scanDate\": \"2025-06-13T10:30:00Z\"\n        },\n        \"thumbnailUrl\": null,\n        \"downloadCount\": 0,\n        \"createdAt\": \"2025-06-13T10:30:00Z\"\n      }\n    ],\n    \"totalUploaded\": 1,\n    \"totalSize\": 2048576,\n    \"processingTime\": 1234,\n    \"validation\": {\n      \"passed\": true,\n      \"errors\": [],\n      \"warnings\": []\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Bulk File Operations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Bulk operation successful\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data.processedCount).to.be.greaterThan(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"operations\": [\n    {\n      \"fileId\": \"file_123456\",\n      \"action\": \"updateMetadata\",\n      \"data\": {\n        \"description\": \"Updated project source code\",\n        \"tags\": [\"source\", \"updated\", \"v2\"]\n      }\n    },\n    {\n      \"fileId\": \"file_789012\",\n      \"action\": \"updateCategory\",\n      \"data\": {\n        \"category\": \"documentation\",\n        \"isPreview\": true\n      }\n    },\n    {\n      \"fileIds\": [\"file_345678\", \"file_901234\"],\n      \"action\": \"updateVersion\",\n      \"data\": {\n        \"version\": \"2.0.0\"\n      }\n    }\n  ],\n  \"options\": {\n    \"validateBeforeUpdate\": true,\n    \"createBackup\": true,\n    \"notifyUsers\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/bulk-operations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"bulk-operations"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										}
									]
								},
								"description": "Perform bulk operations on project files including metadata updates, category changes, and versioning."
							},
							"response": []
						}
					]
				},
				{
					"name": "File Access \u0026 Downloads",
					"item": [
						{
							"name": "Download File with Analytics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Download successful or access controlled\u0027, function () {",
											"    pm.expect([200, 302, 403].includes(pm.response.code)).to.be.true;",
											"});",
											"",
											"if (pm.response.code === 200) {",
											"    pm.test(\u0027File content received\u0027, function () {",
											"        pm.expect(pm.response.headers.get(\u0027Content-Length\u0027)).to.exist;",
											"    });",
											"}",
											"",
											"if (pm.response.code === 302) {",
											"    pm.test(\u0027Redirect to CDN\u0027, function () {",
											"        pm.expect(pm.response.headers.get(\u0027Location\u0027)).to.exist;",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "X-Download-Source",
										"value": "web-interface",
										"type": "text"
									},
									{
										"key": "User-Agent",
										"value": "StartGoals-Client/1.0",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/files/:fileId/download?trackAnalytics=true\u0026preferCDN=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"files",
										":fileId",
										"download"
									],
									"query": [
										{
											"key": "trackAnalytics",
											"value": "true",
											"description": "Track download analytics"
										},
										{
											"key": "preferCDN",
											"value": "true",
											"description": "Prefer CDN delivery if available"
										},
										{
											"key": "downloadType",
											"value": "direct",
											"description": "Download type: direct, preview, thumbnail"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										},
										{
											"key": "fileId",
											"value": "{{lastUploadedFileId}}"
										}
									]
								},
								"description": "Download a project file with comprehensive analytics tracking and CDN optimization."
							},
							"response": []
						},
						{
							"name": "Get File Analytics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Analytics data retrieved\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027downloadStats\u0027);",
											"    pm.expect(response.data).to.have.property(\u0027accessPatterns\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/files/:fileId/analytics?timeframe=30d\u0026includeUserBreakdown=true\u0026includeGeography=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"files",
										":fileId",
										"analytics"
									],
									"query": [
										{
											"key": "timeframe",
											"value": "30d",
											"description": "Analytics timeframe: 7d, 30d, 90d, 1y"
										},
										{
											"key": "includeUserBreakdown",
											"value": "true",
											"description": "Include user-level download breakdown"
										},
										{
											"key": "includeGeography",
											"value": "true",
											"description": "Include geographic download data"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										},
										{
											"key": "fileId",
											"value": "{{lastUploadedFileId}}"
										}
									]
								},
								"description": "Retrieve comprehensive analytics for file downloads and access patterns."
							},
							"response": []
						}
					]
				},
				{
					"name": "File Management \u0026 Organization",
					"item": [
						{
							"name": "Get Project Files  Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Files list retrieved\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027files\u0027);",
											"    pm.expect(response.data).to.have.property(\u0027pagination\u0027);",
											"    pm.expect(response.data).to.have.property(\u0027summary\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/files?page=1\u0026limit=20\u0026category=source\u0026sortBy=uploadDate\u0026sortOrder=DESC\u0026includeMetadata=true\u0026includeAnalytics=true\u0026search=project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"files"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of files per page"
										},
										{
											"key": "category",
											"value": "source",
											"description": "Filter by file category"
										},
										{
											"key": "sortBy",
											"value": "uploadDate",
											"description": "Sort field: uploadDate, size, downloadCount, name"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order: ASC, DESC"
										},
										{
											"key": "includeMetadata",
											"value": "true",
											"description": "Include file metadata in response"
										},
										{
											"key": "includeAnalytics",
											"value": "true",
											"description": "Include download analytics"
										},
										{
											"key": "search",
											"value": "project",
											"description": "Search in file names and descriptions"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										}
									]
								},
								"description": "Retrieve project files with advanced filtering, sorting, and metadata options."
							},
							"response": []
						},
						{
							"name": "File Version Management",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Version operation successful\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"createVersion\",\n  \"versionData\": {\n    \"version\": \"2.0.0\",\n    \"changelog\": \"Added new features and bug fixes\",\n    \"isPreRelease\": false,\n    \"releaseNotes\": \"Major update with enhanced functionality\"\n  },\n  \"replaceFile\": true,\n  \"preservePreviousVersion\": true,\n  \"notificationSettings\": {\n    \"notifyPurchasers\": true,\n    \"notificationMessage\": \"New version available with exciting updates!\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/files/:fileId/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"files",
										":fileId",
										"versions"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										},
										{
											"key": "fileId",
											"value": "{{lastUploadedFileId}}"
										}
									]
								},
								"description": "Manage file versions including creation, updates, and release management."
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin \u0026 Security",
					"item": [
						{
							"name": "Security Scan Files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Security scan completed\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027scanResults\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"scanType\": \"comprehensive\",\n  \"fileIds\": [\"{{lastUploadedFileId}}\"],\n  \"scanOptions\": {\n    \"checkMalware\": true,\n    \"checkFileIntegrity\": true,\n    \"checkContentPolicy\": true,\n    \"deepAnalysis\": true\n  },\n  \"actionOnThreat\": \"quarantine\",\n  \"notifyAdmin\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/security/scan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"security",
										"scan"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										}
									]
								},
								"description": "Perform comprehensive security scanning on project files."
							},
							"response": []
						},
						{
							"name": "File Access Audit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\u0027Audit log retrieved\u0027, function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.data).to.have.property(\u0027auditLogs\u0027);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-files/:projectId/audit?startDate=2025-06-01\u0026endDate=2025-06-13\u0026action=download\u0026userId=123\u0026includeMetadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files",
										":projectId",
										"audit"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2025-06-01",
											"description": "Audit start date"
										},
										{
											"key": "endDate",
											"value": "2025-06-13",
											"description": "Audit end date"
										},
										{
											"key": "action",
											"value": "download",
											"description": "Filter by action type"
										},
										{
											"key": "userId",
											"value": "123",
											"description": "Filter by user ID"
										},
										{
											"key": "includeMetadata",
											"value": "true",
											"description": "Include request metadata"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{projectId}}"
										}
									]
								},
								"description": "Retrieve detailed audit logs for file access and operations."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API collection for managing project ratings and reviews including user ratings, moderation capabilities, and comprehensive rating analytics.\n\n**Features:**\n- Add/update/delete project ratings\n- User rating management\n- Admin moderation tools\n- Rating analytics and filtering\n- Review content management\n\n**Base URL:** `/api/project-ratings`\n\n**Authentication:** User token required for rating operations, Admin access for moderation",
			"name": "Project Rating Management API",
			"item": [
				{
					"name": "User Rating Operations",
					"item": [
						{
							"name": "Add Project Rating",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": 123,\n  \"rating\": 5,\n  \"review\": \"Excellent project with comprehensive documentation and clean code. The implementation is well-structured and easy to understand. Highly recommended for anyone learning web development!\",\n  \"tags\": [\"well-documented\", \"clean-code\", \"beginner-friendly\"],\n  \"pros\": [\n    \"Clear documentation\",\n    \"Well-organized code structure\",\n    \"Good examples included\"\n  ],\n  \"cons\": [\n    \"Could use more advanced features\"\n  ],\n  \"difficulty\": \"beginner\",\n  \"timeToComplete\": \"2-3 hours\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										""
									]
								},
								"description": "Add a rating and review for a project. Only users who have purchased the project can add ratings."
							},
							"response": []
						},
						{
							"name": "Update Project Rating",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 4,\n  \"review\": \"Updated review: Good project overall with solid fundamentals. The code quality is high and documentation is helpful. Some areas could be improved but still a valuable learning resource.\",\n  \"tags\": [\"well-documented\", \"good-fundamentals\"],\n  \"pros\": [\n    \"Clear documentation\",\n    \"Solid code foundation\",\n    \"Good learning value\"\n  ],\n  \"cons\": [\n    \"Some advanced concepts missing\",\n    \"Could use more examples\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "456",
											"description": "Rating ID to update"
										}
									]
								},
								"description": "Update an existing project rating. Users can only update their own ratings."
							},
							"response": []
						},
						{
							"name": "Delete Project Rating",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "456",
											"description": "Rating ID to delete"
										}
									]
								},
								"description": "Delete a project rating. Users can delete their own ratings, admins can delete any rating."
							},
							"response": []
						},
						{
							"name": "Get My Project Ratings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/my?page=1\u0026limit=20\u0026sortBy=createdAt\u0026sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										"my"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of ratings per page (1-50)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										}
									]
								},
								"description": "Get all ratings submitted by the authenticated user with pagination and sorting options."
							},
							"response": []
						}
					],
					"description": "Endpoints for users to manage their own project ratings and reviews."
				},
				{
					"name": "Public Rating Views",
					"item": [
						{
							"name": "Get Project Ratings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/project/:projectId?page=1\u0026limit=20\u0026rating=5\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										"project",
										":projectId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of ratings per page (1-50)"
										},
										{
											"key": "rating",
											"value": "5",
											"description": "Filter by specific rating (1-5)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include rating statistics summary"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "123",
											"description": "Project ID to get ratings for"
										}
									]
								},
								"description": "Get all ratings for a specific project with filtering, pagination, and sorting options. Public endpoint."
							},
							"response": []
						}
					],
					"description": "Public endpoints for viewing project ratings and reviews."
				},
				{
					"name": "Admin Moderation",
					"item": [
						{
							"name": "Get Ratings for Moderation",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/admin/moderation?page=1\u0026limit=50\u0026status=pending\u0026projectId=123\u0026sortBy=createdAt\u0026sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										"admin",
										"moderation"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of ratings per page (1-100)"
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Filter by moderation status (pending, approved, rejected, all)"
										},
										{
											"key": "projectId",
											"value": "123",
											"description": "Filter by specific project ID"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating, status)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										}
									]
								},
								"description": "Get all ratings for moderation with advanced filtering options. Admin access only."
							},
							"response": []
						},
						{
							"name": "Moderate Project Rating",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"approved\",\n  \"moderationNotes\": \"Rating approved - follows community guidelines and provides constructive feedback\",\n  \"notifyUser\": true,\n  \"flaggedReason\": null\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings/admin/moderate/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings",
										"admin",
										"moderate",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "456",
											"description": "Rating ID to moderate"
										}
									]
								},
								"description": "Moderate a project rating by approving, rejecting, or marking as pending. Includes moderation notes for record keeping."
							},
							"response": []
						}
					],
					"description": "Admin endpoints for moderating project ratings and managing content quality."
				}
			]
		},
		{
			"description": "Comprehensive API endpoints for project management system with all available fields and admin functionality",
			"name": "Project Routes API Collection ",
			"item": [
				{
					"name": "Project Management",
					"item": [
						{
							"name": "Create Project (Admin Only)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"E-commerce React App\",\n  \"description\": \"Complete e-commerce application built with React and Node.js\",\n  \"shortDescription\": \"Modern e-commerce solution with React\",\n  \"price\": 199.99,\n  \"salePrice\": 149.99,\n  \"categoryId\": 1,\n  \"tags\": [\"react\", \"ecommerce\", \"nodejs\", \"javascript\"],\n  \"techStack\": [\"React\", \"Node.js\", \"MongoDB\", \"Express\"],\n  \"programmingLanguages\": [\"JavaScript\", \"CSS\", \"HTML\"],\n  \"demoUrl\": \"https://demo.example.com\",\n  \"previewImages\": [\"https://example.com/image1.jpg\", \"https://example.com/image2.jpg\"],\n  \"requirements\": [\"Node.js 16+\", \"MongoDB 4.4+\", \"Git\"],\n  \"features\": [\"User authentication\", \"Shopping cart\", \"Payment integration\", \"Admin dashboard\"],\n  \"compatibility\": [\"Windows\", \"macOS\", \"Linux\"],\n  \"license\": \"Regular License\",\n  \"liveDemoUrl\": \"https://live-demo.example.com\",\n  \"documentationUrl\": \"https://docs.example.com\",\n  \"supportEmail\": \"support@example.com\",\n  \"version\": \"1.0.0\",\n  \"lastUpdated\": \"2025-06-13\",\n  \"difficulty\": \"intermediate\",\n  \"estimatedTime\": 40\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/project/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"create"
									]
								},
								"description": "Create a new project with all available fields (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get All Projects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/project/all?page=1\u0026limit=20\u0026category=\u0026search=\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026priceRange[min]=0\u0026priceRange[max]=1000\u0026difficulty=\u0026techStack=\u0026license=",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "category",
											"value": ""
										},
										{
											"key": "search",
											"value": ""
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "priceRange[min]",
											"value": "0"
										},
										{
											"key": "priceRange[max]",
											"value": "1000"
										},
										{
											"key": "difficulty",
											"value": ""
										},
										{
											"key": "techStack",
											"value": ""
										},
										{
											"key": "license",
											"value": ""
										}
									]
								},
								"description": "Get all projects with comprehensive filters and pagination"
							},
							"response": []
						},
						{
							"name": "Get Project by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/project/:projectId?includeFiles=true\u0026includeRatings=true\u0026includeDownloads=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										":projectId"
									],
									"query": [
										{
											"key": "includeFiles",
											"value": "true"
										},
										{
											"key": "includeRatings",
											"value": "true"
										},
										{
											"key": "includeDownloads",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Get detailed project information by ID with files, ratings, and download statistics"
							},
							"response": []
						},
						{
							"name": "Update Project (Admin Only)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated E-commerce React App\",\n  \"description\": \"Updated complete e-commerce application built with React and Node.js\",\n  \"shortDescription\": \"Updated modern e-commerce solution with React\",\n  \"price\": 249.99,\n  \"salePrice\": 199.99,\n  \"categoryId\": 1,\n  \"tags\": [\"react\", \"ecommerce\", \"nodejs\", \"javascript\", \"updated\"],\n  \"techStack\": [\"React 18\", \"Node.js\", \"MongoDB\", \"Express\", \"Redux\"],\n  \"programmingLanguages\": [\"JavaScript\", \"TypeScript\", \"CSS\", \"HTML\"],\n  \"demoUrl\": \"https://updated-demo.example.com\",\n  \"previewImages\": [\"https://example.com/updated-image1.jpg\", \"https://example.com/updated-image2.jpg\"],\n  \"requirements\": [\"Node.js 18+\", \"MongoDB 5.0+\", \"Git\", \"Yarn\"],\n  \"features\": [\"User authentication\", \"Shopping cart\", \"Payment integration\", \"Admin dashboard\", \"Real-time notifications\"],\n  \"compatibility\": [\"Windows\", \"macOS\", \"Linux\"],\n  \"license\": \"Extended License\",\n  \"liveDemoUrl\": \"https://updated-live-demo.example.com\",\n  \"documentationUrl\": \"https://updated-docs.example.com\",\n  \"supportEmail\": \"support@example.com\",\n  \"version\": \"2.0.0\",\n  \"lastUpdated\": \"2025-06-13\",\n  \"difficulty\": \"advanced\",\n  \"estimatedTime\": 60,\n  \"isActive\": true,\n  \"isFeatured\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/project/:projectId",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Update project with all available fields (Admin only)"
							},
							"response": []
						},
						{
							"name": "Delete Project (Admin Only)",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/:projectId?permanent=false\u0026reason=Project discontinued",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										":projectId"
									],
									"query": [
										{
											"key": "permanent",
											"value": "false"
										},
										{
											"key": "reason",
											"value": "Project discontinued"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Delete project (soft or permanent) with reason (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Purchase Management",
					"item": [
						{
							"name": "Initiate Project Purchase",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": 1,\n  \"license\": \"Regular License\",\n  \"discountCode\": \"SAVE20\",\n  \"paymentMethod\": \"stripe\",\n  \"billingInfo\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john@example.com\",\n    \"address\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"country\": \"USA\",\n    \"zipCode\": \"10001\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/project/purchase/initiate",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"purchase",
										"initiate"
									]
								},
								"description": "Initiate project purchase with discount and billing information"
							},
							"response": []
						},
						{
							"name": "Complete Project Purchase",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionId\": \"txn_1234567890\",\n  \"paymentIntentId\": \"pi_1234567890\",\n  \"paymentStatus\": \"succeeded\",\n  \"amountPaid\": 199.99,\n  \"currency\": \"USD\",\n  \"paymentMethod\": \"card\",\n  \"receiptUrl\": \"https://stripe.com/receipt/123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/project/purchase/complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"purchase",
										"complete"
									]
								},
								"description": "Complete project purchase after payment verification"
							},
							"response": []
						},
						{
							"name": "Get User Purchases",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/user/purchases?page=1\u0026limit=20\u0026status=completed\u0026sortBy=purchaseDate\u0026sortOrder=DESC",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"user",
										"purchases"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "sortBy",
											"value": "purchaseDate"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										}
									]
								},
								"description": "Get user\u0027s project purchases with filters and pagination"
							},
							"response": []
						},
						{
							"name": "Apply Discount to Project",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": 1,\n  \"discountCode\": \"SAVE20\",\n  \"validateOnly\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/project/apply-discount",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"apply-discount"
									]
								},
								"description": "Apply and validate discount code for project purchase"
							},
							"response": []
						}
					]
				},
				{
					"name": "Statistics and Analytics",
					"item": [
						{
							"name": "Get Project Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/statistics/:projectId?period=month\u0026includeDownloads=true\u0026includeRevenue=true\u0026includeRatings=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"statistics",
										":projectId"
									],
									"query": [
										{
											"key": "period",
											"value": "month"
										},
										{
											"key": "includeDownloads",
											"value": "true"
										},
										{
											"key": "includeRevenue",
											"value": "true"
										},
										{
											"key": "includeRatings",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Get comprehensive project statistics and analytics"
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin Project Management",
					"item": [
						{
							"name": "Get All Projects (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/admin/all?page=1\u0026limit=20\u0026status=active\u0026category=\u0026createdBy=\u0026dateRange[start]=2025-01-01\u0026dateRange[end]=2025-12-31\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"admin",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "category",
											"value": ""
										},
										{
											"key": "createdBy",
											"value": ""
										},
										{
											"key": "dateRange[start]",
											"value": "2025-01-01"
										},
										{
											"key": "dateRange[end]",
											"value": "2025-12-31"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "includeStats",
											"value": "true"
										}
									]
								},
								"description": "Get all projects with admin filters and statistics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Project Details (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/admin/:projectId?includeFiles=true\u0026includePurchases=true\u0026includeAnalytics=true\u0026includeDownloads=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"admin",
										":projectId"
									],
									"query": [
										{
											"key": "includeFiles",
											"value": "true"
										},
										{
											"key": "includePurchases",
											"value": "true"
										},
										{
											"key": "includeAnalytics",
											"value": "true"
										},
										{
											"key": "includeDownloads",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Get detailed project information for admin with files, purchases, and analytics"
							},
							"response": []
						},
						{
							"name": "Get Project Buyers (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/admin/:projectId/buyers?page=1\u0026limit=20\u0026sortBy=purchaseDate\u0026sortOrder=DESC\u0026includeDownloads=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"admin",
										":projectId",
										"buyers"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "sortBy",
											"value": "purchaseDate"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "includeDownloads",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Get list of project buyers with purchase and download information (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Project Downloads (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/project/admin/:projectId/downloads?page=1\u0026limit=20\u0026period=month\u0026sortBy=downloadDate\u0026sortOrder=DESC\u0026includeUserInfo=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"project",
										"admin",
										":projectId",
										"downloads"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "period",
											"value": "month"
										},
										{
											"key": "sortBy",
											"value": "downloadDate"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "includeUserInfo",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "1"
										}
									]
								},
								"description": "Get project download analytics and statistics (Admin only)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API collection for managing course and instructor ratings with comprehensive review moderation and analytics capabilities.\n\n**Features:**\n- Course rating and review system\n- Instructor rating and feedback\n- Review helpfulness voting\n- Admin review moderation\n- Rating analytics and insights\n- Content quality management\n\n**Base URL:** `/api/ratings`\n\n**Authentication:** User authentication for ratings, Admin access for moderation",
			"name": "Rating \u0026 Review Management API",
			"item": [
				{
					"name": "Course Ratings",
					"item": [
						{
							"name": "Rate Course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 5,\n  \"review\": \"Excellent course with comprehensive content and clear explanations. The instructor covers all important topics with practical examples. Highly recommended for anyone looking to master this subject!\",\n  \"pros\": [\n    \"Clear explanations\",\n    \"Practical examples\",\n    \"Comprehensive content\",\n    \"Good pacing\"\n  ],\n  \"cons\": [\n    \"Could use more advanced topics\"\n  ],\n  \"difficulty\": \"intermediate\",\n  \"timeToComplete\": \"15 hours\",\n  \"wouldRecommend\": true,\n  \"tags\": [\"well-structured\", \"practical\", \"beginner-friendly\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ratings/courses/:courseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"courses",
										":courseId"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "123",
											"description": "Course ID to rate"
										}
									]
								},
								"description": "Submit a rating and review for a course. Requires user authentication and course enrollment."
							},
							"response": []
						},
						{
							"name": "Get Course Ratings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ratings/courses/:courseId?page=1\u0026limit=20\u0026rating=5\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"courses",
										":courseId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of ratings per page"
										},
										{
											"key": "rating",
											"value": "5",
											"description": "Filter by specific rating (1-5)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating, helpfulness)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include rating statistics summary"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "123",
											"description": "Course ID to get ratings for"
										}
									]
								},
								"description": "Get all ratings and reviews for a specific course with filtering and sorting options. Public endpoint."
							},
							"response": []
						}
					],
					"description": "Endpoints for course rating and review management."
				},
				{
					"name": "Instructor Ratings",
					"item": [
						{
							"name": "Rate Instructor",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": 5,\n  \"review\": \"Outstanding instructor with deep knowledge and excellent teaching skills. Very responsive to questions and provides helpful feedback on assignments.\",\n  \"teachingQuality\": 5,\n  \"communicationSkills\": 5,\n  \"responsiveness\": 4,\n  \"courseOrganization\": 5,\n  \"pros\": [\n    \"Expert knowledge\",\n    \"Clear communication\",\n    \"Helpful feedback\",\n    \"Well-organized content\"\n  ],\n  \"cons\": [\n    \"Sometimes responds to questions with slight delay\"\n  ],\n  \"wouldTakeAnotherCourse\": true,\n  \"instructorExpertise\": \"expert\",\n  \"tags\": [\"knowledgeable\", \"helpful\", \"professional\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ratings/instructors/:instructorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"instructors",
										":instructorId"
									],
									"variable": [
										{
											"key": "instructorId",
											"value": "456",
											"description": "Instructor ID to rate"
										}
									]
								},
								"description": "Submit a rating and review for an instructor. Requires user authentication and course completion."
							},
							"response": []
						},
						{
							"name": "Get Instructor Ratings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ratings/instructors/:instructorId?page=1\u0026limit=20\u0026rating=5\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"instructors",
										":instructorId"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of ratings per page"
										},
										{
											"key": "rating",
											"value": "5",
											"description": "Filter by specific rating (1-5)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating, helpfulness)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include instructor rating statistics"
										}
									],
									"variable": [
										{
											"key": "instructorId",
											"value": "456",
											"description": "Instructor ID to get ratings for"
										}
									]
								},
								"description": "Get all ratings and reviews for a specific instructor with filtering and sorting options. Public endpoint."
							},
							"response": []
						}
					],
					"description": "Endpoints for instructor rating and feedback management."
				},
				{
					"name": "Review Interactions",
					"item": [
						{
							"name": "Mark Review as Helpful",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isHelpful\": true,\n  \"comment\": \"This review helped me understand what to expect from the course\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ratings/helpful/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"helpful",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "789",
											"description": "Rating ID to mark as helpful/unhelpful"
										}
									]
								},
								"description": "Mark a review as helpful or unhelpful. Helps identify quality reviews for other users."
							},
							"response": []
						}
					],
					"description": "Endpoints for user interactions with reviews and ratings."
				},
				{
					"name": "Admin Review Management",
					"item": [
						{
							"name": "Get All Reviews",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ratings/admin/reviews?page=1\u0026limit=50\u0026status=pending\u0026type=course\u0026rating=1\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026flagged=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"admin",
										"reviews"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of reviews per page"
										},
										{
											"key": "status",
											"value": "pending",
											"description": "Filter by moderation status (pending, approved, rejected, hidden)"
										},
										{
											"key": "type",
											"value": "course",
											"description": "Filter by review type (course, instructor, project)"
										},
										{
											"key": "rating",
											"value": "1",
											"description": "Filter by rating value (1-5)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, rating, reports, helpfulness)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "flagged",
											"value": "true",
											"description": "Show only flagged reviews"
										}
									]
								},
								"description": "Get all reviews across the platform with comprehensive filtering for moderation purposes."
							},
							"response": []
						},
						{
							"name": "Moderate Review",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"approve\",\n  \"moderationNotes\": \"Review follows community guidelines and provides constructive feedback\",\n  \"notifyUser\": true,\n  \"flagReason\": null,\n  \"isPublic\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ratings/admin/reviews/:id/moderate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"admin",
										"reviews",
										":id",
										"moderate"
									],
									"variable": [
										{
											"key": "id",
											"value": "789",
											"description": "Review ID to moderate"
										}
									]
								},
								"description": "Moderate a review by approving, rejecting, or hiding it. Includes moderation notes and user notification options."
							},
							"response": []
						},
						{
							"name": "Get Review Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ratings/admin/reviews/analytics?period=30d\u0026includeStats=true\u0026includeTrends=true\u0026groupBy=day",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings",
										"admin",
										"reviews",
										"analytics"
									],
									"query": [
										{
											"key": "period",
											"value": "30d",
											"description": "Analytics period (7d, 30d, 90d, 1y)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include review statistics"
										},
										{
											"key": "includeTrends",
											"value": "true",
											"description": "Include trend analysis"
										},
										{
											"key": "groupBy",
											"value": "day",
											"description": "Group analytics by period (day, week, month)"
										}
									]
								},
								"description": "Get comprehensive analytics and insights about reviews and ratings across the platform."
							},
							"response": []
						}
					],
					"description": "Administrative endpoints for review moderation and analytics."
				}
			]
		},
		{
			"description": "Central API collection showcasing all available route endpoints in the StartGoals platform with health check functionality.\n\n**Features:**\n- Health check endpoint\n- Complete route mapping\n- API endpoint discovery\n- System status monitoring\n\n**Base URL:** `/api`\n\n**Authentication:** Varies by endpoint - see individual route collections for specific requirements",
			"name": "Main Router API",
			"item": [
				{
					"name": "System Health",
					"item": [
						{
							"name": "Health Check",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"health"
									]
								},
								"description": "Check server health and status. Returns current timestamp and system status."
							},
							"response": [
								{
									"name": "Successful Health Check",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/health",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"message\": \"Server is running\",\n  \"timestamp\": \"2025-06-13T10:30:00.000Z\",\n  \"status\": \"healthy\"\n}"
								}
							]
						}
					],
					"description": "System health monitoring and status endpoints."
				},
				{
					"name": "API Route Overview",
					"item": [
						{
							"name": "User Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user"
									]
								},
								"description": "Base path for user management endpoints. See userRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "OTP Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"otp"
									]
								},
								"description": "Base path for OTP verification endpoints. See otpRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Skill Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/skill",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"skill"
									]
								},
								"description": "Base path for skill management endpoints. See skillRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Category Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/category",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"category"
									]
								},
								"description": "Base path for category management endpoints. See categoryRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Language Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/language",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"language"
									]
								},
								"description": "Base path for language management endpoints. See languageRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Onboarding Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/onboarding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"onboarding"
									]
								},
								"description": "Base path for user onboarding endpoints. See onboardingRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Goal Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/goal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"goal"
									]
								},
								"description": "Base path for goal management endpoints. See goalRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Course Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course"
									]
								},
								"description": "Base path for course management endpoints. See courseRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Course Level Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/course-levels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"course-levels"
									]
								},
								"description": "Base path for course level management endpoints. See courseLevelRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Section Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/section",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"section"
									]
								},
								"description": "Base path for course section management endpoints. See sectionRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Live Session Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/live-session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"live-session"
									]
								},
								"description": "Base path for live session management endpoints. See liveSessionRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Batch Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch"
									]
								},
								"description": "Base path for batch management endpoints. See batchRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Batch Students Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/batch-students",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"batch-students"
									]
								},
								"description": "Base path for batch student management endpoints. See batchStudentsRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Web Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"web"
									]
								},
								"description": "Base path for web-specific endpoints. See webRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Settings Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"settings"
									]
								},
								"description": "Base path for settings management endpoints. See settingsRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Banner Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/banners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"banners"
									]
								},
								"description": "Base path for banner management endpoints. See bannerRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Search Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search"
									]
								},
								"description": "Base path for search functionality endpoints. See searchRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Rating \u0026 Review Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ratings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ratings"
									]
								},
								"description": "Base path for rating and review endpoints. See ratingRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Project Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								},
								"description": "Base path for project management endpoints. See projectRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Project File Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-files"
									]
								},
								"description": "Base path for project file management endpoints. See projectFileRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Project Rating Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/project-ratings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"project-ratings"
									]
								},
								"description": "Base path for project rating endpoints. See projectRatingRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Discount Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/discounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"discounts"
									]
								},
								"description": "Base path for discount management endpoints. See discountRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "File Upload Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"upload"
									]
								},
								"description": "Base path for file upload endpoints. See fileUploadRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						},
						{
							"name": "Teacher Management Routes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/teachers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"teachers"
									]
								},
								"description": "Base path for teacher management endpoints. See teacherRoutes.postman_collection.json for detailed endpoints."
							},
							"response": []
						}
					],
					"description": "Overview of all available API routes and their base paths. Each route has its own detailed Postman collection."
				}
			]
		},
		{
			"description": "**COMPREHENSIVE SEARCH API** - Advanced search functionality covering courses, projects, instructors with analytics and filtering capabilities.\n\n**Key Features:**\n- Intelligent autocomplete suggestions with ranking\n- Advanced course search with comprehensive filtering\n- Instructor search with skill-based filtering\n- Project search with technology filtering\n- Comprehensive multi-type search\n- Search analytics and reporting (Admin)\n- Recent searches and personalization\n- Filter options management\n\n**Base URL:** `/api/search`\n\n**Authentication:** Optional for basic search, required for analytics\n\n**Search Types:**\n- Suggestions: Quick autocomplete with recent searches\n- Courses: Advanced filtering by category, level, price, etc.\n- Instructors: Filter by subjects, skill level, rating\n- Projects: Filter by difficulty, technology, duration\n- Comprehensive: Multi-type search with unified results",
			"name": "Search \u0026 Analytics API - COMPREHENSIVE",
			"item": [
				{
					"name": "Search Suggestions",
					"item": [
						{
							"name": "Get Search Suggestions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional - for personalized suggestions"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/suggestions?query={{searchQuery}}\u0026limit=10\u0026type=all\u0026include_recent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"suggestions"
									],
									"query": [
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Search query (min 2 characters)"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of suggestions to return"
										},
										{
											"key": "type",
											"value": "all",
											"description": "Type: all, courses, projects, instructors"
										},
										{
											"key": "include_recent",
											"value": "true",
											"description": "Include recent searches for logged-in users"
										}
									]
								},
								"description": "Get intelligent search suggestions with relevance ranking. Includes courses, projects, and instructors with thumbnails and metadata."
							},
							"response": []
						}
					],
					"description": "Autocomplete and suggestion endpoints"
				},
				{
					"name": "Course Search",
					"item": [
						{
							"name": "Search Courses",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional - for personalized results"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/courses?query={{searchQuery}}\u0026page=1\u0026limit=12\u0026category={{categoryId}}\u0026level={{levelId}}\u0026courseType=live\u0026priceMin=0\u0026priceMax=100\u0026language={{languageId}}\u0026rating=4\u0026instructor={{instructorId}}\u0026sortBy=relevance\u0026sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"courses"
									],
									"query": [
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Search query for courses"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "12",
											"description": "Number of courses per page"
										},
										{
											"key": "category",
											"value": "{{categoryId}}",
											"description": "Filter by category ID(s)"
										},
										{
											"key": "level",
											"value": "{{levelId}}",
											"description": "Filter by course level ID(s)"
										},
										{
											"key": "courseType",
											"value": "live",
											"description": "Course type: live or recorded"
										},
										{
											"key": "priceMin",
											"value": "0",
											"description": "Minimum price filter"
										},
										{
											"key": "priceMax",
											"value": "100",
											"description": "Maximum price filter"
										},
										{
											"key": "language",
											"value": "{{languageId}}",
											"description": "Filter by language ID(s)"
										},
										{
											"key": "rating",
											"value": "4",
											"description": "Minimum rating filter"
										},
										{
											"key": "instructor",
											"value": "{{instructorId}}",
											"description": "Filter by instructor ID(s)"
										},
										{
											"key": "sortBy",
											"value": "relevance",
											"description": "Sort by: relevance, price, title, created"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order: ASC or DESC"
										},
										{
											"key": "tags",
											"value": "javascript,react",
											"description": "Filter by tags (comma-separated)"
										},
										{
											"key": "duration",
											"value": "1-5",
											"description": "Duration range in hours"
										},
										{
											"key": "accessType",
											"value": "free",
											"description": "Access type: free or paid"
										},
										{
											"key": "availability",
											"value": "ongoing",
											"description": "Availability: ongoing, upcoming, archived"
										}
									]
								},
								"description": "Advanced course search with comprehensive filtering options including price, level, instructor, rating, and availability."
							},
							"response": []
						}
					],
					"description": "Course-specific search endpoints"
				},
				{
					"name": "Instructor Search",
					"item": [
						{
							"name": "Search Instructors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/instructors?query={{searchQuery}}\u0026page=1\u0026limit=12\u0026subjects={{subjectIds}}\u0026skillLevel={{skillLevelIds}}\u0026language={{languageIds}}\u0026rating=4\u0026sortBy=username\u0026sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"instructors"
									],
									"query": [
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Search query for instructor names/usernames"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "12",
											"description": "Number of instructors per page"
										},
										{
											"key": "subjects",
											"value": "{{subjectIds}}",
											"description": "Filter by teaching subjects"
										},
										{
											"key": "skillLevel",
											"value": "{{skillLevelIds}}",
											"description": "Filter by skill level expertise"
										},
										{
											"key": "language",
											"value": "{{languageIds}}",
											"description": "Filter by languages taught"
										},
										{
											"key": "rating",
											"value": "4",
											"description": "Minimum rating filter"
										},
										{
											"key": "sortBy",
											"value": "username",
											"description": "Sort by: username, courses, newest"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "Sort order: ASC or DESC"
										}
									]
								},
								"description": "Search instructors with filtering by expertise, languages, and ratings."
							},
							"response": []
						}
					],
					"description": "Instructor-specific search endpoints"
				},
				{
					"name": "Project Search",
					"item": [
						{
							"name": "Search Projects",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/projects?query={{searchQuery}}\u0026page=1\u0026limit=12\u0026category={{categoryId}}\u0026difficulty=intermediate\u0026technology={{techStack}}\u0026duration=4-6\u0026sortBy=relevance\u0026sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"projects"
									],
									"query": [
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Search query for projects"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "12",
											"description": "Number of projects per page"
										},
										{
											"key": "category",
											"value": "{{categoryId}}",
											"description": "Filter by project category"
										},
										{
											"key": "difficulty",
											"value": "intermediate",
											"description": "Difficulty: beginner, intermediate, advanced, expert"
										},
										{
											"key": "technology",
											"value": "{{techStack}}",
											"description": "Filter by technologies used"
										},
										{
											"key": "duration",
											"value": "4-6",
											"description": "Duration range in weeks"
										},
										{
											"key": "sortBy",
											"value": "relevance",
											"description": "Sort by: relevance, price, created, rating"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order: ASC or DESC"
										}
									]
								},
								"description": "Search projects with filtering by difficulty, technology stack, and duration."
							},
							"response": []
						}
					],
					"description": "Project-specific search endpoints"
				},
				{
					"name": "Comprehensive Search",
					"item": [
						{
							"name": "Multi-Type Search",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/comprehensive?query={{searchQuery}}\u0026type=all\u0026page=1\u0026limit=20\u0026category={{categoryId}}\u0026skill_level={{skillLevels}}\u0026price_min=0\u0026price_max=200\u0026course_type=live\u0026language={{languageIds}}\u0026rating_min=4\u0026sort=relevance\u0026free_only=false\u0026premium_only=false\u0026view_mode=grid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"comprehensive"
									],
									"query": [
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Universal search query"
										},
										{
											"key": "type",
											"value": "all",
											"description": "Search type: all, courses, projects, instructors"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Items per page"
										},
										{
											"key": "category",
											"value": "{{categoryId}}",
											"description": "Filter by category ID(s)"
										},
										{
											"key": "skill_level",
											"value": "{{skillLevels}}",
											"description": "Filter by skill levels"
										},
										{
											"key": "price_min",
											"value": "0",
											"description": "Minimum price"
										},
										{
											"key": "price_max",
											"value": "200",
											"description": "Maximum price"
										},
										{
											"key": "course_type",
											"value": "live",
											"description": "Course type filter"
										},
										{
											"key": "language",
											"value": "{{languageIds}}",
											"description": "Language filter"
										},
										{
											"key": "rating_min",
											"value": "4",
											"description": "Minimum rating"
										},
										{
											"key": "sort",
											"value": "relevance",
											"description": "Sort by relevance, popular, newest, price_low, price_high, rating"
										},
										{
											"key": "free_only",
											"value": "false",
											"description": "Show only free content"
										},
										{
											"key": "premium_only",
											"value": "false",
											"description": "Show only premium content"
										},
										{
											"key": "view_mode",
											"value": "grid",
											"description": "View mode: grid or list"
										},
										{
											"key": "tags",
											"value": "javascript,react",
											"description": "Filter by tags"
										},
										{
											"key": "instructor",
											"value": "{{instructorIds}}",
											"description": "Filter by instructor IDs"
										},
										{
											"key": "duration_min",
											"value": "1",
											"description": "Minimum duration in hours"
										},
										{
											"key": "duration_max",
											"value": "10",
											"description": "Maximum duration in hours"
										}
									]
								},
								"description": "Comprehensive search across all content types with advanced filtering and sorting options."
							},
							"response": []
						}
					],
					"description": "Multi-type comprehensive search"
				},
				{
					"name": "Search Filters \u0026 Metadata",
					"item": [
						{
							"name": "Get Search Filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text",
										"description": "Optional"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/filters?type=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"filters"
									],
									"query": [
										{
											"key": "type",
											"value": "all",
											"description": "Filter type: all, courses, projects, instructors"
										}
									]
								},
								"description": "Get available filter options for search UI including categories, levels, languages, instructors, and predefined ranges."
							},
							"response": []
						}
					],
					"description": "Search configuration and filter options"
				},
				{
					"name": "Search Analytics (Admin)",
					"item": [
						{
							"name": "Get Search Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/search/analytics?page=1\u0026limit=50\u0026startDate=2025-01-01\u0026endDate=2025-12-31\u0026searchType=courses\u0026userId={{userId}}\u0026query={{searchQuery}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"search",
										"analytics"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Items per page"
										},
										{
											"key": "startDate",
											"value": "2025-01-01",
											"description": "Start date for analytics range"
										},
										{
											"key": "endDate",
											"value": "2025-12-31",
											"description": "End date for analytics range"
										},
										{
											"key": "searchType",
											"value": "courses",
											"description": "Filter by search type"
										},
										{
											"key": "userId",
											"value": "{{userId}}",
											"description": "Filter by specific user"
										},
										{
											"key": "query",
											"value": "{{searchQuery}}",
											"description": "Filter by search query"
										}
									]
								},
								"description": "Get comprehensive search analytics including popular searches, conversion rates, and user behavior insights. Admin access required."
							},
							"response": []
						}
					],
					"description": "Analytics and reporting for search behavior (Admin only)"
				}
			]
		},
		{
			"description": "Comprehensive API collection for managing course sections, lessons, and resources with advanced features including nested content management, bulk operations, and detailed analytics.\n\n**Enhanced Features:**\n- Complete section CRUD operations\n- Nested lesson and resource management\n- Bulk section operations\n- Section reordering and content structure\n- Progress tracking and analytics\n- Content validation and preview\n- Section cloning and templates\n\n**Base URL:** `/api/sections`\n\n**Authentication:** Teacher/Admin access required for management operations",
			"name": "Section Management API ",
			"item": [
				{
					"name": "Section Management",
					"item": [
						{
							"name": "Create Section with Lessons",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": 123,\n  \"title\": \"Introduction to Advanced JavaScript Concepts\",\n  \"description\": \"This section covers advanced JavaScript concepts including closures, prototypes, async/await, and modern ES6+ features.\",\n  \"order\": 1,\n  \"isPublished\": true,\n  \"estimatedDuration\": 180,\n  \"objectives\": [\n    \"Understand JavaScript closures and lexical scoping\",\n    \"Master asynchronous programming patterns\",\n    \"Implement ES6+ features effectively\"\n  ],\n  \"lessons\": [\n    {\n      \"title\": \"Understanding JavaScript Closures\",\n      \"type\": \"video\",\n      \"content\": \"In this lesson, we\u0027ll explore the powerful concept of closures in JavaScript and how they enable data privacy and functional programming patterns.\",\n      \"videoUrl\": \"https://example.com/video/closures-lesson.mp4\",\n      \"videoDuration\": 900,\n      \"order\": 1,\n      \"isPublished\": true,\n      \"isPreview\": false,\n      \"isFree\": false,\n      \"objectives\": [\n        \"Define what a closure is\",\n        \"Identify closure use cases\",\n        \"Implement closure patterns\"\n      ],\n      \"resources\": [\n        {\n          \"title\": \"Closures Code Examples\",\n          \"type\": \"file\",\n          \"fileUrl\": \"https://example.com/resources/closures-examples.js\",\n          \"description\": \"Practical code examples demonstrating closure patterns\",\n          \"order\": 1,\n          \"isDownloadable\": true\n        },\n        {\n          \"title\": \"Closures Reference Guide\",\n          \"type\": \"pdf\",\n          \"fileUrl\": \"https://example.com/resources/closures-guide.pdf\",\n          \"description\": \"Comprehensive reference guide for JavaScript closures\",\n          \"order\": 2,\n          \"isDownloadable\": true\n        }\n      ]\n    },\n    {\n      \"title\": \"Async/Await and Promises Deep Dive\",\n      \"type\": \"video\",\n      \"content\": \"Master asynchronous JavaScript programming with promises and async/await syntax.\",\n      \"videoUrl\": \"https://example.com/video/async-await-lesson.mp4\",\n      \"videoDuration\": 1200,\n      \"order\": 2,\n      \"isPublished\": true,\n      \"isPreview\": true,\n      \"isFree\": false,\n      \"resources\": [\n        {\n          \"title\": \"Async Programming Examples\",\n          \"type\": \"file\",\n          \"fileUrl\": \"https://example.com/resources/async-examples.js\",\n          \"description\": \"Real-world async programming examples and patterns\",\n          \"order\": 1,\n          \"isDownloadable\": true\n        }\n      ]\n    },\n    {\n      \"title\": \"Interactive Coding Exercise\",\n      \"type\": \"exercise\",\n      \"content\": \"Practice implementing closures and async patterns in an interactive coding environment.\",\n      \"order\": 3,\n      \"isPublished\": true,\n      \"isPreview\": false,\n      \"isFree\": false,\n      \"exerciseData\": {\n        \"instructions\": \"Implement a closure-based counter and an async data fetcher\",\n        \"starterCode\": \"// Your code here\",\n        \"solution\": \"// Solution will be provided after submission\",\n        \"testCases\": [\n          \"Counter increments correctly\",\n          \"Async function handles errors properly\"\n        ]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections"
									]
								},
								"description": "Create a new section with associated lessons and resources. Supports complex nested content structure."
							},
							"response": []
						},
						{
							"name": "Get Section with Complete Content",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId?includeResources=true\u0026includeProgress=true\u0026includeAnalytics=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "includeResources",
											"value": "true",
											"description": "Include lesson resources"
										},
										{
											"key": "includeProgress",
											"value": "true",
											"description": "Include user progress data"
										},
										{
											"key": "includeAnalytics",
											"value": "true",
											"description": "Include section analytics"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID"
										}
									]
								},
								"description": "Get detailed section information including lessons, resources, progress tracking, and analytics."
							},
							"response": []
						},
						{
							"name": "Update Section Content",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Advanced JavaScript Concepts - Updated\",\n  \"description\": \"Updated description with additional learning outcomes and prerequisites.\",\n  \"isPublished\": true,\n  \"estimatedDuration\": 200,\n  \"objectives\": [\n    \"Master JavaScript closures and advanced scoping\",\n    \"Implement complex asynchronous programming patterns\",\n    \"Utilize modern ES6+ features in real applications\",\n    \"Understand JavaScript engine optimization\"\n  ],\n  \"prerequisites\": [\n    \"Basic JavaScript knowledge\",\n    \"Understanding of functions and variables\",\n    \"Familiarity with basic async concepts\"\n  ],\n  \"difficulty\": \"advanced\",\n  \"tags\": [\"javascript\", \"closures\", \"async\", \"es6\", \"advanced\"]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID to update"
										}
									]
								},
								"description": "Update section metadata, objectives, and settings."
							},
							"response": []
						}
					]
				},
				{
					"name": "Course Content Structure",
					"item": [
						{
							"name": "Get Course Content Structure",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/course/:courseId/structure?includeUnpublished=false\u0026includeProgress=true\u0026format=detailed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										"course",
										":courseId",
										"structure"
									],
									"query": [
										{
											"key": "includeUnpublished",
											"value": "false",
											"description": "Include unpublished content"
										},
										{
											"key": "includeProgress",
											"value": "true",
											"description": "Include user progress"
										},
										{
											"key": "format",
											"value": "detailed",
											"description": "Response format: detailed, summary, tree"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "123",
											"description": "Course ID"
										}
									]
								},
								"description": "Get complete course content structure with sections, lessons, and resources organized hierarchically."
							},
							"response": []
						},
						{
							"name": "Reorder Course Sections",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sectionOrder\": [\n    {\n      \"sectionId\": 101,\n      \"order\": 1,\n      \"lessonOrder\": [\n        { \"lessonId\": 501, \"order\": 1 },\n        { \"lessonId\": 502, \"order\": 2 },\n        { \"lessonId\": 503, \"order\": 3 }\n      ]\n    },\n    {\n      \"sectionId\": 102,\n      \"order\": 2,\n      \"lessonOrder\": [\n        { \"lessonId\": 504, \"order\": 1 },\n        { \"lessonId\": 505, \"order\": 2 }\n      ]\n    },\n    {\n      \"sectionId\": 103,\n      \"order\": 3,\n      \"lessonOrder\": [\n        { \"lessonId\": 506, \"order\": 1 },\n        { \"lessonId\": 507, \"order\": 2 },\n        { \"lessonId\": 508, \"order\": 3 },\n        { \"lessonId\": 509, \"order\": 4 }\n      ]\n    }\n  ],\n  \"preserveProgress\": true,\n  \"updateTimestamp\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/course/:courseId/reorder",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										"course",
										":courseId",
										"reorder"
									],
									"variable": [
										{
											"key": "courseId",
											"value": "123",
											"description": "Course ID"
										}
									]
								},
								"description": "Reorder sections and lessons within a course while preserving user progress and maintaining content integrity."
							},
							"response": []
						}
					]
				},
				{
					"name": "Bulk Operations",
					"item": [
						{
							"name": "Bulk Create Sections",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"courseId\": 123,\n  \"sections\": [\n    {\n      \"title\": \"Introduction to React Fundamentals\",\n      \"description\": \"Learn the core concepts of React including components, JSX, and props.\",\n      \"order\": 1,\n      \"isPublished\": true,\n      \"estimatedDuration\": 120,\n      \"objectives\": [\n        \"Understand React components\",\n        \"Learn JSX syntax\",\n        \"Master props and state\"\n      ],\n      \"lessons\": [\n        {\n          \"title\": \"What is React?\",\n          \"type\": \"video\",\n          \"content\": \"Introduction to React library and its ecosystem.\",\n          \"videoUrl\": \"https://example.com/react-intro.mp4\",\n          \"videoDuration\": 600,\n          \"order\": 1,\n          \"isPublished\": true,\n          \"isPreview\": true,\n          \"isFree\": true\n        },\n        {\n          \"title\": \"Setting Up Development Environment\",\n          \"type\": \"video\",\n          \"content\": \"Configure your development environment for React.\",\n          \"videoUrl\": \"https://example.com/react-setup.mp4\",\n          \"videoDuration\": 900,\n          \"order\": 2,\n          \"isPublished\": true,\n          \"isPreview\": false,\n          \"isFree\": false\n        }\n      ]\n    },\n    {\n      \"title\": \"React Components Deep Dive\",\n      \"description\": \"Advanced component patterns and best practices.\",\n      \"order\": 2,\n      \"isPublished\": false,\n      \"estimatedDuration\": 180,\n      \"objectives\": [\n        \"Create reusable components\",\n        \"Implement component composition\",\n        \"Understand lifecycle methods\"\n      ],\n      \"lessons\": [\n        {\n          \"title\": \"Functional vs Class Components\",\n          \"type\": \"video\",\n          \"content\": \"Compare different component types and their use cases.\",\n          \"videoUrl\": \"https://example.com/component-types.mp4\",\n          \"videoDuration\": 750,\n          \"order\": 1,\n          \"isPublished\": false,\n          \"isPreview\": false,\n          \"isFree\": false\n        }\n      ]\n    }\n  ],\n  \"publishAll\": false,\n  \"preserveOrder\": true,\n  \"validateContent\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										"bulk"
									]
								},
								"description": "Create multiple sections with nested lessons and resources in a single operation."
							},
							"response": []
						},
						{
							"name": "Clone Section to Course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceSectionId\": 123,\n  \"targetCourseId\": 456,\n  \"cloneOptions\": {\n    \"includeLessons\": true,\n    \"includeResources\": true,\n    \"includeSettings\": false,\n    \"updateReferences\": true,\n    \"preserveOrder\": false,\n    \"newOrder\": 3\n  },\n  \"modifications\": {\n    \"titlePrefix\": \"[Cloned] \",\n    \"updateUrls\": true,\n    \"resetProgress\": true,\n    \"markAsDraft\": true\n  },\n  \"validation\": {\n    \"checkDuplicates\": true,\n    \"validateResources\": true,\n    \"verifyPermissions\": true\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId",
										"clone"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Source section ID to clone"
										}
									]
								},
								"description": "Clone a section with all its content to another course with various customization options."
							},
							"response": []
						}
					]
				},
				{
					"name": "Analytics \u0026 Progress",
					"item": [
						{
							"name": "Section Analytics Dashboard",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId/analytics?timeRange=30d\u0026includeEngagement=true\u0026includeCompletion=true\u0026includeRatings=true\u0026groupBy=day",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId",
										"analytics"
									],
									"query": [
										{
											"key": "timeRange",
											"value": "30d",
											"description": "Time range: 7d, 30d, 90d, 1y"
										},
										{
											"key": "includeEngagement",
											"value": "true",
											"description": "Include engagement metrics"
										},
										{
											"key": "includeCompletion",
											"value": "true",
											"description": "Include completion statistics"
										},
										{
											"key": "includeRatings",
											"value": "true",
											"description": "Include ratings and feedback"
										},
										{
											"key": "groupBy",
											"value": "day",
											"description": "Group data by: hour, day, week, month"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID"
										}
									]
								},
								"description": "Get comprehensive analytics for a section including engagement metrics, completion rates, and student feedback."
							},
							"response": []
						},
						{
							"name": "Bulk Section Progress",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/course/:courseId/progress?studentId=456\u0026includeDetails=true\u0026calculateTrends=true\u0026format=summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										"course",
										":courseId",
										"progress"
									],
									"query": [
										{
											"key": "studentId",
											"value": "456",
											"description": "Specific student ID (optional)"
										},
										{
											"key": "includeDetails",
											"value": "true",
											"description": "Include detailed progress breakdown"
										},
										{
											"key": "calculateTrends",
											"value": "true",
											"description": "Calculate progress trends"
										},
										{
											"key": "format",
											"value": "summary",
											"description": "Response format: summary, detailed, export"
										}
									],
									"variable": [
										{
											"key": "courseId",
											"value": "123",
											"description": "Course ID"
										}
									]
								},
								"description": "Get progress tracking data for all sections in a course, with optional student-specific filtering."
							},
							"response": []
						}
					]
				},
				{
					"name": "Content Validation",
					"item": [
						{
							"name": "Validate Section Content",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"validationLevel\": \"comprehensive\",\n  \"checks\": {\n    \"contentStructure\": true,\n    \"mediaAccessibility\": true,\n    \"linkValidation\": true,\n    \"resourceAvailability\": true,\n    \"durationAccuracy\": true,\n    \"prerequisiteChain\": true,\n    \"learningObjectives\": true,\n    \"contentQuality\": true\n  },\n  \"autoFix\": {\n    \"enabled\": false,\n    \"fixableIssues\": [\"broken_links\", \"missing_descriptions\", \"order_conflicts\"]\n  },\n  \"reporting\": {\n    \"includeRecommendations\": true,\n    \"severityLevels\": [\"critical\", \"warning\", \"info\"],\n    \"exportFormat\": \"json\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId",
										"validate"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID to validate"
										}
									]
								},
								"description": "Perform comprehensive content validation including structure, accessibility, and quality checks."
							},
							"response": []
						},
						{
							"name": "Preview Section Content",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId/preview?mode=instructor\u0026includeNotes=true\u0026simulateStudent=false\u0026previewQuality=high",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId",
										"preview"
									],
									"query": [
										{
											"key": "mode",
											"value": "instructor",
											"description": "Preview mode: instructor, student, public"
										},
										{
											"key": "includeNotes",
											"value": "true",
											"description": "Include instructor notes"
										},
										{
											"key": "simulateStudent",
											"value": "false",
											"description": "Simulate student view restrictions"
										},
										{
											"key": "previewQuality",
											"value": "high",
											"description": "Preview quality: low, medium, high"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID to preview"
										}
									]
								},
								"description": "Generate a preview of section content with different viewing modes and quality settings."
							},
							"response": []
						}
					]
				},
				{
					"name": "Advanced Features",
					"item": [
						{
							"name": "Export Section Template",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/sections/:sectionId/export?format=template\u0026includeContent=false\u0026includeStructure=true\u0026anonymize=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										":sectionId",
										"export"
									],
									"query": [
										{
											"key": "format",
											"value": "template",
											"description": "Export format: template, full, structure"
										},
										{
											"key": "includeContent",
											"value": "false",
											"description": "Include actual content or just structure"
										},
										{
											"key": "includeStructure",
											"value": "true",
											"description": "Include organizational structure"
										},
										{
											"key": "anonymize",
											"value": "true",
											"description": "Remove identifying information"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "123",
											"description": "Section ID to export"
										}
									]
								},
								"description": "Export section as a reusable template that can be imported into other courses."
							},
							"response": []
						},
						{
							"name": "Import Section Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"templateData\": {\n    \"title\": \"Section Template\",\n    \"description\": \"Reusable section template\",\n    \"structure\": {\n      \"lessons\": [\n        {\n          \"title\": \"Template Lesson 1\",\n          \"type\": \"video\",\n          \"order\": 1,\n          \"resources\": [\n            {\n              \"title\": \"Template Resource\",\n              \"type\": \"file\",\n              \"order\": 1\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"targetCourseId\": 456,\n  \"importOptions\": {\n    \"preserveStructure\": true,\n    \"adaptContent\": true,\n    \"validateCompatibility\": true,\n    \"mergeWithExisting\": false,\n    \"insertAtPosition\": 2\n  },\n  \"customization\": {\n    \"titleSuffix\": \" - Imported\",\n    \"updateTimestamps\": true,\n    \"resetProgress\": true,\n    \"assignToInstructor\": true\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/sections/import-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"sections",
										"import-template"
									]
								},
								"description": "Import a section template into a target course with customization options."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "Comprehensive API endpoints for system settings management with all available functionality",
			"name": "Settings Routes API Collection ",
			"item": [
				{
					"name": "Basic Settings Management",
					"item": [
						{
							"name": "Get Settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings?key=\u0026isActive=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings"
									],
									"query": [
										{
											"key": "key",
											"value": "",
											"description": "Specific setting key to retrieve"
										},
										{
											"key": "isActive",
											"value": "true",
											"description": "Filter by active status"
										}
									]
								},
								"description": "Get all settings or filter by specific key"
							},
							"response": []
						},
						{
							"name": "Create or Update Setting",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"site_maintenance\",\n  \"value\": \"false\",\n  \"description\": \"Enable/disable site maintenance mode\",\n  \"dataType\": \"boolean\",\n  \"category\": \"system\",\n  \"isPublic\": false,\n  \"isEditable\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings"
									]
								},
								"description": "Create new setting or update existing one (upsert operation)"
							},
							"response": []
						},
						{
							"name": "Delete Setting",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings/:settingId",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										":settingId"
									],
									"variable": [
										{
											"key": "settingId",
											"value": "1"
										}
									]
								},
								"description": "Delete a specific setting (soft delete)"
							},
							"response": []
						},
						{
							"name": "Initialize Default Settings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"forceReset\": false,\n  \"includeExamples\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/initialize",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"initialize"
									]
								},
								"description": "Initialize default system settings (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Notification Templates",
					"item": [
						{
							"name": "Get Notification Templates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings/notifications/templates?type=\u0026category=\u0026isActive=true\u0026page=1\u0026limit=20",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"notifications",
										"templates"
									],
									"query": [
										{
											"key": "type",
											"value": "",
											"description": "Template type (email, sms, push)"
										},
										{
											"key": "category",
											"value": "",
											"description": "Template category (user, course, payment, etc.)"
										},
										{
											"key": "isActive",
											"value": "true"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								},
								"description": "Get notification templates with filters and pagination"
							},
							"response": []
						},
						{
							"name": "Create Notification Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Welcome Email\",\n  \"description\": \"Welcome email template for new users\",\n  \"type\": \"email\",\n  \"category\": \"user\",\n  \"subject\": \"Welcome to StartGoals - {{userName}}\",\n  \"content\": \"\u003ch1\u003eWelcome {{userName}}!\u003c/h1\u003e\u003cp\u003eThank you for joining StartGoals. We\u0027re excited to have you on board.\u003c/p\u003e\",\n  \"variables\": [\"userName\", \"userEmail\", \"activationLink\"],\n  \"isActive\": true,\n  \"language\": \"en\",\n  \"priority\": \"normal\",\n  \"sendFrom\": \"noreply@startgoals.com\",\n  \"sendFromName\": \"StartGoals Team\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/notifications/templates",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"notifications",
										"templates"
									]
								},
								"description": "Create new notification template with variables and styling"
							},
							"response": []
						},
						{
							"name": "Update Notification Template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Updated Welcome Email\",\n  \"description\": \"Updated welcome email template for new users\",\n  \"subject\": \"Welcome to StartGoals Platform - {{userName}}\",\n  \"content\": \"\u003ch1\u003eWelcome {{userName}}!\u003c/h1\u003e\u003cp\u003eThank you for joining StartGoals. We\u0027re excited to have you on board.\u003c/p\u003e\u003cp\u003eGet started by exploring our courses!\u003c/p\u003e\",\n  \"variables\": [\"userName\", \"userEmail\", \"activationLink\", \"coursesLink\"],\n  \"isActive\": true,\n  \"priority\": \"high\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/notifications/templates/:templateId",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"notifications",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "1"
										}
									]
								},
								"description": "Update existing notification template"
							},
							"response": []
						},
						{
							"name": "Delete Notification Template",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings/notifications/templates/:templateId",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"notifications",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "1"
										}
									]
								},
								"description": "Delete notification template"
							},
							"response": []
						}
					]
				},
				{
					"name": "Legal Pages Management",
					"item": [
						{
							"name": "Get Legal Pages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings/legal?type=\u0026isActive=true\u0026language=en",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"legal"
									],
									"query": [
										{
											"key": "type",
											"value": "",
											"description": "Legal page type (privacy, terms, refund, etc.)"
										},
										{
											"key": "isActive",
											"value": "true"
										},
										{
											"key": "language",
											"value": "en",
											"description": "Language code for localized content"
										}
									]
								},
								"description": "Get legal pages (privacy policy, terms of service, etc.)"
							},
							"response": []
						},
						{
							"name": "Create Legal Page",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"privacy_policy\",\n  \"title\": \"Privacy Policy\",\n  \"content\": \"\u003ch1\u003ePrivacy Policy\u003c/h1\u003e\u003cp\u003eThis privacy policy explains how we collect, use, and protect your personal information...\u003c/p\u003e\",\n  \"version\": \"1.0\",\n  \"effectiveDate\": \"2025-06-13T00:00:00Z\",\n  \"language\": \"en\",\n  \"isActive\": true,\n  \"requiresAcceptance\": true,\n  \"showInFooter\": true,\n  \"displayOrder\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/legal",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"legal"
									]
								},
								"description": "Create new legal page (privacy policy, terms, etc.)"
							},
							"response": []
						},
						{
							"name": "Update Legal Page",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Privacy Policy\",\n  \"content\": \"\u003ch1\u003eUpdated Privacy Policy\u003c/h1\u003e\u003cp\u003eThis updated privacy policy explains how we collect, use, and protect your personal information...\u003c/p\u003e\",\n  \"version\": \"2.0\",\n  \"effectiveDate\": \"2025-07-01T00:00:00Z\",\n  \"requiresAcceptance\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/legal/:pageId",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"legal",
										":pageId"
									],
									"variable": [
										{
											"key": "pageId",
											"value": "1"
										}
									]
								},
								"description": "Update existing legal page content and version"
							},
							"response": []
						}
					]
				},
				{
					"name": "System Configuration",
					"item": [
						{
							"name": "Get System Configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/settings/system/config?category=\u0026includeSecure=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"system",
										"config"
									],
									"query": [
										{
											"key": "category",
											"value": "",
											"description": "Configuration category (payment, email, storage, etc.)"
										},
										{
											"key": "includeSecure",
											"value": "false",
											"description": "Include secure/sensitive configuration values"
										}
									]
								},
								"description": "Get system configuration settings"
							},
							"response": []
						},
						{
							"name": "Update System Configuration",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configurations\": {\n    \"site_name\": \"StartGoals Platform\",\n    \"site_description\": \"Learn, Build, Achieve with StartGoals\",\n    \"max_file_size\": \"10MB\",\n    \"allowed_file_types\": [\"pdf\", \"doc\", \"docx\", \"zip\", \"jpg\", \"png\"],\n    \"email_verification_required\": true,\n    \"auto_course_approval\": false,\n    \"payment_gateway\": \"stripe\",\n    \"currency\": \"USD\",\n    \"time_zone\": \"UTC\",\n    \"maintenance_mode\": false,\n    \"registration_enabled\": true,\n    \"course_creation_enabled\": true,\n    \"project_download_enabled\": true\n  },\n  \"validateOnly\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/settings/system/config",
									"host": [
										"{{host}}"
									],
									"path": [
										"settings",
										"system",
										"config"
									]
								},
								"description": "Update system configuration settings (Admin only)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "API endpoints for skill management system",
			"name": "Skill Routes API Collection",
			"item": [
				{
					"name": "Bulk Upload Skills",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"skills\": [\n    {\n      \"name\": \"JavaScript\",\n      \"category\": \"Programming\",\n      \"level\": \"intermediate\",\n      \"goalId\": 1,\n      \"description\": \"JavaScript programming language\"\n    },\n    {\n      \"name\": \"React\",\n      \"category\": \"Frontend\",\n      \"level\": \"advanced\",\n      \"goalId\": 1,\n      \"description\": \"React library for building user interfaces\"\n    },\n    {\n      \"name\": \"Node.js\",\n      \"category\": \"Backend\",\n      \"level\": \"intermediate\",\n      \"goalId\": 1,\n      \"description\": \"Server-side JavaScript runtime\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/skill/saveAllSkills",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"saveAllSkills"
							]
						},
						"description": "Bulk upload multiple skills (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get All Skills",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/skill/getAllSkills",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"getAllSkills"
							]
						},
						"description": "Get all available skills"
					},
					"response": []
				},
				{
					"name": "Get Skills by Goal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/skill/getSkillsByGoal/:goalId",
							"host": [
								"{{host}}"
							],
							"path": [
								"skill",
								"getSkillsByGoal",
								":goalId"
							],
							"variable": [
								{
									"key": "goalId",
									"value": "1"
								}
							]
						},
						"description": "Get skills related to a specific goal"
					},
					"response": []
				}
			]
		},
		{
			"description": "CORRECTED API endpoints for comprehensive teacher management system with complete field coverage",
			"name": "Teacher Routes API Collection ",
			"item": [
				{
					"name": "Teacher CRUD Operations",
					"item": [
						{
							"name": "Get All Teachers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher?page=1\u0026limit=20\u0026search=john\u0026status=active\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "search",
											"value": "john",
											"description": "Search in firstName, lastName, username, email"
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by teacher status (active/inactive)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (createdAt, firstName, lastName, email)"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "Sort order (ASC, DESC)"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include teacher statistics (course count, student count, ratings)"
										}
									]
								},
								"description": "Get all teachers with comprehensive filtering, search, and statistics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Teacher by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher/:teacherId?includeStats=true\u0026includePerformance=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId"
									],
									"query": [
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include teacher statistics"
										},
										{
											"key": "includePerformance",
											"value": "true",
											"description": "Include performance metrics"
										}
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Get detailed teacher information including profile, statistics, courses, and performance metrics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Create Teacher",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"username\": \"johnsmith_teacher\",\n  \"email\": \"john.smith@example.com\",\n  \"mobile\": \"+1234567890\",\n  \"password\": \"SecurePassword123!\",\n  \"bio\": \"Experienced JavaScript instructor with 8+ years in web development\",\n  \"specialization\": [\"JavaScript\", \"React\", \"Node.js\", \"Full Stack Development\"],\n  \"qualifications\": [\n    {\n      \"degree\": \"Master of Computer Science\",\n      \"institution\": \"MIT\",\n      \"year\": \"2015\"\n    },\n    {\n      \"certification\": \"AWS Certified Solutions Architect\",\n      \"issuer\": \"Amazon Web Services\",\n      \"year\": \"2022\"\n    }\n  ],\n  \"experience\": 8,\n  \"hourlyRate\": 75.00,\n  \"availability\": {\n    \"monday\": [\"09:00-12:00\", \"14:00-17:00\"],\n    \"tuesday\": [\"09:00-12:00\", \"14:00-17:00\"],\n    \"wednesday\": [\"09:00-12:00\"],\n    \"thursday\": [\"09:00-12:00\", \"14:00-17:00\"],\n    \"friday\": [\"09:00-12:00\", \"14:00-17:00\"]\n  },\n  \"profileImage\": \"https://example.com/profile/john-smith.jpg\",\n  \"linkedinProfile\": \"https://linkedin.com/in/johnsmith\",\n  \"githubProfile\": \"https://github.com/johnsmith\",\n  \"isVerified\": true,\n  \"canCreateCourses\": true,\n  \"canManageBatches\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/teacher",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher"
									]
								},
								"description": "Create a new teacher with comprehensive profile information (Admin only)"
							},
							"response": []
						},
						{
							"name": "Update Teacher",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith Jr.\",\n  \"bio\": \"Senior JavaScript instructor with 9+ years in web development and cloud architecture\",\n  \"specialization\": [\"JavaScript\", \"React\", \"Node.js\", \"AWS\", \"Microservices\"],\n  \"hourlyRate\": 85.00,\n  \"availability\": {\n    \"monday\": [\"09:00-12:00\", \"14:00-18:00\"],\n    \"tuesday\": [\"09:00-12:00\", \"14:00-18:00\"],\n    \"wednesday\": [\"09:00-12:00\", \"14:00-16:00\"],\n    \"thursday\": [\"09:00-12:00\", \"14:00-18:00\"],\n    \"friday\": [\"09:00-12:00\", \"14:00-18:00\"]\n  },\n  \"isVerified\": true,\n  \"canCreateCourses\": true,\n  \"canManageBatches\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/teacher/:teacherId",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId"
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Update teacher profile and settings (Admin only)"
							},
							"response": []
						},
						{
							"name": "Delete Teacher",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher/:teacherId?transferCourses=true\u0026newTeacherId={{newTeacherId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId"
									],
									"query": [
										{
											"key": "transferCourses",
											"value": "true",
											"description": "Whether to transfer courses to another teacher"
										},
										{
											"key": "newTeacherId",
											"value": "{{newTeacherId}}",
											"description": "ID of teacher to transfer courses to"
										}
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Delete teacher with option to transfer courses (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Teacher Assignment Management",
					"item": [
						{
							"name": "Assign Teacher to Course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"teacherId\": \"{{teacherId}}\",\n  \"courseId\": \"{{courseId}}\",\n  \"role\": \"primary\",\n  \"permissions\": {\n    \"canEditContent\": true,\n    \"canManageStudents\": true,\n    \"canGradeAssignments\": true,\n    \"canCreateAssessments\": true\n  },\n  \"startDate\": \"2025-01-15\",\n  \"endDate\": \"2025-03-15\",\n  \"hourlyRate\": 75.00\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/teacher/assign-course",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										"assign-course"
									]
								},
								"description": "Assign teacher to course with specific permissions and settings (Admin only)"
							},
							"response": []
						},
						{
							"name": "Assign Teacher to Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"teacherId\": \"{{teacherId}}\",\n  \"batchId\": \"{{batchId}}\",\n  \"role\": \"instructor\",\n  \"permissions\": {\n    \"canTakeAttendance\": true,\n    \"canManageStudents\": true,\n    \"canScheduleSessions\": true,\n    \"canCreateAssignments\": true\n  },\n  \"specialization\": [\"JavaScript\", \"Frontend Development\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/teacher/assign-batch",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										"assign-batch"
									]
								},
								"description": "Assign teacher to batch with specific role and permissions (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Teacher Assigned Courses",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher/:teacherId/courses?status=active\u0026includeStats=true\u0026page=1\u0026limit=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId",
										"courses"
									],
									"query": [
										{
											"key": "status",
											"value": "active",
											"description": "Filter by course status"
										},
										{
											"key": "includeStats",
											"value": "true",
											"description": "Include course statistics"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Number of results per page"
										}
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Get all courses assigned to a specific teacher with statistics (Admin only)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Teacher Performance \u0026 Analytics",
					"item": [
						{
							"name": "Get Teacher Performance Report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher/:teacherId/performance?period=6m\u0026includeComparisons=true\u0026includeTrends=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId",
										"performance"
									],
									"query": [
										{
											"key": "period",
											"value": "6m",
											"description": "Time period for analysis (1m, 3m, 6m, 1y, all)"
										},
										{
											"key": "includeComparisons",
											"value": "true",
											"description": "Include comparisons with other teachers"
										},
										{
											"key": "includeTrends",
											"value": "true",
											"description": "Include performance trends over time"
										}
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Get comprehensive teacher performance report with analytics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Teacher Student Feedback",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/teacher/:teacherId/feedback?courseId={{courseId}}\u0026ratingFilter=4\u0026page=1\u0026limit=20\u0026includeAnalytics=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"teacher",
										":teacherId",
										"feedback"
									],
									"query": [
										{
											"key": "courseId",
											"value": "{{courseId}}",
											"description": "Filter feedback by specific course"
										},
										{
											"key": "ratingFilter",
											"value": "4",
											"description": "Filter by minimum rating (1-5)"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number for pagination"
										},
										{
											"key": "limit",
											"value": "20",
											"description": "Number of results per page"
										},
										{
											"key": "includeAnalytics",
											"value": "true",
											"description": "Include feedback analytics and trends"
										}
									],
									"variable": [
										{
											"key": "teacherId",
											"value": "{{teacherId}}"
										}
									]
								},
								"description": "Get student feedback and ratings for teacher with analytics (Admin only)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"description": "Complete unified search API endpoints for searching courses, projects, and instructors with advanced filtering",
			"name": "Unified Search Routes API Collection ",
			"item": [
				{
					"name": "Search Suggestions",
					"item": [
						{
							"name": "Get Unified Search Suggestions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"description": "Optional: User token for personalized suggestions"
									}
								],
								"url": {
									"raw": "{{host}}/search/suggestions?query=javascript\u0026limit=10\u0026type=all",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"suggestions"
									],
									"query": [
										{
											"key": "query",
											"value": "javascript",
											"description": "Search query (minimum 2 characters)"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Maximum number of suggestions (default: 10)"
										},
										{
											"key": "type",
											"value": "all",
											"description": "Search type: all, courses, projects, instructors"
										}
									]
								},
								"description": "Get autocomplete suggestions across courses, projects, and instructors"
							}
						},
						{
							"name": "Get Course-Only Suggestions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/suggestions?query=react\u0026limit=8\u0026type=courses",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"suggestions"
									],
									"query": [
										{
											"key": "query",
											"value": "react"
										},
										{
											"key": "limit",
											"value": "8"
										},
										{
											"key": "type",
											"value": "courses"
										}
									]
								},
								"description": "Get suggestions filtered to courses only"
							}
						},
						{
							"name": "Get Project-Only Suggestions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/suggestions?query=mobile\u0026limit=8\u0026type=projects",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"suggestions"
									],
									"query": [
										{
											"key": "query",
											"value": "mobile"
										},
										{
											"key": "limit",
											"value": "8"
										},
										{
											"key": "type",
											"value": "projects"
										}
									]
								},
								"description": "Get suggestions filtered to projects only"
							}
						},
						{
							"name": "Get Instructor Suggestions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/suggestions?query=john\u0026limit=5\u0026type=instructors",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"suggestions"
									],
									"query": [
										{
											"key": "query",
											"value": "john"
										},
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "type",
											"value": "instructors"
										}
									]
								},
								"description": "Get suggestions filtered to instructors only"
							}
						}
					],
					"description": "Unified search suggestion endpoints for autocomplete functionality"
				},
				{
					"name": "Unified Search",
					"item": [
						{
							"name": "Search Courses and Projects (All)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"description": "Optional: User token for search analytics"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?query=javascript\u0026type=all\u0026page=1\u0026limit=12\u0026sort=relevance",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "query",
											"value": "javascript",
											"description": "Search query"
										},
										{
											"key": "type",
											"value": "all",
											"description": "Search type: all, courses, projects"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number (default: 1)"
										},
										{
											"key": "limit",
											"value": "12",
											"description": "Items per page (default: 12)"
										},
										{
											"key": "sort",
											"value": "relevance",
											"description": "Sort by: relevance, price_low, price_high, newest, rating, popular"
										}
									]
								},
								"description": "Search across both courses and projects with unified results"
							}
						},
						{
							"name": "Search with Advanced Filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?query=web development\u0026type=all\u0026category=1\u0026price_min=10\u0026price_max=100\u0026difficulty=intermediate\u0026programmingLanguages=JavaScript,HTML\u0026sort=rating\u0026page=1\u0026limit=15",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "query",
											"value": "web development"
										},
										{
											"key": "type",
											"value": "all"
										},
										{
											"key": "category",
											"value": "1",
											"description": "Category ID filter"
										},
										{
											"key": "price_min",
											"value": "10",
											"description": "Minimum price filter"
										},
										{
											"key": "price_max",
											"value": "100",
											"description": "Maximum price filter"
										},
										{
											"key": "difficulty",
											"value": "intermediate",
											"description": "Difficulty level (for projects): beginner, intermediate, advanced"
										},
										{
											"key": "programmingLanguages",
											"value": "JavaScript,HTML",
											"description": "Programming languages (comma-separated)"
										},
										{
											"key": "sort",
											"value": "rating"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "15"
										}
									]
								},
								"description": "Search with comprehensive filtering options"
							}
						},
						{
							"name": "Search Courses Only with Filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?query=python\u0026type=courses\u0026level=2\u0026duration_min=60\u0026duration_max=300\u0026language=1\u0026instructor=5\u0026tags=1,2,3\u0026sort=popular\u0026page=1\u0026limit=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "query",
											"value": "python"
										},
										{
											"key": "type",
											"value": "courses"
										},
										{
											"key": "level",
											"value": "2",
											"description": "Course level ID"
										},
										{
											"key": "duration_min",
											"value": "60",
											"description": "Minimum duration in minutes"
										},
										{
											"key": "duration_max",
											"value": "300",
											"description": "Maximum duration in minutes"
										},
										{
											"key": "language",
											"value": "1",
											"description": "Language ID"
										},
										{
											"key": "instructor",
											"value": "5",
											"description": "Instructor/creator ID"
										},
										{
											"key": "tags",
											"value": "1,2,3",
											"description": "Tag IDs (comma-separated)"
										},
										{
											"key": "sort",
											"value": "popular"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Search courses with course-specific filters"
							}
						},
						{
							"name": "Search Projects Only with Filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?query=mobile app\u0026type=projects\u0026category=3\u0026price_min=5\u0026price_max=50\u0026difficulty=beginner\u0026programmingLanguages=React Native,Flutter\u0026tags=2,4\u0026sort=newest\u0026page=1\u0026limit=8",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "query",
											"value": "mobile app"
										},
										{
											"key": "type",
											"value": "projects"
										},
										{
											"key": "category",
											"value": "3"
										},
										{
											"key": "price_min",
											"value": "5"
										},
										{
											"key": "price_max",
											"value": "50"
										},
										{
											"key": "difficulty",
											"value": "beginner"
										},
										{
											"key": "programmingLanguages",
											"value": "React Native,Flutter"
										},
										{
											"key": "tags",
											"value": "2,4"
										},
										{
											"key": "sort",
											"value": "newest"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "8"
										}
									]
								},
								"description": "Search projects with project-specific filters"
							}
						},
						{
							"name": "Search by Price Range",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?type=all\u0026price_min=0\u0026price_max=25\u0026sort=price_low\u0026page=1\u0026limit=20",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "type",
											"value": "all"
										},
										{
											"key": "price_min",
											"value": "0"
										},
										{
											"key": "price_max",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "price_low"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								},
								"description": "Search items within specific price range"
							}
						},
						{
							"name": "Search by Instructor/Creator",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/search/unified?type=all\u0026instructor=3\u0026sort=newest\u0026page=1\u0026limit=12",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"unified"
									],
									"query": [
										{
											"key": "type",
											"value": "all"
										},
										{
											"key": "instructor",
											"value": "3",
											"description": "Find all content by specific instructor/creator"
										},
										{
											"key": "sort",
											"value": "newest"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "12"
										}
									]
								},
								"description": "Search all content by specific instructor or creator"
							}
						}
					],
					"description": "Unified search endpoints for comprehensive search across courses and projects"
				},
				{
					"name": "Search Filters",
					"item": [
						{
							"name": "Get All Search Filters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/search/filters?type=all",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"filters"
									],
									"query": [
										{
											"key": "type",
											"value": "all",
											"description": "Filter type: all, courses, projects"
										}
									]
								},
								"description": "Get all available search filters for courses and projects"
							}
						},
						{
							"name": "Get Course Filters Only",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/search/filters?type=courses",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"filters"
									],
									"query": [
										{
											"key": "type",
											"value": "courses"
										}
									]
								},
								"description": "Get filters specific to course searches"
							}
						},
						{
							"name": "Get Project Filters Only",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/search/filters?type=projects",
									"host": [
										"{{host}}"
									],
									"path": [
										"search",
										"filters"
									],
									"query": [
										{
											"key": "type",
											"value": "projects"
										}
									]
								},
								"description": "Get filters specific to project searches"
							}
						}
					],
					"description": "Search filter endpoints to get available filter options"
				}
			]
		},
		{
			"description": "Comprehensive API endpoints for user authentication and student management with all available fields",
			"name": "User Routes API Collection ",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "User Registration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"john_doe\",\n  \"email\": \"john@example.com\",\n  \"mobile\": \"+1234567890\",\n  \"password\": \"SecurePassword123\",\n  \"role\": \"student\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/userRegistration",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"userRegistration"
									]
								},
								"description": "Register a new user. Email or mobile is required. Password is required for non-student roles. Role options: student, teacher, admin"
							},
							"response": []
						},
						{
							"name": "User Login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"john@example.com\",\n  \"password\": \"SecurePassword123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/userLogin",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"userLogin"
									]
								},
								"description": "Login user. Identifier can be email or mobile. For students, OTP is sent. For other roles, password authentication is used."
							},
							"response": []
						},
						{
							"name": "User Login (Student with OTP)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"student@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/userLogin",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"userLogin"
									]
								},
								"description": "Login for student role - sends OTP to identifier (email/mobile)"
							},
							"response": []
						},
						{
							"name": "Google Login",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/user/googleLogin",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"googleLogin"
									]
								},
								"description": "Initiate Google OAuth login"
							},
							"response": []
						},
						{
							"name": "Google Auth Callback",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/user/auth/google/callback",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"auth",
										"google",
										"callback"
									]
								},
								"description": "Google OAuth callback endpoint"
							},
							"response": []
						},
						{
							"name": "Auth Callback Success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/auth/callback/success",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"auth",
										"callback",
										"success"
									]
								},
								"description": "Handle successful authentication callback"
							},
							"response": []
						}
					]
				},
				{
					"name": "User Profile",
					"item": [
						{
							"name": "Get User Details by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/usersDetailsById/:userId",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"usersDetailsById",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								},
								"description": "Get user details by ID including languages, goals, and skills"
							},
							"response": []
						},
						{
							"name": "Get Homepage",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/homepage",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"homepage"
									]
								},
								"description": "Get homepage data including banners, courses, categories, and user\u0027s enrolled courses"
							},
							"response": []
						}
					]
				},
				{
					"name": "Skills Management (Missing Routes)",
					"description": "These endpoints exist in controller but are missing from routes",
					"item": [
						{
							"name": "Add User Skills (Missing Route)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillIds\": [1, 2, 3, 4]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/skills",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"skills"
									]
								},
								"description": "Add skills to user profile - ROUTE MISSING IN userRoutes.js"
							},
							"response": []
						},
						{
							"name": "Get User Skills (Missing Route)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/skills",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"skills"
									]
								},
								"description": "Get user\u0027s skills - ROUTE MISSING IN userRoutes.js"
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin - Student Management",
					"item": [
						{
							"name": "Get All Students",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/admin/students?page=1\u0026limit=20\u0026search=\u0026status=active\u0026sortBy=createdAt\u0026sortOrder=DESC\u0026includeStats=true\u0026enrollmentStatus=",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "search",
											"value": ""
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "sortBy",
											"value": "createdAt"
										},
										{
											"key": "sortOrder",
											"value": "DESC"
										},
										{
											"key": "includeStats",
											"value": "true"
										},
										{
											"key": "enrollmentStatus",
											"value": ""
										}
									]
								},
								"description": "Get all students with filters and pagination (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Student Analytics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/admin/students/analytics?period=month\u0026includeGrowth=true\u0026includeDemographics=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students",
										"analytics"
									],
									"query": [
										{
											"key": "period",
											"value": "month"
										},
										{
											"key": "includeGrowth",
											"value": "true"
										},
										{
											"key": "includeDemographics",
											"value": "true"
										}
									]
								},
								"description": "Get student analytics and statistics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Get Student by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/admin/students/:studentId?includeEnrollments=true\u0026includeProgress=true\u0026includeAnalytics=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students",
										":studentId"
									],
									"query": [
										{
											"key": "includeEnrollments",
											"value": "true"
										},
										{
											"key": "includeProgress",
											"value": "true"
										},
										{
											"key": "includeAnalytics",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "studentId",
											"value": "1"
										}
									]
								},
								"description": "Get detailed student profile with enrollments, progress, and analytics (Admin only)"
							},
							"response": []
						},
						{
							"name": "Create Student",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"username\": \"john_doe_student\",\n  \"email\": \"john.student@example.com\",\n  \"mobile\": \"+1234567890\",\n  \"password\": \"SecurePassword123\",\n  \"dateOfBirth\": \"1995-05-15\",\n  \"address\": \"123 Main Street\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"country\": \"USA\",\n  \"pincode\": \"10001\",\n  \"emergencyContact\": \"+1987654321\",\n  \"isVerified\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/admin/students/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students",
										"create"
									]
								},
								"description": "Create new student with complete profile information (Admin only)"
							},
							"response": []
						},
						{
							"name": "Update Student",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe\",\n  \"username\": \"john_updated\",\n  \"email\": \"john.updated@example.com\",\n  \"mobile\": \"+1234567890\",\n  \"dateOfBirth\": \"1995-05-15\",\n  \"address\": \"456 Updated Street\",\n  \"city\": \"Los Angeles\",\n  \"state\": \"CA\",\n  \"country\": \"USA\",\n  \"pincode\": \"90210\",\n  \"emergencyContact\": \"+1987654321\",\n  \"isActive\": true,\n  \"isVerified\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/user/admin/students/:studentId",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students",
										":studentId"
									],
									"variable": [
										{
											"key": "studentId",
											"value": "1"
										}
									]
								},
								"description": "Update student information with all available fields (Admin only)"
							},
							"response": []
						},
						{
							"name": "Delete Student",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/user/admin/students/:studentId?deleteType=soft\u0026reason=Requested by user",
									"host": [
										"{{host}}"
									],
									"path": [
										"user",
										"admin",
										"students",
										":studentId"
									],
									"query": [
										{
											"key": "deleteType",
											"value": "soft"
										},
										{
											"key": "reason",
											"value": "Requested by user"
										}
									],
									"variable": [
										{
											"key": "studentId",
											"value": "1"
										}
									]
								},
								"description": "Delete student (soft/hard delete with reason) (Admin only)"
							},
							"response": []
						}
					]
				}
			]
		}
	]
}